"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-spring";
exports.ids = ["vendor-chunks/@react-spring"];
exports.modules = {

/***/ "(ssr)/./node_modules/@react-spring/animated/dist/react-spring_animated.modern.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@react-spring/animated/dist/react-spring_animated.modern.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Animated: () => (/* binding */ Animated),\n/* harmony export */   AnimatedArray: () => (/* binding */ AnimatedArray),\n/* harmony export */   AnimatedObject: () => (/* binding */ AnimatedObject),\n/* harmony export */   AnimatedString: () => (/* binding */ AnimatedString),\n/* harmony export */   AnimatedValue: () => (/* binding */ AnimatedValue),\n/* harmony export */   createHost: () => (/* binding */ createHost),\n/* harmony export */   getAnimated: () => (/* binding */ getAnimated),\n/* harmony export */   getAnimatedType: () => (/* binding */ getAnimatedType),\n/* harmony export */   getPayload: () => (/* binding */ getPayload),\n/* harmony export */   isAnimated: () => (/* binding */ isAnimated),\n/* harmony export */   setAnimated: () => (/* binding */ setAnimated)\n/* harmony export */ });\n/* harmony import */ var _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-spring/shared */ \"(ssr)/./node_modules/@react-spring/shared/dist/react-spring_shared.modern.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n// src/Animated.ts\r\n\r\nvar $node = Symbol.for(\"Animated:node\");\r\nvar isAnimated = (value) => !!value && value[$node] === value;\r\nvar getAnimated = (owner) => owner && owner[$node];\r\nvar setAnimated = (owner, node) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.defineHidden)(owner, $node, node);\r\nvar getPayload = (owner) => owner && owner[$node] && owner[$node].getPayload();\r\nvar Animated = class {\r\n  constructor() {\r\n    setAnimated(this, this);\r\n  }\r\n  /** Get every `AnimatedValue` used by this node. */\r\n  getPayload() {\r\n    return this.payload || [];\r\n  }\r\n};\r\n\r\n// src/AnimatedValue.ts\r\n\r\nvar AnimatedValue = class extends Animated {\r\n  constructor(_value) {\r\n    super();\r\n    this._value = _value;\r\n    this.done = true;\r\n    this.durationProgress = 0;\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.num(this._value)) {\r\n      this.lastPosition = this._value;\r\n    }\r\n  }\r\n  /** @internal */\r\n  static create(value) {\r\n    return new AnimatedValue(value);\r\n  }\r\n  getPayload() {\r\n    return [this];\r\n  }\r\n  getValue() {\r\n    return this._value;\r\n  }\r\n  setValue(value, step) {\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.num(value)) {\r\n      this.lastPosition = value;\r\n      if (step) {\r\n        value = Math.round(value / step) * step;\r\n        if (this.done) {\r\n          this.lastPosition = value;\r\n        }\r\n      }\r\n    }\r\n    if (this._value === value) {\r\n      return false;\r\n    }\r\n    this._value = value;\r\n    return true;\r\n  }\r\n  reset() {\r\n    const { done } = this;\r\n    this.done = false;\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.num(this._value)) {\r\n      this.elapsedTime = 0;\r\n      this.durationProgress = 0;\r\n      this.lastPosition = this._value;\r\n      if (done)\r\n        this.lastVelocity = null;\r\n      this.v0 = null;\r\n    }\r\n  }\r\n};\r\n\r\n// src/AnimatedString.ts\r\n\r\nvar AnimatedString = class extends AnimatedValue {\r\n  constructor(value) {\r\n    super(0);\r\n    this._string = null;\r\n    this._toString = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.createInterpolator)({\r\n      output: [value, value]\r\n    });\r\n  }\r\n  /** @internal */\r\n  static create(value) {\r\n    return new AnimatedString(value);\r\n  }\r\n  getValue() {\r\n    const value = this._string;\r\n    return value == null ? this._string = this._toString(this._value) : value;\r\n  }\r\n  setValue(value) {\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.str(value)) {\r\n      if (value == this._string) {\r\n        return false;\r\n      }\r\n      this._string = value;\r\n      this._value = 1;\r\n    } else if (super.setValue(value)) {\r\n      this._string = null;\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  reset(goal) {\r\n    if (goal) {\r\n      this._toString = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.createInterpolator)({\r\n        output: [this.getValue(), goal]\r\n      });\r\n    }\r\n    this._value = 0;\r\n    super.reset();\r\n  }\r\n};\r\n\r\n// src/AnimatedArray.ts\r\n\r\n\r\n// src/AnimatedObject.ts\r\n\r\n\r\n// src/context.ts\r\nvar TreeContext = { dependencies: null };\r\n\r\n// src/AnimatedObject.ts\r\nvar AnimatedObject = class extends Animated {\r\n  constructor(source) {\r\n    super();\r\n    this.source = source;\r\n    this.setValue(source);\r\n  }\r\n  getValue(animated) {\r\n    const values = {};\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(this.source, (source, key) => {\r\n      if (isAnimated(source)) {\r\n        values[key] = source.getValue(animated);\r\n      } else if ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(source)) {\r\n        values[key] = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(source);\r\n      } else if (!animated) {\r\n        values[key] = source;\r\n      }\r\n    });\r\n    return values;\r\n  }\r\n  /** Replace the raw object data */\r\n  setValue(source) {\r\n    this.source = source;\r\n    this.payload = this._makePayload(source);\r\n  }\r\n  reset() {\r\n    if (this.payload) {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(this.payload, (node) => node.reset());\r\n    }\r\n  }\r\n  /** Create a payload set. */\r\n  _makePayload(source) {\r\n    if (source) {\r\n      const payload = /* @__PURE__ */ new Set();\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(source, this._addToPayload, payload);\r\n      return Array.from(payload);\r\n    }\r\n  }\r\n  /** Add to a payload set. */\r\n  _addToPayload(source) {\r\n    if (TreeContext.dependencies && (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(source)) {\r\n      TreeContext.dependencies.add(source);\r\n    }\r\n    const payload = getPayload(source);\r\n    if (payload) {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(payload, (node) => this.add(node));\r\n    }\r\n  }\r\n};\r\n\r\n// src/AnimatedArray.ts\r\nvar AnimatedArray = class extends AnimatedObject {\r\n  constructor(source) {\r\n    super(source);\r\n  }\r\n  /** @internal */\r\n  static create(source) {\r\n    return new AnimatedArray(source);\r\n  }\r\n  getValue() {\r\n    return this.source.map((node) => node.getValue());\r\n  }\r\n  setValue(source) {\r\n    const payload = this.getPayload();\r\n    if (source.length == payload.length) {\r\n      return payload.map((node, i) => node.setValue(source[i])).some(Boolean);\r\n    }\r\n    super.setValue(source.map(makeAnimated));\r\n    return true;\r\n  }\r\n};\r\nfunction makeAnimated(value) {\r\n  const nodeType = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isAnimatedString)(value) ? AnimatedString : AnimatedValue;\r\n  return nodeType.create(value);\r\n}\r\n\r\n// src/getAnimatedType.ts\r\n\r\nfunction getAnimatedType(value) {\r\n  const parentNode = getAnimated(value);\r\n  return parentNode ? parentNode.constructor : _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(value) ? AnimatedArray : (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isAnimatedString)(value) ? AnimatedString : AnimatedValue;\r\n}\r\n\r\n// src/createHost.ts\r\n\r\n\r\n// src/withAnimated.tsx\r\n\r\n\r\n\r\nvar withAnimated = (Component, host) => {\r\n  const hasInstance = (\r\n    // Function components must use \"forwardRef\" to avoid being\r\n    // re-rendered on every animation frame.\r\n    !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(Component) || Component.prototype && Component.prototype.isReactComponent\r\n  );\r\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((givenProps, givenRef) => {\r\n    const instanceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\r\n    const ref = hasInstance && // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\r\n      (value) => {\r\n        instanceRef.current = updateRef(givenRef, value);\r\n      },\r\n      [givenRef]\r\n    );\r\n    const [props, deps] = getAnimatedState(givenProps, host);\r\n    const forceUpdate = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useForceUpdate)();\r\n    const callback = () => {\r\n      const instance = instanceRef.current;\r\n      if (hasInstance && !instance) {\r\n        return;\r\n      }\r\n      const didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\r\n      if (didUpdate === false) {\r\n        forceUpdate();\r\n      }\r\n    };\r\n    const observer = new PropsObserver(callback, deps);\r\n    const observerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n      observerRef.current = observer;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(deps, (dep) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.addFluidObserver)(dep, observer));\r\n      return () => {\r\n        if (observerRef.current) {\r\n          (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(\r\n            observerRef.current.deps,\r\n            (dep) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.removeFluidObserver)(dep, observerRef.current)\r\n          );\r\n          _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.cancel(observerRef.current.update);\r\n        }\r\n      };\r\n    });\r\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(callback, []);\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useOnce)(() => () => {\r\n      const observer2 = observerRef.current;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(observer2.deps, (dep) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.removeFluidObserver)(dep, observer2));\r\n    });\r\n    const usedProps = host.getComponentProps(props.getValue());\r\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Component, { ...usedProps, ref });\r\n  });\r\n};\r\nvar PropsObserver = class {\r\n  constructor(update, deps) {\r\n    this.update = update;\r\n    this.deps = deps;\r\n  }\r\n  eventObserved(event) {\r\n    if (event.type == \"change\") {\r\n      _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.write(this.update);\r\n    }\r\n  }\r\n};\r\nfunction getAnimatedState(props, host) {\r\n  const dependencies = /* @__PURE__ */ new Set();\r\n  TreeContext.dependencies = dependencies;\r\n  if (props.style)\r\n    props = {\r\n      ...props,\r\n      style: host.createAnimatedStyle(props.style)\r\n    };\r\n  props = new AnimatedObject(props);\r\n  TreeContext.dependencies = null;\r\n  return [props, dependencies];\r\n}\r\nfunction updateRef(ref, value) {\r\n  if (ref) {\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(ref))\r\n      ref(value);\r\n    else\r\n      ref.current = value;\r\n  }\r\n  return value;\r\n}\r\n\r\n// src/createHost.ts\r\nvar cacheKey = Symbol.for(\"AnimatedComponent\");\r\nvar createHost = (components, {\r\n  applyAnimatedValues = () => false,\r\n  createAnimatedStyle = (style) => new AnimatedObject(style),\r\n  getComponentProps = (props) => props\r\n} = {}) => {\r\n  const hostConfig = {\r\n    applyAnimatedValues,\r\n    createAnimatedStyle,\r\n    getComponentProps\r\n  };\r\n  const animated = (Component) => {\r\n    const displayName = getDisplayName(Component) || \"Anonymous\";\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.str(Component)) {\r\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\r\n    } else {\r\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\r\n    }\r\n    Component.displayName = `Animated(${displayName})`;\r\n    return Component;\r\n  };\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(components, (Component, key) => {\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(components)) {\r\n      key = getDisplayName(Component);\r\n    }\r\n    animated[key] = animated(Component);\r\n  });\r\n  return {\r\n    animated\r\n  };\r\n};\r\nvar getDisplayName = (arg) => _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.str(arg) ? arg : arg && _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.str(arg.displayName) ? arg.displayName : _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(arg) && arg.name || null;\r\n\r\n//# sourceMappingURL=react-spring_animated.modern.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXNwcmluZy9hbmltYXRlZC9kaXN0L3JlYWN0LXNwcmluZ19hbmltYXRlZC5tb2Rlcm4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0VBQVk7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0RBQUU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxvREFBRTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBLFFBQVEsb0RBQUU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FFO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHdFQUFrQjtBQUN2QztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0RBQUc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix3RUFBa0I7QUFDekM7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0Q7QUFDeEQ7QUFDQTtBQU04QjtBQUM5QjtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4REFBUTtBQUNaO0FBQ0E7QUFDQSxRQUFRLFNBQVMsbUVBQWE7QUFDOUIsc0JBQXNCLG1FQUFhO0FBQ25DLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sMERBQUk7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDhEQUFRO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxtRUFBYTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sMERBQUk7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHNFQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUN3RjtBQUN4RjtBQUNBO0FBQ0EsK0NBQStDLG9EQUFHLDhCQUE4QixzRUFBaUI7QUFDakc7QUFDQTtBQUNBO0FBQ3dFO0FBQ3hFO0FBQ0E7QUFDK0I7QUFDb0M7QUFVckM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLG9EQUFHO0FBQ1I7QUFDQSxTQUFTLGlEQUFVO0FBQ25CLHdCQUF3Qiw2Q0FBTTtBQUM5QjtBQUNBLElBQUksa0RBQVc7QUFDZjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvRUFBYztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDZDQUFNO0FBQzlCLElBQUksK0VBQXlCO0FBQzdCO0FBQ0EsTUFBTSwwREFBSyxnQkFBZ0Isc0VBQWdCO0FBQzNDO0FBQ0E7QUFDQSxVQUFVLDBEQUFLO0FBQ2Y7QUFDQSxxQkFBcUIseUVBQW1CO0FBQ3hDO0FBQ0EsVUFBVSxxREFBRztBQUNiO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSxnREFBUztBQUNiLElBQUksNkRBQU87QUFDWDtBQUNBLE1BQU0sMERBQUssMEJBQTBCLHlFQUFtQjtBQUN4RCxLQUFLO0FBQ0w7QUFDQSwyQkFBMkIsZ0RBQW1CLGNBQWMsbUJBQW1CO0FBQy9FLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxxREFBRztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9EQUFHO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLElBQUk7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0RBQUc7QUFDWDtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQ7QUFDQTtBQUNBLEVBQUUsOERBQVM7QUFDWCxRQUFRLG9EQUFHO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG9EQUFHLHlCQUF5QixvREFBRywwQ0FBMEMsb0RBQUc7QUFheEc7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9AcmVhY3Qtc3ByaW5nL2FuaW1hdGVkL2Rpc3QvcmVhY3Qtc3ByaW5nX2FuaW1hdGVkLm1vZGVybi5tanM/ZmVhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvQW5pbWF0ZWQudHNcclxuaW1wb3J0IHsgZGVmaW5lSGlkZGVuIH0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcbnZhciAkbm9kZSA9IFN5bWJvbC5mb3IoXCJBbmltYXRlZDpub2RlXCIpO1xyXG52YXIgaXNBbmltYXRlZCA9ICh2YWx1ZSkgPT4gISF2YWx1ZSAmJiB2YWx1ZVskbm9kZV0gPT09IHZhbHVlO1xyXG52YXIgZ2V0QW5pbWF0ZWQgPSAob3duZXIpID0+IG93bmVyICYmIG93bmVyWyRub2RlXTtcclxudmFyIHNldEFuaW1hdGVkID0gKG93bmVyLCBub2RlKSA9PiBkZWZpbmVIaWRkZW4ob3duZXIsICRub2RlLCBub2RlKTtcclxudmFyIGdldFBheWxvYWQgPSAob3duZXIpID0+IG93bmVyICYmIG93bmVyWyRub2RlXSAmJiBvd25lclskbm9kZV0uZ2V0UGF5bG9hZCgpO1xyXG52YXIgQW5pbWF0ZWQgPSBjbGFzcyB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzZXRBbmltYXRlZCh0aGlzLCB0aGlzKTtcclxuICB9XHJcbiAgLyoqIEdldCBldmVyeSBgQW5pbWF0ZWRWYWx1ZWAgdXNlZCBieSB0aGlzIG5vZGUuICovXHJcbiAgZ2V0UGF5bG9hZCgpIHtcclxuICAgIHJldHVybiB0aGlzLnBheWxvYWQgfHwgW107XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gc3JjL0FuaW1hdGVkVmFsdWUudHNcclxuaW1wb3J0IHsgaXMgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxudmFyIEFuaW1hdGVkVmFsdWUgPSBjbGFzcyBleHRlbmRzIEFuaW1hdGVkIHtcclxuICBjb25zdHJ1Y3RvcihfdmFsdWUpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLl92YWx1ZSA9IF92YWx1ZTtcclxuICAgIHRoaXMuZG9uZSA9IHRydWU7XHJcbiAgICB0aGlzLmR1cmF0aW9uUHJvZ3Jlc3MgPSAwO1xyXG4gICAgaWYgKGlzLm51bSh0aGlzLl92YWx1ZSkpIHtcclxuICAgICAgdGhpcy5sYXN0UG9zaXRpb24gPSB0aGlzLl92YWx1ZTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gIHN0YXRpYyBjcmVhdGUodmFsdWUpIHtcclxuICAgIHJldHVybiBuZXcgQW5pbWF0ZWRWYWx1ZSh2YWx1ZSk7XHJcbiAgfVxyXG4gIGdldFBheWxvYWQoKSB7XHJcbiAgICByZXR1cm4gW3RoaXNdO1xyXG4gIH1cclxuICBnZXRWYWx1ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl92YWx1ZTtcclxuICB9XHJcbiAgc2V0VmFsdWUodmFsdWUsIHN0ZXApIHtcclxuICAgIGlmIChpcy5udW0odmFsdWUpKSB7XHJcbiAgICAgIHRoaXMubGFzdFBvc2l0aW9uID0gdmFsdWU7XHJcbiAgICAgIGlmIChzdGVwKSB7XHJcbiAgICAgICAgdmFsdWUgPSBNYXRoLnJvdW5kKHZhbHVlIC8gc3RlcCkgKiBzdGVwO1xyXG4gICAgICAgIGlmICh0aGlzLmRvbmUpIHtcclxuICAgICAgICAgIHRoaXMubGFzdFBvc2l0aW9uID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5fdmFsdWUgPT09IHZhbHVlKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbiAgcmVzZXQoKSB7XHJcbiAgICBjb25zdCB7IGRvbmUgfSA9IHRoaXM7XHJcbiAgICB0aGlzLmRvbmUgPSBmYWxzZTtcclxuICAgIGlmIChpcy5udW0odGhpcy5fdmFsdWUpKSB7XHJcbiAgICAgIHRoaXMuZWxhcHNlZFRpbWUgPSAwO1xyXG4gICAgICB0aGlzLmR1cmF0aW9uUHJvZ3Jlc3MgPSAwO1xyXG4gICAgICB0aGlzLmxhc3RQb3NpdGlvbiA9IHRoaXMuX3ZhbHVlO1xyXG4gICAgICBpZiAoZG9uZSlcclxuICAgICAgICB0aGlzLmxhc3RWZWxvY2l0eSA9IG51bGw7XHJcbiAgICAgIHRoaXMudjAgPSBudWxsO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbi8vIHNyYy9BbmltYXRlZFN0cmluZy50c1xyXG5pbXBvcnQgeyBpcyBhcyBpczIsIGNyZWF0ZUludGVycG9sYXRvciB9IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG52YXIgQW5pbWF0ZWRTdHJpbmcgPSBjbGFzcyBleHRlbmRzIEFuaW1hdGVkVmFsdWUge1xyXG4gIGNvbnN0cnVjdG9yKHZhbHVlKSB7XHJcbiAgICBzdXBlcigwKTtcclxuICAgIHRoaXMuX3N0cmluZyA9IG51bGw7XHJcbiAgICB0aGlzLl90b1N0cmluZyA9IGNyZWF0ZUludGVycG9sYXRvcih7XHJcbiAgICAgIG91dHB1dDogW3ZhbHVlLCB2YWx1ZV1cclxuICAgIH0pO1xyXG4gIH1cclxuICAvKiogQGludGVybmFsICovXHJcbiAgc3RhdGljIGNyZWF0ZSh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIG5ldyBBbmltYXRlZFN0cmluZyh2YWx1ZSk7XHJcbiAgfVxyXG4gIGdldFZhbHVlKCkge1xyXG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9zdHJpbmc7XHJcbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IHRoaXMuX3N0cmluZyA9IHRoaXMuX3RvU3RyaW5nKHRoaXMuX3ZhbHVlKSA6IHZhbHVlO1xyXG4gIH1cclxuICBzZXRWYWx1ZSh2YWx1ZSkge1xyXG4gICAgaWYgKGlzMi5zdHIodmFsdWUpKSB7XHJcbiAgICAgIGlmICh2YWx1ZSA9PSB0aGlzLl9zdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5fc3RyaW5nID0gdmFsdWU7XHJcbiAgICAgIHRoaXMuX3ZhbHVlID0gMTtcclxuICAgIH0gZWxzZSBpZiAoc3VwZXIuc2V0VmFsdWUodmFsdWUpKSB7XHJcbiAgICAgIHRoaXMuX3N0cmluZyA9IG51bGw7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbiAgcmVzZXQoZ29hbCkge1xyXG4gICAgaWYgKGdvYWwpIHtcclxuICAgICAgdGhpcy5fdG9TdHJpbmcgPSBjcmVhdGVJbnRlcnBvbGF0b3Ioe1xyXG4gICAgICAgIG91dHB1dDogW3RoaXMuZ2V0VmFsdWUoKSwgZ29hbF1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl92YWx1ZSA9IDA7XHJcbiAgICBzdXBlci5yZXNldCgpO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIHNyYy9BbmltYXRlZEFycmF5LnRzXHJcbmltcG9ydCB7IGlzQW5pbWF0ZWRTdHJpbmcgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuXHJcbi8vIHNyYy9BbmltYXRlZE9iamVjdC50c1xyXG5pbXBvcnQge1xyXG4gIGVhY2gsXHJcbiAgZWFjaFByb3AsXHJcbiAgZ2V0Rmx1aWRWYWx1ZSxcclxuICBoYXNGbHVpZFZhbHVlXHJcbn0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcblxyXG4vLyBzcmMvY29udGV4dC50c1xyXG52YXIgVHJlZUNvbnRleHQgPSB7IGRlcGVuZGVuY2llczogbnVsbCB9O1xyXG5cclxuLy8gc3JjL0FuaW1hdGVkT2JqZWN0LnRzXHJcbnZhciBBbmltYXRlZE9iamVjdCA9IGNsYXNzIGV4dGVuZHMgQW5pbWF0ZWQge1xyXG4gIGNvbnN0cnVjdG9yKHNvdXJjZSkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMuc291cmNlID0gc291cmNlO1xyXG4gICAgdGhpcy5zZXRWYWx1ZShzb3VyY2UpO1xyXG4gIH1cclxuICBnZXRWYWx1ZShhbmltYXRlZCkge1xyXG4gICAgY29uc3QgdmFsdWVzID0ge307XHJcbiAgICBlYWNoUHJvcCh0aGlzLnNvdXJjZSwgKHNvdXJjZSwga2V5KSA9PiB7XHJcbiAgICAgIGlmIChpc0FuaW1hdGVkKHNvdXJjZSkpIHtcclxuICAgICAgICB2YWx1ZXNba2V5XSA9IHNvdXJjZS5nZXRWYWx1ZShhbmltYXRlZCk7XHJcbiAgICAgIH0gZWxzZSBpZiAoaGFzRmx1aWRWYWx1ZShzb3VyY2UpKSB7XHJcbiAgICAgICAgdmFsdWVzW2tleV0gPSBnZXRGbHVpZFZhbHVlKHNvdXJjZSk7XHJcbiAgICAgIH0gZWxzZSBpZiAoIWFuaW1hdGVkKSB7XHJcbiAgICAgICAgdmFsdWVzW2tleV0gPSBzb3VyY2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHZhbHVlcztcclxuICB9XHJcbiAgLyoqIFJlcGxhY2UgdGhlIHJhdyBvYmplY3QgZGF0YSAqL1xyXG4gIHNldFZhbHVlKHNvdXJjZSkge1xyXG4gICAgdGhpcy5zb3VyY2UgPSBzb3VyY2U7XHJcbiAgICB0aGlzLnBheWxvYWQgPSB0aGlzLl9tYWtlUGF5bG9hZChzb3VyY2UpO1xyXG4gIH1cclxuICByZXNldCgpIHtcclxuICAgIGlmICh0aGlzLnBheWxvYWQpIHtcclxuICAgICAgZWFjaCh0aGlzLnBheWxvYWQsIChub2RlKSA9PiBub2RlLnJlc2V0KCkpO1xyXG4gICAgfVxyXG4gIH1cclxuICAvKiogQ3JlYXRlIGEgcGF5bG9hZCBzZXQuICovXHJcbiAgX21ha2VQYXlsb2FkKHNvdXJjZSkge1xyXG4gICAgaWYgKHNvdXJjZSkge1xyXG4gICAgICBjb25zdCBwYXlsb2FkID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcclxuICAgICAgZWFjaFByb3Aoc291cmNlLCB0aGlzLl9hZGRUb1BheWxvYWQsIHBheWxvYWQpO1xyXG4gICAgICByZXR1cm4gQXJyYXkuZnJvbShwYXlsb2FkKTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqIEFkZCB0byBhIHBheWxvYWQgc2V0LiAqL1xyXG4gIF9hZGRUb1BheWxvYWQoc291cmNlKSB7XHJcbiAgICBpZiAoVHJlZUNvbnRleHQuZGVwZW5kZW5jaWVzICYmIGhhc0ZsdWlkVmFsdWUoc291cmNlKSkge1xyXG4gICAgICBUcmVlQ29udGV4dC5kZXBlbmRlbmNpZXMuYWRkKHNvdXJjZSk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBwYXlsb2FkID0gZ2V0UGF5bG9hZChzb3VyY2UpO1xyXG4gICAgaWYgKHBheWxvYWQpIHtcclxuICAgICAgZWFjaChwYXlsb2FkLCAobm9kZSkgPT4gdGhpcy5hZGQobm9kZSkpO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbi8vIHNyYy9BbmltYXRlZEFycmF5LnRzXHJcbnZhciBBbmltYXRlZEFycmF5ID0gY2xhc3MgZXh0ZW5kcyBBbmltYXRlZE9iamVjdCB7XHJcbiAgY29uc3RydWN0b3Ioc291cmNlKSB7XHJcbiAgICBzdXBlcihzb3VyY2UpO1xyXG4gIH1cclxuICAvKiogQGludGVybmFsICovXHJcbiAgc3RhdGljIGNyZWF0ZShzb3VyY2UpIHtcclxuICAgIHJldHVybiBuZXcgQW5pbWF0ZWRBcnJheShzb3VyY2UpO1xyXG4gIH1cclxuICBnZXRWYWx1ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLnNvdXJjZS5tYXAoKG5vZGUpID0+IG5vZGUuZ2V0VmFsdWUoKSk7XHJcbiAgfVxyXG4gIHNldFZhbHVlKHNvdXJjZSkge1xyXG4gICAgY29uc3QgcGF5bG9hZCA9IHRoaXMuZ2V0UGF5bG9hZCgpO1xyXG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT0gcGF5bG9hZC5sZW5ndGgpIHtcclxuICAgICAgcmV0dXJuIHBheWxvYWQubWFwKChub2RlLCBpKSA9PiBub2RlLnNldFZhbHVlKHNvdXJjZVtpXSkpLnNvbWUoQm9vbGVhbik7XHJcbiAgICB9XHJcbiAgICBzdXBlci5zZXRWYWx1ZShzb3VyY2UubWFwKG1ha2VBbmltYXRlZCkpO1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG59O1xyXG5mdW5jdGlvbiBtYWtlQW5pbWF0ZWQodmFsdWUpIHtcclxuICBjb25zdCBub2RlVHlwZSA9IGlzQW5pbWF0ZWRTdHJpbmcodmFsdWUpID8gQW5pbWF0ZWRTdHJpbmcgOiBBbmltYXRlZFZhbHVlO1xyXG4gIHJldHVybiBub2RlVHlwZS5jcmVhdGUodmFsdWUpO1xyXG59XHJcblxyXG4vLyBzcmMvZ2V0QW5pbWF0ZWRUeXBlLnRzXHJcbmltcG9ydCB7IGlzIGFzIGlzMywgaXNBbmltYXRlZFN0cmluZyBhcyBpc0FuaW1hdGVkU3RyaW5nMiB9IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG5mdW5jdGlvbiBnZXRBbmltYXRlZFR5cGUodmFsdWUpIHtcclxuICBjb25zdCBwYXJlbnROb2RlID0gZ2V0QW5pbWF0ZWQodmFsdWUpO1xyXG4gIHJldHVybiBwYXJlbnROb2RlID8gcGFyZW50Tm9kZS5jb25zdHJ1Y3RvciA6IGlzMy5hcnIodmFsdWUpID8gQW5pbWF0ZWRBcnJheSA6IGlzQW5pbWF0ZWRTdHJpbmcyKHZhbHVlKSA/IEFuaW1hdGVkU3RyaW5nIDogQW5pbWF0ZWRWYWx1ZTtcclxufVxyXG5cclxuLy8gc3JjL2NyZWF0ZUhvc3QudHNcclxuaW1wb3J0IHsgaXMgYXMgaXM1LCBlYWNoUHJvcCBhcyBlYWNoUHJvcDIgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuXHJcbi8vIHNyYy93aXRoQW5pbWF0ZWQudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBmb3J3YXJkUmVmLCB1c2VSZWYsIHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHtcclxuICBpcyBhcyBpczQsXHJcbiAgZWFjaCBhcyBlYWNoMixcclxuICByYWYsXHJcbiAgdXNlRm9yY2VVcGRhdGUsXHJcbiAgdXNlT25jZSxcclxuICBhZGRGbHVpZE9ic2VydmVyLFxyXG4gIHJlbW92ZUZsdWlkT2JzZXJ2ZXIsXHJcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdFxyXG59IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG52YXIgd2l0aEFuaW1hdGVkID0gKENvbXBvbmVudCwgaG9zdCkgPT4ge1xyXG4gIGNvbnN0IGhhc0luc3RhbmNlID0gKFxyXG4gICAgLy8gRnVuY3Rpb24gY29tcG9uZW50cyBtdXN0IHVzZSBcImZvcndhcmRSZWZcIiB0byBhdm9pZCBiZWluZ1xyXG4gICAgLy8gcmUtcmVuZGVyZWQgb24gZXZlcnkgYW5pbWF0aW9uIGZyYW1lLlxyXG4gICAgIWlzNC5mdW4oQ29tcG9uZW50KSB8fCBDb21wb25lbnQucHJvdG90eXBlICYmIENvbXBvbmVudC5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudFxyXG4gICk7XHJcbiAgcmV0dXJuIGZvcndhcmRSZWYoKGdpdmVuUHJvcHMsIGdpdmVuUmVmKSA9PiB7XHJcbiAgICBjb25zdCBpbnN0YW5jZVJlZiA9IHVzZVJlZihudWxsKTtcclxuICAgIGNvbnN0IHJlZiA9IGhhc0luc3RhbmNlICYmIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xyXG4gICAgdXNlQ2FsbGJhY2soXHJcbiAgICAgICh2YWx1ZSkgPT4ge1xyXG4gICAgICAgIGluc3RhbmNlUmVmLmN1cnJlbnQgPSB1cGRhdGVSZWYoZ2l2ZW5SZWYsIHZhbHVlKTtcclxuICAgICAgfSxcclxuICAgICAgW2dpdmVuUmVmXVxyXG4gICAgKTtcclxuICAgIGNvbnN0IFtwcm9wcywgZGVwc10gPSBnZXRBbmltYXRlZFN0YXRlKGdpdmVuUHJvcHMsIGhvc3QpO1xyXG4gICAgY29uc3QgZm9yY2VVcGRhdGUgPSB1c2VGb3JjZVVwZGF0ZSgpO1xyXG4gICAgY29uc3QgY2FsbGJhY2sgPSAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGluc3RhbmNlID0gaW5zdGFuY2VSZWYuY3VycmVudDtcclxuICAgICAgaWYgKGhhc0luc3RhbmNlICYmICFpbnN0YW5jZSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBkaWRVcGRhdGUgPSBpbnN0YW5jZSA/IGhvc3QuYXBwbHlBbmltYXRlZFZhbHVlcyhpbnN0YW5jZSwgcHJvcHMuZ2V0VmFsdWUodHJ1ZSkpIDogZmFsc2U7XHJcbiAgICAgIGlmIChkaWRVcGRhdGUgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgZm9yY2VVcGRhdGUoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IFByb3BzT2JzZXJ2ZXIoY2FsbGJhY2ssIGRlcHMpO1xyXG4gICAgY29uc3Qgb2JzZXJ2ZXJSZWYgPSB1c2VSZWYoKTtcclxuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xyXG4gICAgICBvYnNlcnZlclJlZi5jdXJyZW50ID0gb2JzZXJ2ZXI7XHJcbiAgICAgIGVhY2gyKGRlcHMsIChkZXApID0+IGFkZEZsdWlkT2JzZXJ2ZXIoZGVwLCBvYnNlcnZlcikpO1xyXG4gICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgIGlmIChvYnNlcnZlclJlZi5jdXJyZW50KSB7XHJcbiAgICAgICAgICBlYWNoMihcclxuICAgICAgICAgICAgb2JzZXJ2ZXJSZWYuY3VycmVudC5kZXBzLFxyXG4gICAgICAgICAgICAoZGVwKSA9PiByZW1vdmVGbHVpZE9ic2VydmVyKGRlcCwgb2JzZXJ2ZXJSZWYuY3VycmVudClcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICByYWYuY2FuY2VsKG9ic2VydmVyUmVmLmN1cnJlbnQudXBkYXRlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbiAgICB9KTtcclxuICAgIHVzZUVmZmVjdChjYWxsYmFjaywgW10pO1xyXG4gICAgdXNlT25jZSgoKSA9PiAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IG9ic2VydmVyMiA9IG9ic2VydmVyUmVmLmN1cnJlbnQ7XHJcbiAgICAgIGVhY2gyKG9ic2VydmVyMi5kZXBzLCAoZGVwKSA9PiByZW1vdmVGbHVpZE9ic2VydmVyKGRlcCwgb2JzZXJ2ZXIyKSk7XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IHVzZWRQcm9wcyA9IGhvc3QuZ2V0Q29tcG9uZW50UHJvcHMocHJvcHMuZ2V0VmFsdWUoKSk7XHJcbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCB7IC4uLnVzZWRQcm9wcywgcmVmIH0pO1xyXG4gIH0pO1xyXG59O1xyXG52YXIgUHJvcHNPYnNlcnZlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcih1cGRhdGUsIGRlcHMpIHtcclxuICAgIHRoaXMudXBkYXRlID0gdXBkYXRlO1xyXG4gICAgdGhpcy5kZXBzID0gZGVwcztcclxuICB9XHJcbiAgZXZlbnRPYnNlcnZlZChldmVudCkge1xyXG4gICAgaWYgKGV2ZW50LnR5cGUgPT0gXCJjaGFuZ2VcIikge1xyXG4gICAgICByYWYud3JpdGUodGhpcy51cGRhdGUpO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gZ2V0QW5pbWF0ZWRTdGF0ZShwcm9wcywgaG9zdCkge1xyXG4gIGNvbnN0IGRlcGVuZGVuY2llcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XHJcbiAgVHJlZUNvbnRleHQuZGVwZW5kZW5jaWVzID0gZGVwZW5kZW5jaWVzO1xyXG4gIGlmIChwcm9wcy5zdHlsZSlcclxuICAgIHByb3BzID0ge1xyXG4gICAgICAuLi5wcm9wcyxcclxuICAgICAgc3R5bGU6IGhvc3QuY3JlYXRlQW5pbWF0ZWRTdHlsZShwcm9wcy5zdHlsZSlcclxuICAgIH07XHJcbiAgcHJvcHMgPSBuZXcgQW5pbWF0ZWRPYmplY3QocHJvcHMpO1xyXG4gIFRyZWVDb250ZXh0LmRlcGVuZGVuY2llcyA9IG51bGw7XHJcbiAgcmV0dXJuIFtwcm9wcywgZGVwZW5kZW5jaWVzXTtcclxufVxyXG5mdW5jdGlvbiB1cGRhdGVSZWYocmVmLCB2YWx1ZSkge1xyXG4gIGlmIChyZWYpIHtcclxuICAgIGlmIChpczQuZnVuKHJlZikpXHJcbiAgICAgIHJlZih2YWx1ZSk7XHJcbiAgICBlbHNlXHJcbiAgICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XHJcbiAgfVxyXG4gIHJldHVybiB2YWx1ZTtcclxufVxyXG5cclxuLy8gc3JjL2NyZWF0ZUhvc3QudHNcclxudmFyIGNhY2hlS2V5ID0gU3ltYm9sLmZvcihcIkFuaW1hdGVkQ29tcG9uZW50XCIpO1xyXG52YXIgY3JlYXRlSG9zdCA9IChjb21wb25lbnRzLCB7XHJcbiAgYXBwbHlBbmltYXRlZFZhbHVlcyA9ICgpID0+IGZhbHNlLFxyXG4gIGNyZWF0ZUFuaW1hdGVkU3R5bGUgPSAoc3R5bGUpID0+IG5ldyBBbmltYXRlZE9iamVjdChzdHlsZSksXHJcbiAgZ2V0Q29tcG9uZW50UHJvcHMgPSAocHJvcHMpID0+IHByb3BzXHJcbn0gPSB7fSkgPT4ge1xyXG4gIGNvbnN0IGhvc3RDb25maWcgPSB7XHJcbiAgICBhcHBseUFuaW1hdGVkVmFsdWVzLFxyXG4gICAgY3JlYXRlQW5pbWF0ZWRTdHlsZSxcclxuICAgIGdldENvbXBvbmVudFByb3BzXHJcbiAgfTtcclxuICBjb25zdCBhbmltYXRlZCA9IChDb21wb25lbnQpID0+IHtcclxuICAgIGNvbnN0IGRpc3BsYXlOYW1lID0gZ2V0RGlzcGxheU5hbWUoQ29tcG9uZW50KSB8fCBcIkFub255bW91c1wiO1xyXG4gICAgaWYgKGlzNS5zdHIoQ29tcG9uZW50KSkge1xyXG4gICAgICBDb21wb25lbnQgPSBhbmltYXRlZFtDb21wb25lbnRdIHx8IChhbmltYXRlZFtDb21wb25lbnRdID0gd2l0aEFuaW1hdGVkKENvbXBvbmVudCwgaG9zdENvbmZpZykpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgQ29tcG9uZW50ID0gQ29tcG9uZW50W2NhY2hlS2V5XSB8fCAoQ29tcG9uZW50W2NhY2hlS2V5XSA9IHdpdGhBbmltYXRlZChDb21wb25lbnQsIGhvc3RDb25maWcpKTtcclxuICAgIH1cclxuICAgIENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGBBbmltYXRlZCgke2Rpc3BsYXlOYW1lfSlgO1xyXG4gICAgcmV0dXJuIENvbXBvbmVudDtcclxuICB9O1xyXG4gIGVhY2hQcm9wMihjb21wb25lbnRzLCAoQ29tcG9uZW50LCBrZXkpID0+IHtcclxuICAgIGlmIChpczUuYXJyKGNvbXBvbmVudHMpKSB7XHJcbiAgICAgIGtleSA9IGdldERpc3BsYXlOYW1lKENvbXBvbmVudCk7XHJcbiAgICB9XHJcbiAgICBhbmltYXRlZFtrZXldID0gYW5pbWF0ZWQoQ29tcG9uZW50KTtcclxuICB9KTtcclxuICByZXR1cm4ge1xyXG4gICAgYW5pbWF0ZWRcclxuICB9O1xyXG59O1xyXG52YXIgZ2V0RGlzcGxheU5hbWUgPSAoYXJnKSA9PiBpczUuc3RyKGFyZykgPyBhcmcgOiBhcmcgJiYgaXM1LnN0cihhcmcuZGlzcGxheU5hbWUpID8gYXJnLmRpc3BsYXlOYW1lIDogaXM1LmZ1bihhcmcpICYmIGFyZy5uYW1lIHx8IG51bGw7XHJcbmV4cG9ydCB7XHJcbiAgQW5pbWF0ZWQsXHJcbiAgQW5pbWF0ZWRBcnJheSxcclxuICBBbmltYXRlZE9iamVjdCxcclxuICBBbmltYXRlZFN0cmluZyxcclxuICBBbmltYXRlZFZhbHVlLFxyXG4gIGNyZWF0ZUhvc3QsXHJcbiAgZ2V0QW5pbWF0ZWQsXHJcbiAgZ2V0QW5pbWF0ZWRUeXBlLFxyXG4gIGdldFBheWxvYWQsXHJcbiAgaXNBbmltYXRlZCxcclxuICBzZXRBbmltYXRlZFxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1zcHJpbmdfYW5pbWF0ZWQubW9kZXJuLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-spring/animated/dist/react-spring_animated.modern.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-spring/core/dist/react-spring_core.modern.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@react-spring/core/dist/react-spring_core.modern.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Any: () => (/* reexport safe */ _react_spring_types__WEBPACK_IMPORTED_MODULE_3__.Any),\n/* harmony export */   BailSignal: () => (/* binding */ BailSignal),\n/* harmony export */   Controller: () => (/* binding */ Controller),\n/* harmony export */   FrameValue: () => (/* binding */ FrameValue),\n/* harmony export */   Globals: () => (/* reexport safe */ _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals),\n/* harmony export */   Interpolation: () => (/* binding */ Interpolation),\n/* harmony export */   Spring: () => (/* binding */ Spring),\n/* harmony export */   SpringContext: () => (/* binding */ SpringContext),\n/* harmony export */   SpringRef: () => (/* binding */ SpringRef),\n/* harmony export */   SpringValue: () => (/* binding */ SpringValue),\n/* harmony export */   Trail: () => (/* binding */ Trail),\n/* harmony export */   Transition: () => (/* binding */ Transition),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   createInterpolator: () => (/* reexport safe */ _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.createInterpolator),\n/* harmony export */   easings: () => (/* reexport safe */ _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.easings),\n/* harmony export */   inferTo: () => (/* binding */ inferTo),\n/* harmony export */   interpolate: () => (/* binding */ interpolate),\n/* harmony export */   to: () => (/* binding */ to),\n/* harmony export */   update: () => (/* binding */ update),\n/* harmony export */   useChain: () => (/* binding */ useChain),\n/* harmony export */   useInView: () => (/* binding */ useInView),\n/* harmony export */   useIsomorphicLayoutEffect: () => (/* reexport safe */ _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect),\n/* harmony export */   useReducedMotion: () => (/* reexport safe */ _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useReducedMotion),\n/* harmony export */   useResize: () => (/* binding */ useResize),\n/* harmony export */   useScroll: () => (/* binding */ useScroll),\n/* harmony export */   useSpring: () => (/* binding */ useSpring),\n/* harmony export */   useSpringRef: () => (/* binding */ useSpringRef),\n/* harmony export */   useSpringValue: () => (/* binding */ useSpringValue),\n/* harmony export */   useSprings: () => (/* binding */ useSprings),\n/* harmony export */   useTrail: () => (/* binding */ useTrail),\n/* harmony export */   useTransition: () => (/* binding */ useTransition)\n/* harmony export */ });\n/* harmony import */ var _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-spring/shared */ \"(ssr)/./node_modules/@react-spring/shared/dist/react-spring_shared.modern.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_spring_animated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-spring/animated */ \"(ssr)/./node_modules/@react-spring/animated/dist/react-spring_animated.modern.mjs\");\n/* harmony import */ var _react_spring_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-spring/types */ \"(ssr)/./node_modules/@react-spring/types/dist/react-spring_types.modern.mjs\");\n// src/hooks/useChain.ts\r\n\r\n\r\n// src/helpers.ts\r\n\r\nfunction callProp(value, ...args) {\r\n  return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(value) ? value(...args) : value;\r\n}\r\nvar matchProp = (value, key) => value === true || !!(key && value && (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(value) ? value(key) : (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(value).includes(key)));\r\nvar resolveProp = (prop, key) => _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(prop) ? key && prop[key] : prop;\r\nvar getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : void 0;\r\nvar noopTransform = (value) => value;\r\nvar getDefaultProps = (props, transform = noopTransform) => {\r\n  let keys = DEFAULT_PROPS;\r\n  if (props.default && props.default !== true) {\r\n    props = props.default;\r\n    keys = Object.keys(props);\r\n  }\r\n  const defaults2 = {};\r\n  for (const key of keys) {\r\n    const value = transform(props[key], key);\r\n    if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(value)) {\r\n      defaults2[key] = value;\r\n    }\r\n  }\r\n  return defaults2;\r\n};\r\nvar DEFAULT_PROPS = [\r\n  \"config\",\r\n  \"onProps\",\r\n  \"onStart\",\r\n  \"onChange\",\r\n  \"onPause\",\r\n  \"onResume\",\r\n  \"onRest\"\r\n];\r\nvar RESERVED_PROPS = {\r\n  config: 1,\r\n  from: 1,\r\n  to: 1,\r\n  ref: 1,\r\n  loop: 1,\r\n  reset: 1,\r\n  pause: 1,\r\n  cancel: 1,\r\n  reverse: 1,\r\n  immediate: 1,\r\n  default: 1,\r\n  delay: 1,\r\n  onProps: 1,\r\n  onStart: 1,\r\n  onChange: 1,\r\n  onPause: 1,\r\n  onResume: 1,\r\n  onRest: 1,\r\n  onResolve: 1,\r\n  // Transition props\r\n  items: 1,\r\n  trail: 1,\r\n  sort: 1,\r\n  expires: 1,\r\n  initial: 1,\r\n  enter: 1,\r\n  update: 1,\r\n  leave: 1,\r\n  children: 1,\r\n  onDestroyed: 1,\r\n  // Internal props\r\n  keys: 1,\r\n  callId: 1,\r\n  parentId: 1\r\n};\r\nfunction getForwardProps(props) {\r\n  const forward = {};\r\n  let count = 0;\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(props, (value, prop) => {\r\n    if (!RESERVED_PROPS[prop]) {\r\n      forward[prop] = value;\r\n      count++;\r\n    }\r\n  });\r\n  if (count) {\r\n    return forward;\r\n  }\r\n}\r\nfunction inferTo(props) {\r\n  const to2 = getForwardProps(props);\r\n  if (to2) {\r\n    const out = { to: to2 };\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(props, (val, key) => key in to2 || (out[key] = val));\r\n    return out;\r\n  }\r\n  return { ...props };\r\n}\r\nfunction computeGoal(value) {\r\n  value = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(value);\r\n  return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(value) ? value.map(computeGoal) : (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isAnimatedString)(value) ? _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.createStringInterpolator({\r\n    range: [0, 1],\r\n    output: [value, value]\r\n  })(1) : value;\r\n}\r\nfunction hasProps(props) {\r\n  for (const _ in props)\r\n    return true;\r\n  return false;\r\n}\r\nfunction isAsyncTo(to2) {\r\n  return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(to2) || _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(to2) && _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(to2[0]);\r\n}\r\nfunction detachRefs(ctrl, ref) {\r\n  ctrl.ref?.delete(ctrl);\r\n  ref?.delete(ctrl);\r\n}\r\nfunction replaceRef(ctrl, ref) {\r\n  if (ref && ctrl.ref !== ref) {\r\n    ctrl.ref?.delete(ctrl);\r\n    ref.add(ctrl);\r\n    ctrl.ref = ref;\r\n  }\r\n}\r\n\r\n// src/hooks/useChain.ts\r\nfunction useChain(refs, timeSteps, timeFrame = 1e3) {\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    if (timeSteps) {\r\n      let prevDelay = 0;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(refs, (ref, i) => {\r\n        const controllers = ref.current;\r\n        if (controllers.length) {\r\n          let delay = timeFrame * timeSteps[i];\r\n          if (isNaN(delay))\r\n            delay = prevDelay;\r\n          else\r\n            prevDelay = delay;\r\n          (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(controllers, (ctrl) => {\r\n            (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(ctrl.queue, (props) => {\r\n              const memoizedDelayProp = props.delay;\r\n              props.delay = (key) => delay + callProp(memoizedDelayProp || 0, key);\r\n            });\r\n          });\r\n          ref.start();\r\n        }\r\n      });\r\n    } else {\r\n      let p = Promise.resolve();\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(refs, (ref) => {\r\n        const controllers = ref.current;\r\n        if (controllers.length) {\r\n          const queues = controllers.map((ctrl) => {\r\n            const q = ctrl.queue;\r\n            ctrl.queue = [];\r\n            return q;\r\n          });\r\n          p = p.then(() => {\r\n            (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(\r\n              controllers,\r\n              (ctrl, i) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(queues[i] || [], (update2) => ctrl.queue.push(update2))\r\n            );\r\n            return Promise.all(ref.start());\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// src/hooks/useSpring.ts\r\n\r\n\r\n// src/hooks/useSprings.ts\r\n\r\n\r\n\r\n// src/SpringValue.ts\r\n\r\n\r\n\r\n// src/AnimationConfig.ts\r\n\r\n\r\n// src/constants.ts\r\nvar config = {\r\n  default: { tension: 170, friction: 26 },\r\n  gentle: { tension: 120, friction: 14 },\r\n  wobbly: { tension: 180, friction: 12 },\r\n  stiff: { tension: 210, friction: 20 },\r\n  slow: { tension: 280, friction: 60 },\r\n  molasses: { tension: 280, friction: 120 }\r\n};\r\n\r\n// src/AnimationConfig.ts\r\nvar defaults = {\r\n  ...config.default,\r\n  mass: 1,\r\n  damping: 1,\r\n  easing: _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.easings.linear,\r\n  clamp: false\r\n};\r\nvar AnimationConfig = class {\r\n  constructor() {\r\n    /**\r\n     * The initial velocity of one or more values.\r\n     *\r\n     * @default 0\r\n     */\r\n    this.velocity = 0;\r\n    Object.assign(this, defaults);\r\n  }\r\n};\r\nfunction mergeConfig(config2, newConfig, defaultConfig) {\r\n  if (defaultConfig) {\r\n    defaultConfig = { ...defaultConfig };\r\n    sanitizeConfig(defaultConfig, newConfig);\r\n    newConfig = { ...defaultConfig, ...newConfig };\r\n  }\r\n  sanitizeConfig(config2, newConfig);\r\n  Object.assign(config2, newConfig);\r\n  for (const key in defaults) {\r\n    if (config2[key] == null) {\r\n      config2[key] = defaults[key];\r\n    }\r\n  }\r\n  let { frequency, damping } = config2;\r\n  const { mass } = config2;\r\n  if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(frequency)) {\r\n    if (frequency < 0.01)\r\n      frequency = 0.01;\r\n    if (damping < 0)\r\n      damping = 0;\r\n    config2.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\r\n    config2.friction = 4 * Math.PI * damping * mass / frequency;\r\n  }\r\n  return config2;\r\n}\r\nfunction sanitizeConfig(config2, props) {\r\n  if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.decay)) {\r\n    config2.duration = void 0;\r\n  } else {\r\n    const isTensionConfig = !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.tension) || !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.friction);\r\n    if (isTensionConfig || !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.frequency) || !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.damping) || !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.mass)) {\r\n      config2.duration = void 0;\r\n      config2.decay = void 0;\r\n    }\r\n    if (isTensionConfig) {\r\n      config2.frequency = void 0;\r\n    }\r\n  }\r\n}\r\n\r\n// src/Animation.ts\r\nvar emptyArray = [];\r\nvar Animation = class {\r\n  constructor() {\r\n    this.changed = false;\r\n    this.values = emptyArray;\r\n    this.toValues = null;\r\n    this.fromValues = emptyArray;\r\n    this.config = new AnimationConfig();\r\n    this.immediate = false;\r\n  }\r\n};\r\n\r\n// src/scheduleProps.ts\r\n\r\nfunction scheduleProps(callId, { key, props, defaultProps, state, actions }) {\r\n  return new Promise((resolve, reject) => {\r\n    let delay;\r\n    let timeout;\r\n    let cancel = matchProp(props.cancel ?? defaultProps?.cancel, key);\r\n    if (cancel) {\r\n      onStart();\r\n    } else {\r\n      if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.pause)) {\r\n        state.paused = matchProp(props.pause, key);\r\n      }\r\n      let pause = defaultProps?.pause;\r\n      if (pause !== true) {\r\n        pause = state.paused || matchProp(pause, key);\r\n      }\r\n      delay = callProp(props.delay || 0, key);\r\n      if (pause) {\r\n        state.resumeQueue.add(onResume);\r\n        actions.pause();\r\n      } else {\r\n        actions.resume();\r\n        onResume();\r\n      }\r\n    }\r\n    function onPause() {\r\n      state.resumeQueue.add(onResume);\r\n      state.timeouts.delete(timeout);\r\n      timeout.cancel();\r\n      delay = timeout.time - _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.now();\r\n    }\r\n    function onResume() {\r\n      if (delay > 0 && !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.skipAnimation) {\r\n        state.delayed = true;\r\n        timeout = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.setTimeout(onStart, delay);\r\n        state.pauseQueue.add(onPause);\r\n        state.timeouts.add(timeout);\r\n      } else {\r\n        onStart();\r\n      }\r\n    }\r\n    function onStart() {\r\n      if (state.delayed) {\r\n        state.delayed = false;\r\n      }\r\n      state.pauseQueue.delete(onPause);\r\n      state.timeouts.delete(timeout);\r\n      if (callId <= (state.cancelId || 0)) {\r\n        cancel = true;\r\n      }\r\n      try {\r\n        actions.start({ ...props, callId, cancel }, resolve);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// src/runAsync.ts\r\n\r\n\r\n// src/AnimationResult.ts\r\nvar getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some((result) => result.cancelled) ? getCancelledResult(target.get()) : results.every((result) => result.noop) ? getNoopResult(target.get()) : getFinishedResult(\r\n  target.get(),\r\n  results.every((result) => result.finished)\r\n);\r\nvar getNoopResult = (value) => ({\r\n  value,\r\n  noop: true,\r\n  finished: true,\r\n  cancelled: false\r\n});\r\nvar getFinishedResult = (value, finished, cancelled = false) => ({\r\n  value,\r\n  finished,\r\n  cancelled\r\n});\r\nvar getCancelledResult = (value) => ({\r\n  value,\r\n  cancelled: true,\r\n  finished: false\r\n});\r\n\r\n// src/runAsync.ts\r\nfunction runAsync(to2, props, state, target) {\r\n  const { callId, parentId, onRest } = props;\r\n  const { asyncTo: prevTo, promise: prevPromise } = state;\r\n  if (!parentId && to2 === prevTo && !props.reset) {\r\n    return prevPromise;\r\n  }\r\n  return state.promise = (async () => {\r\n    state.asyncId = callId;\r\n    state.asyncTo = to2;\r\n    const defaultProps = getDefaultProps(\r\n      props,\r\n      (value, key) => (\r\n        // The `onRest` prop is only called when the `runAsync` promise is resolved.\r\n        key === \"onRest\" ? void 0 : value\r\n      )\r\n    );\r\n    let preventBail;\r\n    let bail;\r\n    const bailPromise = new Promise(\r\n      (resolve, reject) => (preventBail = resolve, bail = reject)\r\n    );\r\n    const bailIfEnded = (bailSignal) => {\r\n      const bailResult = (\r\n        // The `cancel` prop or `stop` method was used.\r\n        callId <= (state.cancelId || 0) && getCancelledResult(target) || // The async `to` prop was replaced.\r\n        callId !== state.asyncId && getFinishedResult(target, false)\r\n      );\r\n      if (bailResult) {\r\n        bailSignal.result = bailResult;\r\n        bail(bailSignal);\r\n        throw bailSignal;\r\n      }\r\n    };\r\n    const animate = (arg1, arg2) => {\r\n      const bailSignal = new BailSignal();\r\n      const skipAnimationSignal = new SkipAnimationSignal();\r\n      return (async () => {\r\n        if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.skipAnimation) {\r\n          stopAsync(state);\r\n          skipAnimationSignal.result = getFinishedResult(target, false);\r\n          bail(skipAnimationSignal);\r\n          throw skipAnimationSignal;\r\n        }\r\n        bailIfEnded(bailSignal);\r\n        const props2 = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(arg1) ? { ...arg1 } : { ...arg2, to: arg1 };\r\n        props2.parentId = callId;\r\n        (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(defaultProps, (value, key) => {\r\n          if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props2[key])) {\r\n            props2[key] = value;\r\n          }\r\n        });\r\n        const result2 = await target.start(props2);\r\n        bailIfEnded(bailSignal);\r\n        if (state.paused) {\r\n          await new Promise((resume) => {\r\n            state.resumeQueue.add(resume);\r\n          });\r\n        }\r\n        return result2;\r\n      })();\r\n    };\r\n    let result;\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.skipAnimation) {\r\n      stopAsync(state);\r\n      return getFinishedResult(target, false);\r\n    }\r\n    try {\r\n      let animating;\r\n      if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(to2)) {\r\n        animating = (async (queue) => {\r\n          for (const props2 of queue) {\r\n            await animate(props2);\r\n          }\r\n        })(to2);\r\n      } else {\r\n        animating = Promise.resolve(to2(animate, target.stop.bind(target)));\r\n      }\r\n      await Promise.all([animating.then(preventBail), bailPromise]);\r\n      result = getFinishedResult(target.get(), true, false);\r\n    } catch (err) {\r\n      if (err instanceof BailSignal) {\r\n        result = err.result;\r\n      } else if (err instanceof SkipAnimationSignal) {\r\n        result = err.result;\r\n      } else {\r\n        throw err;\r\n      }\r\n    } finally {\r\n      if (callId == state.asyncId) {\r\n        state.asyncId = parentId;\r\n        state.asyncTo = parentId ? prevTo : void 0;\r\n        state.promise = parentId ? prevPromise : void 0;\r\n      }\r\n    }\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(onRest)) {\r\n      _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => {\r\n        onRest(result, target, target.item);\r\n      });\r\n    }\r\n    return result;\r\n  })();\r\n}\r\nfunction stopAsync(state, cancelId) {\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flush)(state.timeouts, (t) => t.cancel());\r\n  state.pauseQueue.clear();\r\n  state.resumeQueue.clear();\r\n  state.asyncId = state.asyncTo = state.promise = void 0;\r\n  if (cancelId)\r\n    state.cancelId = cancelId;\r\n}\r\nvar BailSignal = class extends Error {\r\n  constructor() {\r\n    super(\r\n      \"An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise.\"\r\n    );\r\n  }\r\n};\r\nvar SkipAnimationSignal = class extends Error {\r\n  constructor() {\r\n    super(\"SkipAnimationSignal\");\r\n  }\r\n};\r\n\r\n// src/FrameValue.ts\r\n\r\n\r\nvar isFrameValue = (value) => value instanceof FrameValue;\r\nvar nextId = 1;\r\nvar FrameValue = class extends _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.FluidValue {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.id = nextId++;\r\n    this._priority = 0;\r\n  }\r\n  get priority() {\r\n    return this._priority;\r\n  }\r\n  set priority(priority) {\r\n    if (this._priority != priority) {\r\n      this._priority = priority;\r\n      this._onPriorityChange(priority);\r\n    }\r\n  }\r\n  /** Get the current value */\r\n  get() {\r\n    const node = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this);\r\n    return node && node.getValue();\r\n  }\r\n  /** Create a spring that maps our value to another value */\r\n  to(...args) {\r\n    return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.to(this, args);\r\n  }\r\n  /** @deprecated Use the `to` method instead. */\r\n  interpolate(...args) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.deprecateInterpolate)();\r\n    return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.to(this, args);\r\n  }\r\n  toJSON() {\r\n    return this.get();\r\n  }\r\n  observerAdded(count) {\r\n    if (count == 1)\r\n      this._attach();\r\n  }\r\n  observerRemoved(count) {\r\n    if (count == 0)\r\n      this._detach();\r\n  }\r\n  /** Called when the first child is added. */\r\n  _attach() {\r\n  }\r\n  /** Called when the last child is removed. */\r\n  _detach() {\r\n  }\r\n  /** Tell our children about our new value */\r\n  _onChange(value, idle = false) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.callFluidObservers)(this, {\r\n      type: \"change\",\r\n      parent: this,\r\n      value,\r\n      idle\r\n    });\r\n  }\r\n  /** Tell our children about our new priority */\r\n  _onPriorityChange(priority) {\r\n    if (!this.idle) {\r\n      _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.frameLoop.sort(this);\r\n    }\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.callFluidObservers)(this, {\r\n      type: \"priority\",\r\n      parent: this,\r\n      priority\r\n    });\r\n  }\r\n};\r\n\r\n// src/SpringPhase.ts\r\nvar $P = Symbol.for(\"SpringPhase\");\r\nvar HAS_ANIMATED = 1;\r\nvar IS_ANIMATING = 2;\r\nvar IS_PAUSED = 4;\r\nvar hasAnimated = (target) => (target[$P] & HAS_ANIMATED) > 0;\r\nvar isAnimating = (target) => (target[$P] & IS_ANIMATING) > 0;\r\nvar isPaused = (target) => (target[$P] & IS_PAUSED) > 0;\r\nvar setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\r\nvar setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\r\n\r\n// src/SpringValue.ts\r\nvar SpringValue = class extends FrameValue {\r\n  constructor(arg1, arg2) {\r\n    super();\r\n    /** The animation state */\r\n    this.animation = new Animation();\r\n    /** Some props have customizable default values */\r\n    this.defaultProps = {};\r\n    /** The state for `runAsync` calls */\r\n    this._state = {\r\n      paused: false,\r\n      delayed: false,\r\n      pauseQueue: /* @__PURE__ */ new Set(),\r\n      resumeQueue: /* @__PURE__ */ new Set(),\r\n      timeouts: /* @__PURE__ */ new Set()\r\n    };\r\n    /** The promise resolvers of pending `start` calls */\r\n    this._pendingCalls = /* @__PURE__ */ new Set();\r\n    /** The counter for tracking `scheduleProps` calls */\r\n    this._lastCallId = 0;\r\n    /** The last `scheduleProps` call that changed the `to` prop */\r\n    this._lastToId = 0;\r\n    this._memoizedDuration = 0;\r\n    if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(arg1) || !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(arg2)) {\r\n      const props = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(arg1) ? { ...arg1 } : { ...arg2, from: arg1 };\r\n      if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.default)) {\r\n        props.default = true;\r\n      }\r\n      this.start(props);\r\n    }\r\n  }\r\n  /** Equals true when not advancing on each frame. */\r\n  get idle() {\r\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\r\n  }\r\n  get goal() {\r\n    return (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(this.animation.to);\r\n  }\r\n  get velocity() {\r\n    const node = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this);\r\n    return node instanceof _react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map((node2) => node2.lastVelocity || 0);\r\n  }\r\n  /**\r\n   * When true, this value has been animated at least once.\r\n   */\r\n  get hasAnimated() {\r\n    return hasAnimated(this);\r\n  }\r\n  /**\r\n   * When true, this value has an unfinished animation,\r\n   * which is either active or paused.\r\n   */\r\n  get isAnimating() {\r\n    return isAnimating(this);\r\n  }\r\n  /**\r\n   * When true, all current and future animations are paused.\r\n   */\r\n  get isPaused() {\r\n    return isPaused(this);\r\n  }\r\n  /**\r\n   *\r\n   *\r\n   */\r\n  get isDelayed() {\r\n    return this._state.delayed;\r\n  }\r\n  /** Advance the current animation by a number of milliseconds */\r\n  advance(dt) {\r\n    let idle = true;\r\n    let changed = false;\r\n    const anim = this.animation;\r\n    let { toValues } = anim;\r\n    const { config: config2 } = anim;\r\n    const payload = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getPayload)(anim.to);\r\n    if (!payload && (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(anim.to)) {\r\n      toValues = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(anim.to));\r\n    }\r\n    anim.values.forEach((node2, i) => {\r\n      if (node2.done)\r\n        return;\r\n      const to2 = (\r\n        // Animated strings always go from 0 to 1.\r\n        node2.constructor == _react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i]\r\n      );\r\n      let finished = anim.immediate;\r\n      let position = to2;\r\n      if (!finished) {\r\n        position = node2.lastPosition;\r\n        if (config2.tension <= 0) {\r\n          node2.done = true;\r\n          return;\r\n        }\r\n        let elapsed = node2.elapsedTime += dt;\r\n        const from = anim.fromValues[i];\r\n        const v0 = node2.v0 != null ? node2.v0 : node2.v0 = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(config2.velocity) ? config2.velocity[i] : config2.velocity;\r\n        let velocity;\r\n        const precision = config2.precision || (from == to2 ? 5e-3 : Math.min(1, Math.abs(to2 - from) * 1e-3));\r\n        if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(config2.duration)) {\r\n          let p = 1;\r\n          if (config2.duration > 0) {\r\n            if (this._memoizedDuration !== config2.duration) {\r\n              this._memoizedDuration = config2.duration;\r\n              if (node2.durationProgress > 0) {\r\n                node2.elapsedTime = config2.duration * node2.durationProgress;\r\n                elapsed = node2.elapsedTime += dt;\r\n              }\r\n            }\r\n            p = (config2.progress || 0) + elapsed / this._memoizedDuration;\r\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\r\n            node2.durationProgress = p;\r\n          }\r\n          position = from + config2.easing(p) * (to2 - from);\r\n          velocity = (position - node2.lastPosition) / dt;\r\n          finished = p == 1;\r\n        } else if (config2.decay) {\r\n          const decay = config2.decay === true ? 0.998 : config2.decay;\r\n          const e = Math.exp(-(1 - decay) * elapsed);\r\n          position = from + v0 / (1 - decay) * (1 - e);\r\n          finished = Math.abs(node2.lastPosition - position) <= precision;\r\n          velocity = v0 * e;\r\n        } else {\r\n          velocity = node2.lastVelocity == null ? v0 : node2.lastVelocity;\r\n          const restVelocity = config2.restVelocity || precision / 10;\r\n          const bounceFactor = config2.clamp ? 0 : config2.bounce;\r\n          const canBounce = !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(bounceFactor);\r\n          const isGrowing = from == to2 ? node2.v0 > 0 : from < to2;\r\n          let isMoving;\r\n          let isBouncing = false;\r\n          const step = 1;\r\n          const numSteps = Math.ceil(dt / step);\r\n          for (let n = 0; n < numSteps; ++n) {\r\n            isMoving = Math.abs(velocity) > restVelocity;\r\n            if (!isMoving) {\r\n              finished = Math.abs(to2 - position) <= precision;\r\n              if (finished) {\r\n                break;\r\n              }\r\n            }\r\n            if (canBounce) {\r\n              isBouncing = position == to2 || position > to2 == isGrowing;\r\n              if (isBouncing) {\r\n                velocity = -velocity * bounceFactor;\r\n                position = to2;\r\n              }\r\n            }\r\n            const springForce = -config2.tension * 1e-6 * (position - to2);\r\n            const dampingForce = -config2.friction * 1e-3 * velocity;\r\n            const acceleration = (springForce + dampingForce) / config2.mass;\r\n            velocity = velocity + acceleration * step;\r\n            position = position + velocity * step;\r\n          }\r\n        }\r\n        node2.lastVelocity = velocity;\r\n        if (Number.isNaN(position)) {\r\n          console.warn(`Got NaN while animating:`, this);\r\n          finished = true;\r\n        }\r\n      }\r\n      if (payload && !payload[i].done) {\r\n        finished = false;\r\n      }\r\n      if (finished) {\r\n        node2.done = true;\r\n      } else {\r\n        idle = false;\r\n      }\r\n      if (node2.setValue(position, config2.round)) {\r\n        changed = true;\r\n      }\r\n    });\r\n    const node = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this);\r\n    const currVal = node.getValue();\r\n    if (idle) {\r\n      const finalVal = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(anim.to);\r\n      if ((currVal !== finalVal || changed) && !config2.decay) {\r\n        node.setValue(finalVal);\r\n        this._onChange(finalVal);\r\n      } else if (changed && config2.decay) {\r\n        this._onChange(currVal);\r\n      }\r\n      this._stop();\r\n    } else if (changed) {\r\n      this._onChange(currVal);\r\n    }\r\n  }\r\n  /** Set the current value, while stopping the current animation */\r\n  set(value) {\r\n    _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => {\r\n      this._stop();\r\n      this._focus(value);\r\n      this._set(value);\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Freeze the active animation in time, as well as any updates merged\r\n   * before `resume` is called.\r\n   */\r\n  pause() {\r\n    this._update({ pause: true });\r\n  }\r\n  /** Resume the animation if paused. */\r\n  resume() {\r\n    this._update({ pause: false });\r\n  }\r\n  /** Skip to the end of the current animation. */\r\n  finish() {\r\n    if (isAnimating(this)) {\r\n      const { to: to2, config: config2 } = this.animation;\r\n      _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => {\r\n        this._onStart();\r\n        if (!config2.decay) {\r\n          this._set(to2, false);\r\n        }\r\n        this._stop();\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n  /** Push props into the pending queue. */\r\n  update(props) {\r\n    const queue = this.queue || (this.queue = []);\r\n    queue.push(props);\r\n    return this;\r\n  }\r\n  start(to2, arg2) {\r\n    let queue;\r\n    if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(to2)) {\r\n      queue = [_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(to2) ? to2 : { ...arg2, to: to2 }];\r\n    } else {\r\n      queue = this.queue || [];\r\n      this.queue = [];\r\n    }\r\n    return Promise.all(\r\n      queue.map((props) => {\r\n        const up = this._update(props);\r\n        return up;\r\n      })\r\n    ).then((results) => getCombinedResult(this, results));\r\n  }\r\n  /**\r\n   * Stop the current animation, and cancel any delayed updates.\r\n   *\r\n   * Pass `true` to call `onRest` with `cancelled: true`.\r\n   */\r\n  stop(cancel) {\r\n    const { to: to2 } = this.animation;\r\n    this._focus(this.get());\r\n    stopAsync(this._state, cancel && this._lastCallId);\r\n    _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => this._stop(to2, cancel));\r\n    return this;\r\n  }\r\n  /** Restart the animation. */\r\n  reset() {\r\n    this._update({ reset: true });\r\n  }\r\n  /** @internal */\r\n  eventObserved(event) {\r\n    if (event.type == \"change\") {\r\n      this._start();\r\n    } else if (event.type == \"priority\") {\r\n      this.priority = event.priority + 1;\r\n    }\r\n  }\r\n  /**\r\n   * Parse the `to` and `from` range from the given `props` object.\r\n   *\r\n   * This also ensures the initial value is available to animated components\r\n   * during the render phase.\r\n   */\r\n  _prepareNode(props) {\r\n    const key = this.key || \"\";\r\n    let { to: to2, from } = props;\r\n    to2 = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(to2) ? to2[key] : to2;\r\n    if (to2 == null || isAsyncTo(to2)) {\r\n      to2 = void 0;\r\n    }\r\n    from = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(from) ? from[key] : from;\r\n    if (from == null) {\r\n      from = void 0;\r\n    }\r\n    const range = { to: to2, from };\r\n    if (!hasAnimated(this)) {\r\n      if (props.reverse)\r\n        [to2, from] = [from, to2];\r\n      from = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(from);\r\n      if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(from)) {\r\n        this._set(from);\r\n      } else if (!(0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this)) {\r\n        this._set(to2);\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  /** Every update is processed by this method before merging. */\r\n  _update({ ...props }, isLoop) {\r\n    const { key, defaultProps } = this;\r\n    if (props.default)\r\n      Object.assign(\r\n        defaultProps,\r\n        getDefaultProps(\r\n          props,\r\n          (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value\r\n        )\r\n      );\r\n    mergeActiveFn(this, props, \"onProps\");\r\n    sendEvent(this, \"onProps\", props, this);\r\n    const range = this._prepareNode(props);\r\n    if (Object.isFrozen(this)) {\r\n      throw Error(\r\n        \"Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?\"\r\n      );\r\n    }\r\n    const state = this._state;\r\n    return scheduleProps(++this._lastCallId, {\r\n      key,\r\n      props,\r\n      defaultProps,\r\n      state,\r\n      actions: {\r\n        pause: () => {\r\n          if (!isPaused(this)) {\r\n            setPausedBit(this, true);\r\n            (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flushCalls)(state.pauseQueue);\r\n            sendEvent(\r\n              this,\r\n              \"onPause\",\r\n              getFinishedResult(this, checkFinished(this, this.animation.to)),\r\n              this\r\n            );\r\n          }\r\n        },\r\n        resume: () => {\r\n          if (isPaused(this)) {\r\n            setPausedBit(this, false);\r\n            if (isAnimating(this)) {\r\n              this._resume();\r\n            }\r\n            (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flushCalls)(state.resumeQueue);\r\n            sendEvent(\r\n              this,\r\n              \"onResume\",\r\n              getFinishedResult(this, checkFinished(this, this.animation.to)),\r\n              this\r\n            );\r\n          }\r\n        },\r\n        start: this._merge.bind(this, range)\r\n      }\r\n    }).then((result) => {\r\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\r\n        const nextProps = createLoopUpdate(props);\r\n        if (nextProps) {\r\n          return this._update(nextProps, true);\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n  /** Merge props into the current animation */\r\n  _merge(range, props, resolve) {\r\n    if (props.cancel) {\r\n      this.stop(true);\r\n      return resolve(getCancelledResult(this));\r\n    }\r\n    const hasToProp = !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(range.to);\r\n    const hasFromProp = !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(range.from);\r\n    if (hasToProp || hasFromProp) {\r\n      if (props.callId > this._lastToId) {\r\n        this._lastToId = props.callId;\r\n      } else {\r\n        return resolve(getCancelledResult(this));\r\n      }\r\n    }\r\n    const { key, defaultProps, animation: anim } = this;\r\n    const { to: prevTo, from: prevFrom } = anim;\r\n    let { to: to2 = prevTo, from = prevFrom } = range;\r\n    if (hasFromProp && !hasToProp && (!props.default || _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(to2))) {\r\n      to2 = from;\r\n    }\r\n    if (props.reverse)\r\n      [to2, from] = [from, to2];\r\n    const hasFromChanged = !(0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(from, prevFrom);\r\n    if (hasFromChanged) {\r\n      anim.from = from;\r\n    }\r\n    from = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(from);\r\n    const hasToChanged = !(0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(to2, prevTo);\r\n    if (hasToChanged) {\r\n      this._focus(to2);\r\n    }\r\n    const hasAsyncTo = isAsyncTo(props.to);\r\n    const { config: config2 } = anim;\r\n    const { decay, velocity } = config2;\r\n    if (hasToProp || hasFromProp) {\r\n      config2.velocity = 0;\r\n    }\r\n    if (props.config && !hasAsyncTo) {\r\n      mergeConfig(\r\n        config2,\r\n        callProp(props.config, key),\r\n        // Avoid calling the same \"config\" prop twice.\r\n        props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0\r\n      );\r\n    }\r\n    let node = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this);\r\n    if (!node || _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(to2)) {\r\n      return resolve(getFinishedResult(this, true));\r\n    }\r\n    const reset = (\r\n      // When `reset` is undefined, the `from` prop implies `reset: true`,\r\n      // except for declarative updates. When `reset` is defined, there\r\n      // must exist a value to animate from.\r\n      _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props.reset) ? hasFromProp && !props.default : !_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(from) && matchProp(props.reset, key)\r\n    );\r\n    const value = reset ? from : this.get();\r\n    const goal = computeGoal(to2);\r\n    const isAnimatable = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.num(goal) || _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(goal) || (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isAnimatedString)(goal);\r\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\r\n    if (hasToChanged) {\r\n      const nodeType = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimatedType)(to2);\r\n      if (nodeType !== node.constructor) {\r\n        if (immediate) {\r\n          node = this._set(goal);\r\n        } else\r\n          throw Error(\r\n            `Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`\r\n          );\r\n      }\r\n    }\r\n    const goalType = node.constructor;\r\n    let started = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(to2);\r\n    let finished = false;\r\n    if (!started) {\r\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\r\n      if (hasToChanged || hasValueChanged) {\r\n        finished = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(computeGoal(value), goal);\r\n        started = !finished;\r\n      }\r\n      if (!(0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(anim.immediate, immediate) && !immediate || !(0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(config2.decay, decay) || !(0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(config2.velocity, velocity)) {\r\n        started = true;\r\n      }\r\n    }\r\n    if (finished && isAnimating(this)) {\r\n      if (anim.changed && !reset) {\r\n        started = true;\r\n      } else if (!started) {\r\n        this._stop(prevTo);\r\n      }\r\n    }\r\n    if (!hasAsyncTo) {\r\n      if (started || (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(prevTo)) {\r\n        anim.values = node.getPayload();\r\n        anim.toValues = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(to2) ? null : goalType == _react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.AnimatedString ? [1] : (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(goal);\r\n      }\r\n      if (anim.immediate != immediate) {\r\n        anim.immediate = immediate;\r\n        if (!immediate && !reset) {\r\n          this._set(prevTo);\r\n        }\r\n      }\r\n      if (started) {\r\n        const { onRest } = anim;\r\n        (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(ACTIVE_EVENTS, (type) => mergeActiveFn(this, props, type));\r\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\r\n        (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flushCalls)(this._pendingCalls, result);\r\n        this._pendingCalls.add(resolve);\r\n        if (anim.changed)\r\n          _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => {\r\n            anim.changed = !reset;\r\n            onRest?.(result, this);\r\n            if (reset) {\r\n              callProp(defaultProps.onRest, result);\r\n            } else {\r\n              anim.onStart?.(result, this);\r\n            }\r\n          });\r\n      }\r\n    }\r\n    if (reset) {\r\n      this._set(value);\r\n    }\r\n    if (hasAsyncTo) {\r\n      resolve(runAsync(props.to, props, this._state, this));\r\n    } else if (started) {\r\n      this._start();\r\n    } else if (isAnimating(this) && !hasToChanged) {\r\n      this._pendingCalls.add(resolve);\r\n    } else {\r\n      resolve(getNoopResult(value));\r\n    }\r\n  }\r\n  /** Update the `animation.to` value, which might be a `FluidValue` */\r\n  _focus(value) {\r\n    const anim = this.animation;\r\n    if (value !== anim.to) {\r\n      if ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidObservers)(this)) {\r\n        this._detach();\r\n      }\r\n      anim.to = value;\r\n      if ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidObservers)(this)) {\r\n        this._attach();\r\n      }\r\n    }\r\n  }\r\n  _attach() {\r\n    let priority = 0;\r\n    const { to: to2 } = this.animation;\r\n    if ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(to2)) {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.addFluidObserver)(to2, this);\r\n      if (isFrameValue(to2)) {\r\n        priority = to2.priority + 1;\r\n      }\r\n    }\r\n    this.priority = priority;\r\n  }\r\n  _detach() {\r\n    const { to: to2 } = this.animation;\r\n    if ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(to2)) {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.removeFluidObserver)(to2, this);\r\n    }\r\n  }\r\n  /**\r\n   * Update the current value from outside the frameloop,\r\n   * and return the `Animated` node.\r\n   */\r\n  _set(arg, idle = true) {\r\n    const value = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(arg);\r\n    if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(value)) {\r\n      const oldNode = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this);\r\n      if (!oldNode || !(0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(value, oldNode.getValue())) {\r\n        const nodeType = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimatedType)(value);\r\n        if (!oldNode || oldNode.constructor != nodeType) {\r\n          (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.setAnimated)(this, nodeType.create(value));\r\n        } else {\r\n          oldNode.setValue(value);\r\n        }\r\n        if (oldNode) {\r\n          _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => {\r\n            this._onChange(value, idle);\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this);\r\n  }\r\n  _onStart() {\r\n    const anim = this.animation;\r\n    if (!anim.changed) {\r\n      anim.changed = true;\r\n      sendEvent(\r\n        this,\r\n        \"onStart\",\r\n        getFinishedResult(this, checkFinished(this, anim.to)),\r\n        this\r\n      );\r\n    }\r\n  }\r\n  _onChange(value, idle) {\r\n    if (!idle) {\r\n      this._onStart();\r\n      callProp(this.animation.onChange, value, this);\r\n    }\r\n    callProp(this.defaultProps.onChange, value, this);\r\n    super._onChange(value, idle);\r\n  }\r\n  // This method resets the animation state (even if already animating) to\r\n  // ensure the latest from/to range is used, and it also ensures this spring\r\n  // is added to the frameloop.\r\n  _start() {\r\n    const anim = this.animation;\r\n    (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this).reset((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(anim.to));\r\n    if (!anim.immediate) {\r\n      anim.fromValues = anim.values.map((node) => node.lastPosition);\r\n    }\r\n    if (!isAnimating(this)) {\r\n      setActiveBit(this, true);\r\n      if (!isPaused(this)) {\r\n        this._resume();\r\n      }\r\n    }\r\n  }\r\n  _resume() {\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.skipAnimation) {\r\n      this.finish();\r\n    } else {\r\n      _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.frameLoop.start(this);\r\n    }\r\n  }\r\n  /**\r\n   * Exit the frameloop and notify `onRest` listeners.\r\n   *\r\n   * Always wrap `_stop` calls with `batchedUpdates`.\r\n   */\r\n  _stop(goal, cancel) {\r\n    if (isAnimating(this)) {\r\n      setActiveBit(this, false);\r\n      const anim = this.animation;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(anim.values, (node) => {\r\n        node.done = true;\r\n      });\r\n      if (anim.toValues) {\r\n        anim.onChange = anim.onPause = anim.onResume = void 0;\r\n      }\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.callFluidObservers)(this, {\r\n        type: \"idle\",\r\n        parent: this\r\n      });\r\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal ?? anim.to));\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flushCalls)(this._pendingCalls, result);\r\n      if (anim.changed) {\r\n        anim.changed = false;\r\n        sendEvent(this, \"onRest\", result, this);\r\n      }\r\n    }\r\n  }\r\n};\r\nfunction checkFinished(target, to2) {\r\n  const goal = computeGoal(to2);\r\n  const value = computeGoal(target.get());\r\n  return (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(value, goal);\r\n}\r\nfunction createLoopUpdate(props, loop = props.loop, to2 = props.to) {\r\n  const loopRet = callProp(loop);\r\n  if (loopRet) {\r\n    const overrides = loopRet !== true && inferTo(loopRet);\r\n    const reverse = (overrides || props).reverse;\r\n    const reset = !overrides || overrides.reset;\r\n    return createUpdate({\r\n      ...props,\r\n      loop,\r\n      // Avoid updating default props when looping.\r\n      default: false,\r\n      // Never loop the `pause` prop.\r\n      pause: void 0,\r\n      // For the \"reverse\" prop to loop as expected, the \"to\" prop\r\n      // must be undefined. The \"reverse\" prop is ignored when the\r\n      // \"to\" prop is an array or function.\r\n      to: !reverse || isAsyncTo(to2) ? to2 : void 0,\r\n      // Ignore the \"from\" prop except on reset.\r\n      from: reset ? props.from : void 0,\r\n      reset,\r\n      // The \"loop\" prop can return a \"useSpring\" props object to\r\n      // override any of the original props.\r\n      ...overrides\r\n    });\r\n  }\r\n}\r\nfunction createUpdate(props) {\r\n  const { to: to2, from } = props = inferTo(props);\r\n  const keys = /* @__PURE__ */ new Set();\r\n  if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(to2))\r\n    findDefined(to2, keys);\r\n  if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(from))\r\n    findDefined(from, keys);\r\n  props.keys = keys.size ? Array.from(keys) : null;\r\n  return props;\r\n}\r\nfunction declareUpdate(props) {\r\n  const update2 = createUpdate(props);\r\n  if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(update2.default)) {\r\n    update2.default = getDefaultProps(update2);\r\n  }\r\n  return update2;\r\n}\r\nfunction findDefined(values, keys) {\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(values, (value, key) => value != null && keys.add(key));\r\n}\r\nvar ACTIVE_EVENTS = [\r\n  \"onStart\",\r\n  \"onRest\",\r\n  \"onChange\",\r\n  \"onPause\",\r\n  \"onResume\"\r\n];\r\nfunction mergeActiveFn(target, props, type) {\r\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : void 0;\r\n}\r\nfunction sendEvent(target, type, ...args) {\r\n  target.animation[type]?.(...args);\r\n  target.defaultProps[type]?.(...args);\r\n}\r\n\r\n// src/Controller.ts\r\n\r\nvar BATCHED_EVENTS = [\"onStart\", \"onChange\", \"onRest\"];\r\nvar nextId2 = 1;\r\nvar Controller = class {\r\n  constructor(props, flush3) {\r\n    this.id = nextId2++;\r\n    /** The animated values */\r\n    this.springs = {};\r\n    /** The queue of props passed to the `update` method. */\r\n    this.queue = [];\r\n    /** The counter for tracking `scheduleProps` calls */\r\n    this._lastAsyncId = 0;\r\n    /** The values currently being animated */\r\n    this._active = /* @__PURE__ */ new Set();\r\n    /** The values that changed recently */\r\n    this._changed = /* @__PURE__ */ new Set();\r\n    /** Equals false when `onStart` listeners can be called */\r\n    this._started = false;\r\n    /** State used by the `runAsync` function */\r\n    this._state = {\r\n      paused: false,\r\n      pauseQueue: /* @__PURE__ */ new Set(),\r\n      resumeQueue: /* @__PURE__ */ new Set(),\r\n      timeouts: /* @__PURE__ */ new Set()\r\n    };\r\n    /** The event queues that are flushed once per frame maximum */\r\n    this._events = {\r\n      onStart: /* @__PURE__ */ new Map(),\r\n      onChange: /* @__PURE__ */ new Map(),\r\n      onRest: /* @__PURE__ */ new Map()\r\n    };\r\n    this._onFrame = this._onFrame.bind(this);\r\n    if (flush3) {\r\n      this._flush = flush3;\r\n    }\r\n    if (props) {\r\n      this.start({ default: true, ...props });\r\n    }\r\n  }\r\n  /**\r\n   * Equals `true` when no spring values are in the frameloop, and\r\n   * no async animation is currently active.\r\n   */\r\n  get idle() {\r\n    return !this._state.asyncTo && Object.values(this.springs).every((spring) => {\r\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\r\n    });\r\n  }\r\n  get item() {\r\n    return this._item;\r\n  }\r\n  set item(item) {\r\n    this._item = item;\r\n  }\r\n  /** Get the current values of our springs */\r\n  get() {\r\n    const values = {};\r\n    this.each((spring, key) => values[key] = spring.get());\r\n    return values;\r\n  }\r\n  /** Set the current values without animating. */\r\n  set(values) {\r\n    for (const key in values) {\r\n      const value = values[key];\r\n      if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(value)) {\r\n        this.springs[key].set(value);\r\n      }\r\n    }\r\n  }\r\n  /** Push an update onto the queue of each value. */\r\n  update(props) {\r\n    if (props) {\r\n      this.queue.push(createUpdate(props));\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * Start the queued animations for every spring, and resolve the returned\r\n   * promise once all queued animations have finished or been cancelled.\r\n   *\r\n   * When you pass a queue (instead of nothing), that queue is used instead of\r\n   * the queued animations added with the `update` method, which are left alone.\r\n   */\r\n  start(props) {\r\n    let { queue } = this;\r\n    if (props) {\r\n      queue = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(props).map(createUpdate);\r\n    } else {\r\n      this.queue = [];\r\n    }\r\n    if (this._flush) {\r\n      return this._flush(this, queue);\r\n    }\r\n    prepareKeys(this, queue);\r\n    return flushUpdateQueue(this, queue);\r\n  }\r\n  /** @internal */\r\n  stop(arg, keys) {\r\n    if (arg !== !!arg) {\r\n      keys = arg;\r\n    }\r\n    if (keys) {\r\n      const springs = this.springs;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(keys), (key) => springs[key].stop(!!arg));\r\n    } else {\r\n      stopAsync(this._state, this._lastAsyncId);\r\n      this.each((spring) => spring.stop(!!arg));\r\n    }\r\n    return this;\r\n  }\r\n  /** Freeze the active animation in time */\r\n  pause(keys) {\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(keys)) {\r\n      this.start({ pause: true });\r\n    } else {\r\n      const springs = this.springs;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(keys), (key) => springs[key].pause());\r\n    }\r\n    return this;\r\n  }\r\n  /** Resume the animation if paused. */\r\n  resume(keys) {\r\n    if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(keys)) {\r\n      this.start({ pause: false });\r\n    } else {\r\n      const springs = this.springs;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(keys), (key) => springs[key].resume());\r\n    }\r\n    return this;\r\n  }\r\n  /** Call a function once per spring value */\r\n  each(iterator) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(this.springs, iterator);\r\n  }\r\n  /** @internal Called at the end of every animation frame */\r\n  _onFrame() {\r\n    const { onStart, onChange, onRest } = this._events;\r\n    const active = this._active.size > 0;\r\n    const changed = this._changed.size > 0;\r\n    if (active && !this._started || changed && !this._started) {\r\n      this._started = true;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flush)(onStart, ([onStart2, result]) => {\r\n        result.value = this.get();\r\n        onStart2(result, this, this._item);\r\n      });\r\n    }\r\n    const idle = !active && this._started;\r\n    const values = changed || idle && onRest.size ? this.get() : null;\r\n    if (changed && onChange.size) {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flush)(onChange, ([onChange2, result]) => {\r\n        result.value = values;\r\n        onChange2(result, this, this._item);\r\n      });\r\n    }\r\n    if (idle) {\r\n      this._started = false;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flush)(onRest, ([onRest2, result]) => {\r\n        result.value = values;\r\n        onRest2(result, this, this._item);\r\n      });\r\n    }\r\n  }\r\n  /** @internal */\r\n  eventObserved(event) {\r\n    if (event.type == \"change\") {\r\n      this._changed.add(event.parent);\r\n      if (!event.idle) {\r\n        this._active.add(event.parent);\r\n      }\r\n    } else if (event.type == \"idle\") {\r\n      this._active.delete(event.parent);\r\n    } else\r\n      return;\r\n    _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.onFrame(this._onFrame);\r\n  }\r\n};\r\nfunction flushUpdateQueue(ctrl, queue) {\r\n  return Promise.all(queue.map((props) => flushUpdate(ctrl, props))).then(\r\n    (results) => getCombinedResult(ctrl, results)\r\n  );\r\n}\r\nasync function flushUpdate(ctrl, props, isLoop) {\r\n  const { keys, to: to2, from, loop, onRest, onResolve } = props;\r\n  const defaults2 = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(props.default) && props.default;\r\n  if (loop) {\r\n    props.loop = false;\r\n  }\r\n  if (to2 === false)\r\n    props.to = null;\r\n  if (from === false)\r\n    props.from = null;\r\n  const asyncTo = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(to2) || _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(to2) ? to2 : void 0;\r\n  if (asyncTo) {\r\n    props.to = void 0;\r\n    props.onRest = void 0;\r\n    if (defaults2) {\r\n      defaults2.onRest = void 0;\r\n    }\r\n  } else {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(BATCHED_EVENTS, (key) => {\r\n      const handler = props[key];\r\n      if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(handler)) {\r\n        const queue = ctrl[\"_events\"][key];\r\n        props[key] = ({ finished, cancelled }) => {\r\n          const result2 = queue.get(handler);\r\n          if (result2) {\r\n            if (!finished)\r\n              result2.finished = false;\r\n            if (cancelled)\r\n              result2.cancelled = true;\r\n          } else {\r\n            queue.set(handler, {\r\n              value: null,\r\n              finished: finished || false,\r\n              cancelled: cancelled || false\r\n            });\r\n          }\r\n        };\r\n        if (defaults2) {\r\n          defaults2[key] = props[key];\r\n        }\r\n      }\r\n    });\r\n  }\r\n  const state = ctrl[\"_state\"];\r\n  if (props.pause === !state.paused) {\r\n    state.paused = props.pause;\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.flushCalls)(props.pause ? state.pauseQueue : state.resumeQueue);\r\n  } else if (state.paused) {\r\n    props.pause = true;\r\n  }\r\n  const promises = (keys || Object.keys(ctrl.springs)).map(\r\n    (key) => ctrl.springs[key].start(props)\r\n  );\r\n  const cancel = props.cancel === true || getDefaultProp(props, \"cancel\") === true;\r\n  if (asyncTo || cancel && state.asyncId) {\r\n    promises.push(\r\n      scheduleProps(++ctrl[\"_lastAsyncId\"], {\r\n        props,\r\n        state,\r\n        actions: {\r\n          pause: _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.noop,\r\n          resume: _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.noop,\r\n          start(props2, resolve) {\r\n            if (cancel) {\r\n              stopAsync(state, ctrl[\"_lastAsyncId\"]);\r\n              resolve(getCancelledResult(ctrl));\r\n            } else {\r\n              props2.onRest = onRest;\r\n              resolve(\r\n                runAsync(\r\n                  asyncTo,\r\n                  props2,\r\n                  state,\r\n                  ctrl\r\n                )\r\n              );\r\n            }\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n  if (state.paused) {\r\n    await new Promise((resume) => {\r\n      state.resumeQueue.add(resume);\r\n    });\r\n  }\r\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\r\n  if (loop && result.finished && !(isLoop && result.noop)) {\r\n    const nextProps = createLoopUpdate(props, loop, to2);\r\n    if (nextProps) {\r\n      prepareKeys(ctrl, [nextProps]);\r\n      return flushUpdate(ctrl, nextProps, true);\r\n    }\r\n  }\r\n  if (onResolve) {\r\n    _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\r\n  }\r\n  return result;\r\n}\r\nfunction getSprings(ctrl, props) {\r\n  const springs = { ...ctrl.springs };\r\n  if (props) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(props), (props2) => {\r\n      if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props2.keys)) {\r\n        props2 = createUpdate(props2);\r\n      }\r\n      if (!_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(props2.to)) {\r\n        props2 = { ...props2, to: void 0 };\r\n      }\r\n      prepareSprings(springs, props2, (key) => {\r\n        return createSpring(key);\r\n      });\r\n    });\r\n  }\r\n  setSprings(ctrl, springs);\r\n  return springs;\r\n}\r\nfunction setSprings(ctrl, springs) {\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.eachProp)(springs, (spring, key) => {\r\n    if (!ctrl.springs[key]) {\r\n      ctrl.springs[key] = spring;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.addFluidObserver)(spring, ctrl);\r\n    }\r\n  });\r\n}\r\nfunction createSpring(key, observer) {\r\n  const spring = new SpringValue();\r\n  spring.key = key;\r\n  if (observer) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.addFluidObserver)(spring, observer);\r\n  }\r\n  return spring;\r\n}\r\nfunction prepareSprings(springs, props, create) {\r\n  if (props.keys) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(props.keys, (key) => {\r\n      const spring = springs[key] || (springs[key] = create(key));\r\n      spring[\"_prepareNode\"](props);\r\n    });\r\n  }\r\n}\r\nfunction prepareKeys(ctrl, queue) {\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(queue, (props) => {\r\n    prepareSprings(ctrl.springs, props, (key) => {\r\n      return createSpring(key, ctrl);\r\n    });\r\n  });\r\n}\r\n\r\n// src/SpringContext.tsx\r\n\r\n\r\n\r\nvar SpringContext = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  const inherited = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ctx);\r\n  const pause = props.pause || !!inherited.pause, immediate = props.immediate || !!inherited.immediate;\r\n  props = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useMemoOne)(() => ({ pause, immediate }), [pause, immediate]);\r\n  const { Provider } = ctx;\r\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Provider, { value: props }, children);\r\n};\r\nvar ctx = makeContext(SpringContext, {});\r\nSpringContext.Provider = ctx.Provider;\r\nSpringContext.Consumer = ctx.Consumer;\r\nfunction makeContext(target, init) {\r\n  Object.assign(target, react__WEBPACK_IMPORTED_MODULE_1__.createContext(init));\r\n  target.Provider._context = target;\r\n  target.Consumer._context = target;\r\n  return target;\r\n}\r\n\r\n// src/SpringRef.ts\r\n\r\nvar SpringRef = () => {\r\n  const current = [];\r\n  const SpringRef2 = function(props) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.deprecateDirectCall)();\r\n    const results = [];\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(current, (ctrl, i) => {\r\n      if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props)) {\r\n        results.push(ctrl.start());\r\n      } else {\r\n        const update2 = _getProps(props, ctrl, i);\r\n        if (update2) {\r\n          results.push(ctrl.start(update2));\r\n        }\r\n      }\r\n    });\r\n    return results;\r\n  };\r\n  SpringRef2.current = current;\r\n  SpringRef2.add = function(ctrl) {\r\n    if (!current.includes(ctrl)) {\r\n      current.push(ctrl);\r\n    }\r\n  };\r\n  SpringRef2.delete = function(ctrl) {\r\n    const i = current.indexOf(ctrl);\r\n    if (~i)\r\n      current.splice(i, 1);\r\n  };\r\n  SpringRef2.pause = function() {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(current, (ctrl) => ctrl.pause(...arguments));\r\n    return this;\r\n  };\r\n  SpringRef2.resume = function() {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(current, (ctrl) => ctrl.resume(...arguments));\r\n    return this;\r\n  };\r\n  SpringRef2.set = function(values) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(current, (ctrl, i) => {\r\n      const update2 = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(values) ? values(i, ctrl) : values;\r\n      if (update2) {\r\n        ctrl.set(update2);\r\n      }\r\n    });\r\n  };\r\n  SpringRef2.start = function(props) {\r\n    const results = [];\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(current, (ctrl, i) => {\r\n      if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(props)) {\r\n        results.push(ctrl.start());\r\n      } else {\r\n        const update2 = this._getProps(props, ctrl, i);\r\n        if (update2) {\r\n          results.push(ctrl.start(update2));\r\n        }\r\n      }\r\n    });\r\n    return results;\r\n  };\r\n  SpringRef2.stop = function() {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(current, (ctrl) => ctrl.stop(...arguments));\r\n    return this;\r\n  };\r\n  SpringRef2.update = function(props) {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\r\n    return this;\r\n  };\r\n  const _getProps = function(arg, ctrl, index) {\r\n    return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(arg) ? arg(index, ctrl) : arg;\r\n  };\r\n  SpringRef2._getProps = _getProps;\r\n  return SpringRef2;\r\n};\r\n\r\n// src/hooks/useSprings.ts\r\nfunction useSprings(length, props, deps) {\r\n  const propsFn = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(props) && props;\r\n  if (propsFn && !deps)\r\n    deps = [];\r\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\r\n    () => propsFn || arguments.length == 3 ? SpringRef() : void 0,\r\n    []\r\n  );\r\n  const layoutId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\r\n  const forceUpdate = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useForceUpdate)();\r\n  const state = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\r\n    () => ({\r\n      ctrls: [],\r\n      queue: [],\r\n      flush(ctrl, updates2) {\r\n        const springs2 = getSprings(ctrl, updates2);\r\n        const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs2).some((key) => !ctrl.springs[key]);\r\n        return canFlushSync ? flushUpdateQueue(ctrl, updates2) : new Promise((resolve) => {\r\n          setSprings(ctrl, springs2);\r\n          state.queue.push(() => {\r\n            resolve(flushUpdateQueue(ctrl, updates2));\r\n          });\r\n          forceUpdate();\r\n        });\r\n      }\r\n    }),\r\n    []\r\n  );\r\n  const ctrls = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([...state.ctrls]);\r\n  const updates = [];\r\n  const prevLength = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.usePrev)(length) || 0;\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(ctrls.current.slice(length, prevLength), (ctrl) => {\r\n      detachRefs(ctrl, ref);\r\n      ctrl.stop(true);\r\n    });\r\n    ctrls.current.length = length;\r\n    declareUpdates(prevLength, length);\r\n  }, [length]);\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\r\n    declareUpdates(0, Math.min(prevLength, length));\r\n  }, deps);\r\n  function declareUpdates(startIndex, endIndex) {\r\n    for (let i = startIndex; i < endIndex; i++) {\r\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\r\n      const update2 = propsFn ? propsFn(i, ctrl) : props[i];\r\n      if (update2) {\r\n        updates[i] = declareUpdate(update2);\r\n      }\r\n    }\r\n  }\r\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\r\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SpringContext);\r\n  const prevContext = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.usePrev)(context);\r\n  const hasContext = context !== prevContext && hasProps(context);\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    layoutId.current++;\r\n    state.ctrls = ctrls.current;\r\n    const { queue } = state;\r\n    if (queue.length) {\r\n      state.queue = [];\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(queue, (cb) => cb());\r\n    }\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(ctrls.current, (ctrl, i) => {\r\n      ref?.add(ctrl);\r\n      if (hasContext) {\r\n        ctrl.start({ default: context });\r\n      }\r\n      const update2 = updates[i];\r\n      if (update2) {\r\n        replaceRef(ctrl, update2.ref);\r\n        if (ctrl.ref) {\r\n          ctrl.queue.push(update2);\r\n        } else {\r\n          ctrl.start(update2);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useOnce)(() => () => {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(state.ctrls, (ctrl) => ctrl.stop(true));\r\n  });\r\n  const values = springs.map((x) => ({ ...x }));\r\n  return ref ? [values, ref] : values;\r\n}\r\n\r\n// src/hooks/useSpring.ts\r\nfunction useSpring(props, deps) {\r\n  const isFn = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(props);\r\n  const [[values], ref] = useSprings(\r\n    1,\r\n    isFn ? props : [props],\r\n    isFn ? deps || [] : deps\r\n  );\r\n  return isFn || arguments.length == 2 ? [values, ref] : values;\r\n}\r\n\r\n// src/hooks/useSpringRef.ts\r\n\r\nvar initSpringRef = () => SpringRef();\r\nvar useSpringRef = () => (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initSpringRef)[0];\r\n\r\n// src/hooks/useSpringValue.ts\r\n\r\nvar useSpringValue = (initial, props) => {\r\n  const springValue = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useConstant)(() => new SpringValue(initial, props));\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useOnce)(() => () => {\r\n    springValue.stop();\r\n  });\r\n  return springValue;\r\n};\r\n\r\n// src/hooks/useTrail.ts\r\n\r\nfunction useTrail(length, propsArg, deps) {\r\n  const propsFn = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(propsArg) && propsArg;\r\n  if (propsFn && !deps)\r\n    deps = [];\r\n  let reverse = true;\r\n  let passedRef = void 0;\r\n  const result = useSprings(\r\n    length,\r\n    (i, ctrl) => {\r\n      const props = propsFn ? propsFn(i, ctrl) : propsArg;\r\n      passedRef = props.ref;\r\n      reverse = reverse && props.reverse;\r\n      return props;\r\n    },\r\n    // Ensure the props function is called when no deps exist.\r\n    // This works around the 3 argument rule.\r\n    deps || [{}]\r\n  );\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(result[1].current, (ctrl, i) => {\r\n      const parent = result[1].current[i + (reverse ? 1 : -1)];\r\n      replaceRef(ctrl, passedRef);\r\n      if (ctrl.ref) {\r\n        if (parent) {\r\n          ctrl.update({ to: parent.springs });\r\n        }\r\n        return;\r\n      }\r\n      if (parent) {\r\n        ctrl.start({ to: parent.springs });\r\n      } else {\r\n        ctrl.start();\r\n      }\r\n    });\r\n  }, deps);\r\n  if (propsFn || arguments.length == 3) {\r\n    const ref = passedRef ?? result[1];\r\n    ref[\"_getProps\"] = (propsArg2, ctrl, i) => {\r\n      const props = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(propsArg2) ? propsArg2(i, ctrl) : propsArg2;\r\n      if (props) {\r\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\r\n        if (parent)\r\n          props.to = parent.springs;\r\n        return props;\r\n      }\r\n    };\r\n    return result;\r\n  }\r\n  return result[0];\r\n}\r\n\r\n// src/hooks/useTransition.tsx\r\n\r\n\r\n\r\nfunction useTransition(data, props, deps) {\r\n  const propsFn = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(props) && props;\r\n  const {\r\n    reset,\r\n    sort,\r\n    trail = 0,\r\n    expires = true,\r\n    exitBeforeEnter = false,\r\n    onDestroyed,\r\n    ref: propsRef,\r\n    config: propsConfig\r\n  } = propsFn ? propsFn() : props;\r\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\r\n    () => propsFn || arguments.length == 3 ? SpringRef() : void 0,\r\n    []\r\n  );\r\n  const items = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(data);\r\n  const transitions = [];\r\n  const usedTransitions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\r\n  const prevTransitions = reset ? null : usedTransitions.current;\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    usedTransitions.current = transitions;\r\n  });\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useOnce)(() => {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(transitions, (t) => {\r\n      ref?.add(t.ctrl);\r\n      t.ctrl.ref = ref;\r\n    });\r\n    return () => {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(usedTransitions.current, (t) => {\r\n        if (t.expired) {\r\n          clearTimeout(t.expirationId);\r\n        }\r\n        detachRefs(t.ctrl, ref);\r\n        t.ctrl.stop(true);\r\n      });\r\n    };\r\n  });\r\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\r\n  const expired = reset && usedTransitions.current || [];\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(\r\n    () => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(expired, ({ ctrl, item, key }) => {\r\n      detachRefs(ctrl, ref);\r\n      callProp(onDestroyed, item, key);\r\n    })\r\n  );\r\n  const reused = [];\r\n  if (prevTransitions)\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(prevTransitions, (t, i) => {\r\n      if (t.expired) {\r\n        clearTimeout(t.expirationId);\r\n        expired.push(t);\r\n      } else {\r\n        i = reused[i] = keys.indexOf(t.key);\r\n        if (~i)\r\n          transitions[i] = t;\r\n      }\r\n    });\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(items, (item, i) => {\r\n    if (!transitions[i]) {\r\n      transitions[i] = {\r\n        key: keys[i],\r\n        item,\r\n        phase: \"mount\" /* MOUNT */,\r\n        ctrl: new Controller()\r\n      };\r\n      transitions[i].ctrl.item = item;\r\n    }\r\n  });\r\n  if (reused.length) {\r\n    let i = -1;\r\n    const { leave } = propsFn ? propsFn() : props;\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(reused, (keyIndex, prevIndex) => {\r\n      const t = prevTransitions[prevIndex];\r\n      if (~keyIndex) {\r\n        i = transitions.indexOf(t);\r\n        transitions[i] = { ...t, item: items[keyIndex] };\r\n      } else if (leave) {\r\n        transitions.splice(++i, 0, t);\r\n      }\r\n    });\r\n  }\r\n  if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(sort)) {\r\n    transitions.sort((a, b) => sort(a.item, b.item));\r\n  }\r\n  let delay = -trail;\r\n  const forceUpdate = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useForceUpdate)();\r\n  const defaultProps = getDefaultProps(props);\r\n  const changes = /* @__PURE__ */ new Map();\r\n  const exitingTransitions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(/* @__PURE__ */ new Map());\r\n  const forceChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(transitions, (t, i) => {\r\n    const key = t.key;\r\n    const prevPhase = t.phase;\r\n    const p = propsFn ? propsFn() : props;\r\n    let to2;\r\n    let phase;\r\n    const propsDelay = callProp(p.delay || 0, key);\r\n    if (prevPhase == \"mount\" /* MOUNT */) {\r\n      to2 = p.enter;\r\n      phase = \"enter\" /* ENTER */;\r\n    } else {\r\n      const isLeave = keys.indexOf(key) < 0;\r\n      if (prevPhase != \"leave\" /* LEAVE */) {\r\n        if (isLeave) {\r\n          to2 = p.leave;\r\n          phase = \"leave\" /* LEAVE */;\r\n        } else if (to2 = p.update) {\r\n          phase = \"update\" /* UPDATE */;\r\n        } else\r\n          return;\r\n      } else if (!isLeave) {\r\n        to2 = p.enter;\r\n        phase = \"enter\" /* ENTER */;\r\n      } else\r\n        return;\r\n    }\r\n    to2 = callProp(to2, t.item, i);\r\n    to2 = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.obj(to2) ? inferTo(to2) : { to: to2 };\r\n    if (!to2.config) {\r\n      const config2 = propsConfig || defaultProps.config;\r\n      to2.config = callProp(config2, t.item, i, phase);\r\n    }\r\n    delay += trail;\r\n    const payload = {\r\n      ...defaultProps,\r\n      // we need to add our props.delay value you here.\r\n      delay: propsDelay + delay,\r\n      ref: propsRef,\r\n      immediate: p.immediate,\r\n      // This prevents implied resets.\r\n      reset: false,\r\n      // Merge any phase-specific props.\r\n      ...to2\r\n    };\r\n    if (phase == \"enter\" /* ENTER */ && _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(payload.from)) {\r\n      const p2 = propsFn ? propsFn() : props;\r\n      const from = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(p2.initial) || prevTransitions ? p2.from : p2.initial;\r\n      payload.from = callProp(from, t.item, i);\r\n    }\r\n    const { onResolve } = payload;\r\n    payload.onResolve = (result) => {\r\n      callProp(onResolve, result);\r\n      const transitions2 = usedTransitions.current;\r\n      const t2 = transitions2.find((t3) => t3.key === key);\r\n      if (!t2)\r\n        return;\r\n      if (result.cancelled && t2.phase != \"update\" /* UPDATE */) {\r\n        return;\r\n      }\r\n      if (t2.ctrl.idle) {\r\n        const idle = transitions2.every((t3) => t3.ctrl.idle);\r\n        if (t2.phase == \"leave\" /* LEAVE */) {\r\n          const expiry = callProp(expires, t2.item);\r\n          if (expiry !== false) {\r\n            const expiryMs = expiry === true ? 0 : expiry;\r\n            t2.expired = true;\r\n            if (!idle && expiryMs > 0) {\r\n              if (expiryMs <= 2147483647)\r\n                t2.expirationId = setTimeout(forceUpdate, expiryMs);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        if (idle && transitions2.some((t3) => t3.expired)) {\r\n          exitingTransitions.current.delete(t2);\r\n          if (exitBeforeEnter) {\r\n            forceChange.current = true;\r\n          }\r\n          forceUpdate();\r\n        }\r\n      }\r\n    };\r\n    const springs = getSprings(t.ctrl, payload);\r\n    if (phase === \"leave\" /* LEAVE */ && exitBeforeEnter) {\r\n      exitingTransitions.current.set(t, { phase, springs, payload });\r\n    } else {\r\n      changes.set(t, { phase, springs, payload });\r\n    }\r\n  });\r\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SpringContext);\r\n  const prevContext = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.usePrev)(context);\r\n  const hasContext = context !== prevContext && hasProps(context);\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    if (hasContext) {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(transitions, (t) => {\r\n        t.ctrl.start({ default: context });\r\n      });\r\n    }\r\n  }, [context]);\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(changes, (_, t) => {\r\n    if (exitingTransitions.current.size) {\r\n      const ind = transitions.findIndex((state) => state.key === t.key);\r\n      transitions.splice(ind, 1);\r\n    }\r\n  });\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(\r\n    () => {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(\r\n        exitingTransitions.current.size ? exitingTransitions.current : changes,\r\n        ({ phase, payload }, t) => {\r\n          const { ctrl } = t;\r\n          t.phase = phase;\r\n          ref?.add(ctrl);\r\n          if (hasContext && phase == \"enter\" /* ENTER */) {\r\n            ctrl.start({ default: context });\r\n          }\r\n          if (payload) {\r\n            replaceRef(ctrl, payload.ref);\r\n            if ((ctrl.ref || ref) && !forceChange.current) {\r\n              ctrl.update(payload);\r\n            } else {\r\n              ctrl.start(payload);\r\n              if (forceChange.current) {\r\n                forceChange.current = false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      );\r\n    },\r\n    reset ? void 0 : deps\r\n  );\r\n  const renderTransitions = (render) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, transitions.map((t, i) => {\r\n    const { springs } = changes.get(t) || t.ctrl;\r\n    const elem = render({ ...springs }, t.item, t, i);\r\n    return elem && elem.type ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_1__.createElement(\r\n      elem.type,\r\n      {\r\n        ...elem.props,\r\n        key: _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.str(t.key) || _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.num(t.key) ? t.key : t.ctrl.id,\r\n        ref: elem.ref\r\n      }\r\n    ) : elem;\r\n  }));\r\n  return ref ? [renderTransitions, ref] : renderTransitions;\r\n}\r\nvar nextKey = 1;\r\nfunction getKeys(items, { key, keys = key }, prevTransitions) {\r\n  if (keys === null) {\r\n    const reused = /* @__PURE__ */ new Set();\r\n    return items.map((item) => {\r\n      const t = prevTransitions && prevTransitions.find(\r\n        (t2) => t2.item === item && t2.phase !== \"leave\" /* LEAVE */ && !reused.has(t2)\r\n      );\r\n      if (t) {\r\n        reused.add(t);\r\n        return t.key;\r\n      }\r\n      return nextKey++;\r\n    });\r\n  }\r\n  return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.und(keys) ? items : _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(keys) ? items.map(keys) : (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(keys);\r\n}\r\n\r\n// src/hooks/useScroll.ts\r\n\r\nvar useScroll = ({\r\n  container,\r\n  ...springOptions\r\n} = {}) => {\r\n  const [scrollValues, api] = useSpring(\r\n    () => ({\r\n      scrollX: 0,\r\n      scrollY: 0,\r\n      scrollXProgress: 0,\r\n      scrollYProgress: 0,\r\n      ...springOptions\r\n    }),\r\n    []\r\n  );\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    const cleanupScroll = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.onScroll)(\r\n      ({ x, y }) => {\r\n        api.start({\r\n          scrollX: x.current,\r\n          scrollXProgress: x.progress,\r\n          scrollY: y.current,\r\n          scrollYProgress: y.progress\r\n        });\r\n      },\r\n      { container: container?.current || void 0 }\r\n    );\r\n    return () => {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(Object.values(scrollValues), (value) => value.stop());\r\n      cleanupScroll();\r\n    };\r\n  }, []);\r\n  return scrollValues;\r\n};\r\n\r\n// src/hooks/useResize.ts\r\n\r\nvar useResize = ({\r\n  container,\r\n  ...springOptions\r\n}) => {\r\n  const [sizeValues, api] = useSpring(\r\n    () => ({\r\n      width: 0,\r\n      height: 0,\r\n      ...springOptions\r\n    }),\r\n    []\r\n  );\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    const cleanupScroll = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.onResize)(\r\n      ({ width, height }) => {\r\n        api.start({\r\n          width,\r\n          height,\r\n          immediate: sizeValues.width.get() === 0 || sizeValues.height.get() === 0\r\n        });\r\n      },\r\n      { container: container?.current || void 0 }\r\n    );\r\n    return () => {\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)(Object.values(sizeValues), (value) => value.stop());\r\n      cleanupScroll();\r\n    };\r\n  }, []);\r\n  return sizeValues;\r\n};\r\n\r\n// src/hooks/useInView.ts\r\n\r\n\r\nvar defaultThresholdOptions = {\r\n  any: 0,\r\n  all: 1\r\n};\r\nfunction useInView(props, args) {\r\n  const [isInView, setIsInView] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\r\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\r\n  const propsFn = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(props) && props;\r\n  const springsProps = propsFn ? propsFn() : {};\r\n  const { to: to2 = {}, from = {}, ...restSpringProps } = springsProps;\r\n  const intersectionArguments = propsFn ? args : props;\r\n  const [springs, api] = useSpring(() => ({ from, ...restSpringProps }), []);\r\n  (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect)(() => {\r\n    const element = ref.current;\r\n    const {\r\n      root,\r\n      once,\r\n      amount = \"any\",\r\n      ...restArgs\r\n    } = intersectionArguments ?? {};\r\n    if (!element || once && isInView || typeof IntersectionObserver === \"undefined\")\r\n      return;\r\n    const activeIntersections = /* @__PURE__ */ new WeakMap();\r\n    const onEnter = () => {\r\n      if (to2) {\r\n        api.start(to2);\r\n      }\r\n      setIsInView(true);\r\n      const cleanup = () => {\r\n        if (from) {\r\n          api.start(from);\r\n        }\r\n        setIsInView(false);\r\n      };\r\n      return once ? void 0 : cleanup;\r\n    };\r\n    const handleIntersection = (entries) => {\r\n      entries.forEach((entry) => {\r\n        const onLeave = activeIntersections.get(entry.target);\r\n        if (entry.isIntersecting === Boolean(onLeave)) {\r\n          return;\r\n        }\r\n        if (entry.isIntersecting) {\r\n          const newOnLeave = onEnter();\r\n          if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(newOnLeave)) {\r\n            activeIntersections.set(entry.target, newOnLeave);\r\n          } else {\r\n            observer.unobserve(entry.target);\r\n          }\r\n        } else if (onLeave) {\r\n          onLeave();\r\n          activeIntersections.delete(entry.target);\r\n        }\r\n      });\r\n    };\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: root && root.current || void 0,\r\n      threshold: typeof amount === \"number\" || Array.isArray(amount) ? amount : defaultThresholdOptions[amount],\r\n      ...restArgs\r\n    });\r\n    observer.observe(element);\r\n    return () => observer.unobserve(element);\r\n  }, [intersectionArguments]);\r\n  if (propsFn) {\r\n    return [ref, springs];\r\n  }\r\n  return [ref, isInView];\r\n}\r\n\r\n// src/components/Spring.tsx\r\nfunction Spring({ children, ...props }) {\r\n  return children(useSpring(props));\r\n}\r\n\r\n// src/components/Trail.tsx\r\n\r\nfunction Trail({\r\n  items,\r\n  children,\r\n  ...props\r\n}) {\r\n  const trails = useTrail(items.length, props);\r\n  return items.map((item, index) => {\r\n    const result = children(item, index);\r\n    return _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.fun(result) ? result(trails[index]) : result;\r\n  });\r\n}\r\n\r\n// src/components/Transition.tsx\r\nfunction Transition({\r\n  items,\r\n  children,\r\n  ...props\r\n}) {\r\n  return useTransition(items, props)(children);\r\n}\r\n\r\n// src/interpolate.ts\r\n\r\n\r\n// src/Interpolation.ts\r\n\r\n\r\nvar Interpolation = class extends FrameValue {\r\n  constructor(source, args) {\r\n    super();\r\n    this.source = source;\r\n    /** Equals false when in the frameloop */\r\n    this.idle = true;\r\n    /** The inputs which are currently animating */\r\n    this._active = /* @__PURE__ */ new Set();\r\n    this.calc = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.createInterpolator)(...args);\r\n    const value = this._get();\r\n    const nodeType = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimatedType)(value);\r\n    (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.setAnimated)(this, nodeType.create(value));\r\n  }\r\n  advance(_dt) {\r\n    const value = this._get();\r\n    const oldValue = this.get();\r\n    if (!(0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.isEqual)(value, oldValue)) {\r\n      (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getAnimated)(this).setValue(value);\r\n      this._onChange(value, this.idle);\r\n    }\r\n    if (!this.idle && checkIdle(this._active)) {\r\n      becomeIdle(this);\r\n    }\r\n  }\r\n  _get() {\r\n    const inputs = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.is.arr(this.source) ? this.source.map(_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue) : (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.getFluidValue)(this.source));\r\n    return this.calc(...inputs);\r\n  }\r\n  _start() {\r\n    if (this.idle && !checkIdle(this._active)) {\r\n      this.idle = false;\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getPayload)(this), (node) => {\r\n        node.done = false;\r\n      });\r\n      if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.skipAnimation) {\r\n        _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates(() => this.advance());\r\n        becomeIdle(this);\r\n      } else {\r\n        _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.frameLoop.start(this);\r\n      }\r\n    }\r\n  }\r\n  // Observe our sources only when we're observed.\r\n  _attach() {\r\n    let priority = 1;\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(this.source), (source) => {\r\n      if ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(source)) {\r\n        (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.addFluidObserver)(source, this);\r\n      }\r\n      if (isFrameValue(source)) {\r\n        if (!source.idle) {\r\n          this._active.add(source);\r\n        }\r\n        priority = Math.max(priority, source.priority + 1);\r\n      }\r\n    });\r\n    this.priority = priority;\r\n    this._start();\r\n  }\r\n  // Stop observing our sources once we have no observers.\r\n  _detach() {\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(this.source), (source) => {\r\n      if ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.hasFluidValue)(source)) {\r\n        (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.removeFluidObserver)(source, this);\r\n      }\r\n    });\r\n    this._active.clear();\r\n    becomeIdle(this);\r\n  }\r\n  /** @internal */\r\n  eventObserved(event) {\r\n    if (event.type == \"change\") {\r\n      if (event.idle) {\r\n        this.advance();\r\n      } else {\r\n        this._active.add(event.parent);\r\n        this._start();\r\n      }\r\n    } else if (event.type == \"idle\") {\r\n      this._active.delete(event.parent);\r\n    } else if (event.type == \"priority\") {\r\n      this.priority = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.toArray)(this.source).reduce(\r\n        (highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1),\r\n        0\r\n      );\r\n    }\r\n  }\r\n};\r\nfunction isIdle(source) {\r\n  return source.idle !== false;\r\n}\r\nfunction checkIdle(active) {\r\n  return !active.size || Array.from(active).every(isIdle);\r\n}\r\nfunction becomeIdle(self) {\r\n  if (!self.idle) {\r\n    self.idle = true;\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.each)((0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_2__.getPayload)(self), (node) => {\r\n      node.done = true;\r\n    });\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.callFluidObservers)(self, {\r\n      type: \"idle\",\r\n      parent: self\r\n    });\r\n  }\r\n}\r\n\r\n// src/interpolate.ts\r\nvar to = (source, ...args) => new Interpolation(source, args);\r\nvar interpolate = (source, ...args) => ((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.deprecateInterpolate)(), new Interpolation(source, args));\r\n\r\n// src/globals.ts\r\n\r\n_react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.Globals.assign({\r\n  createStringInterpolator: _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.createStringInterpolator,\r\n  to: (source, args) => new Interpolation(source, args)\r\n});\r\nvar update = _react_spring_shared__WEBPACK_IMPORTED_MODULE_0__.frameLoop.advance;\r\n\r\n// src/index.ts\r\n\r\n\r\n\r\n//# sourceMappingURL=react-spring_core.modern.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXNwcmluZy9jb3JlL2Rpc3QvcmVhY3Qtc3ByaW5nX2NvcmUubW9kZXJuLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ3VFO0FBQ3ZFO0FBQ0E7QUFROEI7QUFDOUI7QUFDQSxTQUFTLG9EQUFFO0FBQ1g7QUFDQSxzRUFBc0Usb0RBQUUsMkJBQTJCLDZEQUFPO0FBQzFHLGlDQUFpQyxvREFBRTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxvREFBRTtBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDhEQUFRO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsSUFBSSw4REFBUTtBQUNaO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFVBQVUsbUVBQWE7QUFDdkIsU0FBUyxvREFBRSx1Q0FBdUMsc0VBQWdCLFVBQVUseURBQUM7QUFDN0U7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsb0RBQUUsYUFBYSxvREFBRSxhQUFhLG9EQUFFO0FBQ3pDO0FBQ0E7QUFDQTtBQUNB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QUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTixzQkFBc0IsNkRBQVE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSwwREFBTSxDQUFDLGtFQUFXO0FBQ3RCO0FBQ0EsS0FBSztBQUNMLElBQUksd0VBQW1CO0FBQ3ZCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QywwRUFBcUI7QUFDN0Q7QUFDQTtBQUs4QjtBQUM5Qix5REFBTztBQUNQLDBCQUEwQjtBQUMxQjtBQUNBLENBQUM7QUFDRCxhQUFhLDJEQUFVO0FBQ3ZCO0FBQ0E7QUFNOEI7QUFDTTtBQWdDbEM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL25vZGVfbW9kdWxlcy9AcmVhY3Qtc3ByaW5nL2NvcmUvZGlzdC9yZWFjdC1zcHJpbmdfY29yZS5tb2Rlcm4ubWpzPzRjZWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2hvb2tzL3VzZUNoYWluLnRzXHJcbmltcG9ydCB7IGVhY2gsIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuXHJcbi8vIHNyYy9oZWxwZXJzLnRzXHJcbmltcG9ydCB7XHJcbiAgaXMsXHJcbiAgdG9BcnJheSxcclxuICBlYWNoUHJvcCxcclxuICBnZXRGbHVpZFZhbHVlLFxyXG4gIGlzQW5pbWF0ZWRTdHJpbmcsXHJcbiAgR2xvYmFscyBhcyBHXHJcbn0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcbmZ1bmN0aW9uIGNhbGxQcm9wKHZhbHVlLCAuLi5hcmdzKSB7XHJcbiAgcmV0dXJuIGlzLmZ1bih2YWx1ZSkgPyB2YWx1ZSguLi5hcmdzKSA6IHZhbHVlO1xyXG59XHJcbnZhciBtYXRjaFByb3AgPSAodmFsdWUsIGtleSkgPT4gdmFsdWUgPT09IHRydWUgfHwgISEoa2V5ICYmIHZhbHVlICYmIChpcy5mdW4odmFsdWUpID8gdmFsdWUoa2V5KSA6IHRvQXJyYXkodmFsdWUpLmluY2x1ZGVzKGtleSkpKTtcclxudmFyIHJlc29sdmVQcm9wID0gKHByb3AsIGtleSkgPT4gaXMub2JqKHByb3ApID8ga2V5ICYmIHByb3Bba2V5XSA6IHByb3A7XHJcbnZhciBnZXREZWZhdWx0UHJvcCA9IChwcm9wcywga2V5KSA9PiBwcm9wcy5kZWZhdWx0ID09PSB0cnVlID8gcHJvcHNba2V5XSA6IHByb3BzLmRlZmF1bHQgPyBwcm9wcy5kZWZhdWx0W2tleV0gOiB2b2lkIDA7XHJcbnZhciBub29wVHJhbnNmb3JtID0gKHZhbHVlKSA9PiB2YWx1ZTtcclxudmFyIGdldERlZmF1bHRQcm9wcyA9IChwcm9wcywgdHJhbnNmb3JtID0gbm9vcFRyYW5zZm9ybSkgPT4ge1xyXG4gIGxldCBrZXlzID0gREVGQVVMVF9QUk9QUztcclxuICBpZiAocHJvcHMuZGVmYXVsdCAmJiBwcm9wcy5kZWZhdWx0ICE9PSB0cnVlKSB7XHJcbiAgICBwcm9wcyA9IHByb3BzLmRlZmF1bHQ7XHJcbiAgICBrZXlzID0gT2JqZWN0LmtleXMocHJvcHMpO1xyXG4gIH1cclxuICBjb25zdCBkZWZhdWx0czIgPSB7fTtcclxuICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XHJcbiAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybShwcm9wc1trZXldLCBrZXkpO1xyXG4gICAgaWYgKCFpcy51bmQodmFsdWUpKSB7XHJcbiAgICAgIGRlZmF1bHRzMltrZXldID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBkZWZhdWx0czI7XHJcbn07XHJcbnZhciBERUZBVUxUX1BST1BTID0gW1xyXG4gIFwiY29uZmlnXCIsXHJcbiAgXCJvblByb3BzXCIsXHJcbiAgXCJvblN0YXJ0XCIsXHJcbiAgXCJvbkNoYW5nZVwiLFxyXG4gIFwib25QYXVzZVwiLFxyXG4gIFwib25SZXN1bWVcIixcclxuICBcIm9uUmVzdFwiXHJcbl07XHJcbnZhciBSRVNFUlZFRF9QUk9QUyA9IHtcclxuICBjb25maWc6IDEsXHJcbiAgZnJvbTogMSxcclxuICB0bzogMSxcclxuICByZWY6IDEsXHJcbiAgbG9vcDogMSxcclxuICByZXNldDogMSxcclxuICBwYXVzZTogMSxcclxuICBjYW5jZWw6IDEsXHJcbiAgcmV2ZXJzZTogMSxcclxuICBpbW1lZGlhdGU6IDEsXHJcbiAgZGVmYXVsdDogMSxcclxuICBkZWxheTogMSxcclxuICBvblByb3BzOiAxLFxyXG4gIG9uU3RhcnQ6IDEsXHJcbiAgb25DaGFuZ2U6IDEsXHJcbiAgb25QYXVzZTogMSxcclxuICBvblJlc3VtZTogMSxcclxuICBvblJlc3Q6IDEsXHJcbiAgb25SZXNvbHZlOiAxLFxyXG4gIC8vIFRyYW5zaXRpb24gcHJvcHNcclxuICBpdGVtczogMSxcclxuICB0cmFpbDogMSxcclxuICBzb3J0OiAxLFxyXG4gIGV4cGlyZXM6IDEsXHJcbiAgaW5pdGlhbDogMSxcclxuICBlbnRlcjogMSxcclxuICB1cGRhdGU6IDEsXHJcbiAgbGVhdmU6IDEsXHJcbiAgY2hpbGRyZW46IDEsXHJcbiAgb25EZXN0cm95ZWQ6IDEsXHJcbiAgLy8gSW50ZXJuYWwgcHJvcHNcclxuICBrZXlzOiAxLFxyXG4gIGNhbGxJZDogMSxcclxuICBwYXJlbnRJZDogMVxyXG59O1xyXG5mdW5jdGlvbiBnZXRGb3J3YXJkUHJvcHMocHJvcHMpIHtcclxuICBjb25zdCBmb3J3YXJkID0ge307XHJcbiAgbGV0IGNvdW50ID0gMDtcclxuICBlYWNoUHJvcChwcm9wcywgKHZhbHVlLCBwcm9wKSA9PiB7XHJcbiAgICBpZiAoIVJFU0VSVkVEX1BST1BTW3Byb3BdKSB7XHJcbiAgICAgIGZvcndhcmRbcHJvcF0gPSB2YWx1ZTtcclxuICAgICAgY291bnQrKztcclxuICAgIH1cclxuICB9KTtcclxuICBpZiAoY291bnQpIHtcclxuICAgIHJldHVybiBmb3J3YXJkO1xyXG4gIH1cclxufVxyXG5mdW5jdGlvbiBpbmZlclRvKHByb3BzKSB7XHJcbiAgY29uc3QgdG8yID0gZ2V0Rm9yd2FyZFByb3BzKHByb3BzKTtcclxuICBpZiAodG8yKSB7XHJcbiAgICBjb25zdCBvdXQgPSB7IHRvOiB0bzIgfTtcclxuICAgIGVhY2hQcm9wKHByb3BzLCAodmFsLCBrZXkpID0+IGtleSBpbiB0bzIgfHwgKG91dFtrZXldID0gdmFsKSk7XHJcbiAgICByZXR1cm4gb3V0O1xyXG4gIH1cclxuICByZXR1cm4geyAuLi5wcm9wcyB9O1xyXG59XHJcbmZ1bmN0aW9uIGNvbXB1dGVHb2FsKHZhbHVlKSB7XHJcbiAgdmFsdWUgPSBnZXRGbHVpZFZhbHVlKHZhbHVlKTtcclxuICByZXR1cm4gaXMuYXJyKHZhbHVlKSA/IHZhbHVlLm1hcChjb21wdXRlR29hbCkgOiBpc0FuaW1hdGVkU3RyaW5nKHZhbHVlKSA/IEcuY3JlYXRlU3RyaW5nSW50ZXJwb2xhdG9yKHtcclxuICAgIHJhbmdlOiBbMCwgMV0sXHJcbiAgICBvdXRwdXQ6IFt2YWx1ZSwgdmFsdWVdXHJcbiAgfSkoMSkgOiB2YWx1ZTtcclxufVxyXG5mdW5jdGlvbiBoYXNQcm9wcyhwcm9wcykge1xyXG4gIGZvciAoY29uc3QgXyBpbiBwcm9wcylcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIHJldHVybiBmYWxzZTtcclxufVxyXG5mdW5jdGlvbiBpc0FzeW5jVG8odG8yKSB7XHJcbiAgcmV0dXJuIGlzLmZ1bih0bzIpIHx8IGlzLmFycih0bzIpICYmIGlzLm9iaih0bzJbMF0pO1xyXG59XHJcbmZ1bmN0aW9uIGRldGFjaFJlZnMoY3RybCwgcmVmKSB7XHJcbiAgY3RybC5yZWY/LmRlbGV0ZShjdHJsKTtcclxuICByZWY/LmRlbGV0ZShjdHJsKTtcclxufVxyXG5mdW5jdGlvbiByZXBsYWNlUmVmKGN0cmwsIHJlZikge1xyXG4gIGlmIChyZWYgJiYgY3RybC5yZWYgIT09IHJlZikge1xyXG4gICAgY3RybC5yZWY/LmRlbGV0ZShjdHJsKTtcclxuICAgIHJlZi5hZGQoY3RybCk7XHJcbiAgICBjdHJsLnJlZiA9IHJlZjtcclxuICB9XHJcbn1cclxuXHJcbi8vIHNyYy9ob29rcy91c2VDaGFpbi50c1xyXG5mdW5jdGlvbiB1c2VDaGFpbihyZWZzLCB0aW1lU3RlcHMsIHRpbWVGcmFtZSA9IDFlMykge1xyXG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKHRpbWVTdGVwcykge1xyXG4gICAgICBsZXQgcHJldkRlbGF5ID0gMDtcclxuICAgICAgZWFjaChyZWZzLCAocmVmLCBpKSA9PiB7XHJcbiAgICAgICAgY29uc3QgY29udHJvbGxlcnMgPSByZWYuY3VycmVudDtcclxuICAgICAgICBpZiAoY29udHJvbGxlcnMubGVuZ3RoKSB7XHJcbiAgICAgICAgICBsZXQgZGVsYXkgPSB0aW1lRnJhbWUgKiB0aW1lU3RlcHNbaV07XHJcbiAgICAgICAgICBpZiAoaXNOYU4oZGVsYXkpKVxyXG4gICAgICAgICAgICBkZWxheSA9IHByZXZEZWxheTtcclxuICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgcHJldkRlbGF5ID0gZGVsYXk7XHJcbiAgICAgICAgICBlYWNoKGNvbnRyb2xsZXJzLCAoY3RybCkgPT4ge1xyXG4gICAgICAgICAgICBlYWNoKGN0cmwucXVldWUsIChwcm9wcykgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnN0IG1lbW9pemVkRGVsYXlQcm9wID0gcHJvcHMuZGVsYXk7XHJcbiAgICAgICAgICAgICAgcHJvcHMuZGVsYXkgPSAoa2V5KSA9PiBkZWxheSArIGNhbGxQcm9wKG1lbW9pemVkRGVsYXlQcm9wIHx8IDAsIGtleSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICByZWYuc3RhcnQoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbGV0IHAgPSBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgICAgZWFjaChyZWZzLCAocmVmKSA9PiB7XHJcbiAgICAgICAgY29uc3QgY29udHJvbGxlcnMgPSByZWYuY3VycmVudDtcclxuICAgICAgICBpZiAoY29udHJvbGxlcnMubGVuZ3RoKSB7XHJcbiAgICAgICAgICBjb25zdCBxdWV1ZXMgPSBjb250cm9sbGVycy5tYXAoKGN0cmwpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcSA9IGN0cmwucXVldWU7XHJcbiAgICAgICAgICAgIGN0cmwucXVldWUgPSBbXTtcclxuICAgICAgICAgICAgcmV0dXJuIHE7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHAgPSBwLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICBlYWNoKFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXJzLFxyXG4gICAgICAgICAgICAgIChjdHJsLCBpKSA9PiBlYWNoKHF1ZXVlc1tpXSB8fCBbXSwgKHVwZGF0ZTIpID0+IGN0cmwucXVldWUucHVzaCh1cGRhdGUyKSlcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHJlZi5zdGFydCgpKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vIHNyYy9ob29rcy91c2VTcHJpbmcudHNcclxuaW1wb3J0IHsgaXMgYXMgaXM5IH0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcblxyXG4vLyBzcmMvaG9va3MvdXNlU3ByaW5ncy50c1xyXG5pbXBvcnQgeyB1c2VDb250ZXh0IGFzIHVzZUNvbnRleHQyLCB1c2VNZW1vLCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHtcclxuICBpcyBhcyBpczgsXHJcbiAgZWFjaCBhcyBlYWNoNSxcclxuICB1c2VQcmV2LFxyXG4gIHVzZU9uY2UsXHJcbiAgdXNlRm9yY2VVcGRhdGUsXHJcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCBhcyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0MlxyXG59IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG5cclxuLy8gc3JjL1NwcmluZ1ZhbHVlLnRzXHJcbmltcG9ydCB7XHJcbiAgaXMgYXMgaXM1LFxyXG4gIHJhZiBhcyByYWYzLFxyXG4gIGVhY2ggYXMgZWFjaDIsXHJcbiAgaXNFcXVhbCxcclxuICB0b0FycmF5IGFzIHRvQXJyYXkyLFxyXG4gIGVhY2hQcm9wIGFzIGVhY2hQcm9wMyxcclxuICBmcmFtZUxvb3AgYXMgZnJhbWVMb29wMixcclxuICBmbHVzaENhbGxzLFxyXG4gIGdldEZsdWlkVmFsdWUgYXMgZ2V0Rmx1aWRWYWx1ZTIsXHJcbiAgaXNBbmltYXRlZFN0cmluZyBhcyBpc0FuaW1hdGVkU3RyaW5nMixcclxuICBHbG9iYWxzIGFzIEc1LFxyXG4gIGNhbGxGbHVpZE9ic2VydmVycyBhcyBjYWxsRmx1aWRPYnNlcnZlcnMyLFxyXG4gIGhhc0ZsdWlkVmFsdWUsXHJcbiAgYWRkRmx1aWRPYnNlcnZlcixcclxuICByZW1vdmVGbHVpZE9ic2VydmVyLFxyXG4gIGdldEZsdWlkT2JzZXJ2ZXJzXHJcbn0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcbmltcG9ydCB7XHJcbiAgQW5pbWF0ZWRWYWx1ZSxcclxuICBBbmltYXRlZFN0cmluZyxcclxuICBnZXRQYXlsb2FkLFxyXG4gIGdldEFuaW1hdGVkIGFzIGdldEFuaW1hdGVkMixcclxuICBzZXRBbmltYXRlZCxcclxuICBnZXRBbmltYXRlZFR5cGVcclxufSBmcm9tIFwiQHJlYWN0LXNwcmluZy9hbmltYXRlZFwiO1xyXG5cclxuLy8gc3JjL0FuaW1hdGlvbkNvbmZpZy50c1xyXG5pbXBvcnQgeyBpcyBhcyBpczIsIGVhc2luZ3MgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuXHJcbi8vIHNyYy9jb25zdGFudHMudHNcclxudmFyIGNvbmZpZyA9IHtcclxuICBkZWZhdWx0OiB7IHRlbnNpb246IDE3MCwgZnJpY3Rpb246IDI2IH0sXHJcbiAgZ2VudGxlOiB7IHRlbnNpb246IDEyMCwgZnJpY3Rpb246IDE0IH0sXHJcbiAgd29iYmx5OiB7IHRlbnNpb246IDE4MCwgZnJpY3Rpb246IDEyIH0sXHJcbiAgc3RpZmY6IHsgdGVuc2lvbjogMjEwLCBmcmljdGlvbjogMjAgfSxcclxuICBzbG93OiB7IHRlbnNpb246IDI4MCwgZnJpY3Rpb246IDYwIH0sXHJcbiAgbW9sYXNzZXM6IHsgdGVuc2lvbjogMjgwLCBmcmljdGlvbjogMTIwIH1cclxufTtcclxuXHJcbi8vIHNyYy9BbmltYXRpb25Db25maWcudHNcclxudmFyIGRlZmF1bHRzID0ge1xyXG4gIC4uLmNvbmZpZy5kZWZhdWx0LFxyXG4gIG1hc3M6IDEsXHJcbiAgZGFtcGluZzogMSxcclxuICBlYXNpbmc6IGVhc2luZ3MubGluZWFyLFxyXG4gIGNsYW1wOiBmYWxzZVxyXG59O1xyXG52YXIgQW5pbWF0aW9uQ29uZmlnID0gY2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgaW5pdGlhbCB2ZWxvY2l0eSBvZiBvbmUgb3IgbW9yZSB2YWx1ZXMuXHJcbiAgICAgKlxyXG4gICAgICogQGRlZmF1bHQgMFxyXG4gICAgICovXHJcbiAgICB0aGlzLnZlbG9jaXR5ID0gMDtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgZGVmYXVsdHMpO1xyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMiwgbmV3Q29uZmlnLCBkZWZhdWx0Q29uZmlnKSB7XHJcbiAgaWYgKGRlZmF1bHRDb25maWcpIHtcclxuICAgIGRlZmF1bHRDb25maWcgPSB7IC4uLmRlZmF1bHRDb25maWcgfTtcclxuICAgIHNhbml0aXplQ29uZmlnKGRlZmF1bHRDb25maWcsIG5ld0NvbmZpZyk7XHJcbiAgICBuZXdDb25maWcgPSB7IC4uLmRlZmF1bHRDb25maWcsIC4uLm5ld0NvbmZpZyB9O1xyXG4gIH1cclxuICBzYW5pdGl6ZUNvbmZpZyhjb25maWcyLCBuZXdDb25maWcpO1xyXG4gIE9iamVjdC5hc3NpZ24oY29uZmlnMiwgbmV3Q29uZmlnKTtcclxuICBmb3IgKGNvbnN0IGtleSBpbiBkZWZhdWx0cykge1xyXG4gICAgaWYgKGNvbmZpZzJba2V5XSA9PSBudWxsKSB7XHJcbiAgICAgIGNvbmZpZzJba2V5XSA9IGRlZmF1bHRzW2tleV07XHJcbiAgICB9XHJcbiAgfVxyXG4gIGxldCB7IGZyZXF1ZW5jeSwgZGFtcGluZyB9ID0gY29uZmlnMjtcclxuICBjb25zdCB7IG1hc3MgfSA9IGNvbmZpZzI7XHJcbiAgaWYgKCFpczIudW5kKGZyZXF1ZW5jeSkpIHtcclxuICAgIGlmIChmcmVxdWVuY3kgPCAwLjAxKVxyXG4gICAgICBmcmVxdWVuY3kgPSAwLjAxO1xyXG4gICAgaWYgKGRhbXBpbmcgPCAwKVxyXG4gICAgICBkYW1waW5nID0gMDtcclxuICAgIGNvbmZpZzIudGVuc2lvbiA9IE1hdGgucG93KDIgKiBNYXRoLlBJIC8gZnJlcXVlbmN5LCAyKSAqIG1hc3M7XHJcbiAgICBjb25maWcyLmZyaWN0aW9uID0gNCAqIE1hdGguUEkgKiBkYW1waW5nICogbWFzcyAvIGZyZXF1ZW5jeTtcclxuICB9XHJcbiAgcmV0dXJuIGNvbmZpZzI7XHJcbn1cclxuZnVuY3Rpb24gc2FuaXRpemVDb25maWcoY29uZmlnMiwgcHJvcHMpIHtcclxuICBpZiAoIWlzMi51bmQocHJvcHMuZGVjYXkpKSB7XHJcbiAgICBjb25maWcyLmR1cmF0aW9uID0gdm9pZCAwO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjb25zdCBpc1RlbnNpb25Db25maWcgPSAhaXMyLnVuZChwcm9wcy50ZW5zaW9uKSB8fCAhaXMyLnVuZChwcm9wcy5mcmljdGlvbik7XHJcbiAgICBpZiAoaXNUZW5zaW9uQ29uZmlnIHx8ICFpczIudW5kKHByb3BzLmZyZXF1ZW5jeSkgfHwgIWlzMi51bmQocHJvcHMuZGFtcGluZykgfHwgIWlzMi51bmQocHJvcHMubWFzcykpIHtcclxuICAgICAgY29uZmlnMi5kdXJhdGlvbiA9IHZvaWQgMDtcclxuICAgICAgY29uZmlnMi5kZWNheSA9IHZvaWQgMDtcclxuICAgIH1cclxuICAgIGlmIChpc1RlbnNpb25Db25maWcpIHtcclxuICAgICAgY29uZmlnMi5mcmVxdWVuY3kgPSB2b2lkIDA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBzcmMvQW5pbWF0aW9uLnRzXHJcbnZhciBlbXB0eUFycmF5ID0gW107XHJcbnZhciBBbmltYXRpb24gPSBjbGFzcyB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmNoYW5nZWQgPSBmYWxzZTtcclxuICAgIHRoaXMudmFsdWVzID0gZW1wdHlBcnJheTtcclxuICAgIHRoaXMudG9WYWx1ZXMgPSBudWxsO1xyXG4gICAgdGhpcy5mcm9tVmFsdWVzID0gZW1wdHlBcnJheTtcclxuICAgIHRoaXMuY29uZmlnID0gbmV3IEFuaW1hdGlvbkNvbmZpZygpO1xyXG4gICAgdGhpcy5pbW1lZGlhdGUgPSBmYWxzZTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBzcmMvc2NoZWR1bGVQcm9wcy50c1xyXG5pbXBvcnQgeyBpcyBhcyBpczMsIHJhZiwgR2xvYmFscyBhcyBHMiB9IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG5mdW5jdGlvbiBzY2hlZHVsZVByb3BzKGNhbGxJZCwgeyBrZXksIHByb3BzLCBkZWZhdWx0UHJvcHMsIHN0YXRlLCBhY3Rpb25zIH0pIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgbGV0IGRlbGF5O1xyXG4gICAgbGV0IHRpbWVvdXQ7XHJcbiAgICBsZXQgY2FuY2VsID0gbWF0Y2hQcm9wKHByb3BzLmNhbmNlbCA/PyBkZWZhdWx0UHJvcHM/LmNhbmNlbCwga2V5KTtcclxuICAgIGlmIChjYW5jZWwpIHtcclxuICAgICAgb25TdGFydCgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKCFpczMudW5kKHByb3BzLnBhdXNlKSkge1xyXG4gICAgICAgIHN0YXRlLnBhdXNlZCA9IG1hdGNoUHJvcChwcm9wcy5wYXVzZSwga2V5KTtcclxuICAgICAgfVxyXG4gICAgICBsZXQgcGF1c2UgPSBkZWZhdWx0UHJvcHM/LnBhdXNlO1xyXG4gICAgICBpZiAocGF1c2UgIT09IHRydWUpIHtcclxuICAgICAgICBwYXVzZSA9IHN0YXRlLnBhdXNlZCB8fCBtYXRjaFByb3AocGF1c2UsIGtleSk7XHJcbiAgICAgIH1cclxuICAgICAgZGVsYXkgPSBjYWxsUHJvcChwcm9wcy5kZWxheSB8fCAwLCBrZXkpO1xyXG4gICAgICBpZiAocGF1c2UpIHtcclxuICAgICAgICBzdGF0ZS5yZXN1bWVRdWV1ZS5hZGQob25SZXN1bWUpO1xyXG4gICAgICAgIGFjdGlvbnMucGF1c2UoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhY3Rpb25zLnJlc3VtZSgpO1xyXG4gICAgICAgIG9uUmVzdW1lKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIG9uUGF1c2UoKSB7XHJcbiAgICAgIHN0YXRlLnJlc3VtZVF1ZXVlLmFkZChvblJlc3VtZSk7XHJcbiAgICAgIHN0YXRlLnRpbWVvdXRzLmRlbGV0ZSh0aW1lb3V0KTtcclxuICAgICAgdGltZW91dC5jYW5jZWwoKTtcclxuICAgICAgZGVsYXkgPSB0aW1lb3V0LnRpbWUgLSByYWYubm93KCk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBvblJlc3VtZSgpIHtcclxuICAgICAgaWYgKGRlbGF5ID4gMCAmJiAhRzIuc2tpcEFuaW1hdGlvbikge1xyXG4gICAgICAgIHN0YXRlLmRlbGF5ZWQgPSB0cnVlO1xyXG4gICAgICAgIHRpbWVvdXQgPSByYWYuc2V0VGltZW91dChvblN0YXJ0LCBkZWxheSk7XHJcbiAgICAgICAgc3RhdGUucGF1c2VRdWV1ZS5hZGQob25QYXVzZSk7XHJcbiAgICAgICAgc3RhdGUudGltZW91dHMuYWRkKHRpbWVvdXQpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG9uU3RhcnQoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gb25TdGFydCgpIHtcclxuICAgICAgaWYgKHN0YXRlLmRlbGF5ZWQpIHtcclxuICAgICAgICBzdGF0ZS5kZWxheWVkID0gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgICAgc3RhdGUucGF1c2VRdWV1ZS5kZWxldGUob25QYXVzZSk7XHJcbiAgICAgIHN0YXRlLnRpbWVvdXRzLmRlbGV0ZSh0aW1lb3V0KTtcclxuICAgICAgaWYgKGNhbGxJZCA8PSAoc3RhdGUuY2FuY2VsSWQgfHwgMCkpIHtcclxuICAgICAgICBjYW5jZWwgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYWN0aW9ucy5zdGFydCh7IC4uLnByb3BzLCBjYWxsSWQsIGNhbmNlbCB9LCByZXNvbHZlKTtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgcmVqZWN0KGVycik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuLy8gc3JjL3J1bkFzeW5jLnRzXHJcbmltcG9ydCB7XHJcbiAgaXMgYXMgaXM0LFxyXG4gIHJhZiBhcyByYWYyLFxyXG4gIGZsdXNoLFxyXG4gIGVhY2hQcm9wIGFzIGVhY2hQcm9wMixcclxuICBHbG9iYWxzIGFzIEczXHJcbn0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcblxyXG4vLyBzcmMvQW5pbWF0aW9uUmVzdWx0LnRzXHJcbnZhciBnZXRDb21iaW5lZFJlc3VsdCA9ICh0YXJnZXQsIHJlc3VsdHMpID0+IHJlc3VsdHMubGVuZ3RoID09IDEgPyByZXN1bHRzWzBdIDogcmVzdWx0cy5zb21lKChyZXN1bHQpID0+IHJlc3VsdC5jYW5jZWxsZWQpID8gZ2V0Q2FuY2VsbGVkUmVzdWx0KHRhcmdldC5nZXQoKSkgOiByZXN1bHRzLmV2ZXJ5KChyZXN1bHQpID0+IHJlc3VsdC5ub29wKSA/IGdldE5vb3BSZXN1bHQodGFyZ2V0LmdldCgpKSA6IGdldEZpbmlzaGVkUmVzdWx0KFxyXG4gIHRhcmdldC5nZXQoKSxcclxuICByZXN1bHRzLmV2ZXJ5KChyZXN1bHQpID0+IHJlc3VsdC5maW5pc2hlZClcclxuKTtcclxudmFyIGdldE5vb3BSZXN1bHQgPSAodmFsdWUpID0+ICh7XHJcbiAgdmFsdWUsXHJcbiAgbm9vcDogdHJ1ZSxcclxuICBmaW5pc2hlZDogdHJ1ZSxcclxuICBjYW5jZWxsZWQ6IGZhbHNlXHJcbn0pO1xyXG52YXIgZ2V0RmluaXNoZWRSZXN1bHQgPSAodmFsdWUsIGZpbmlzaGVkLCBjYW5jZWxsZWQgPSBmYWxzZSkgPT4gKHtcclxuICB2YWx1ZSxcclxuICBmaW5pc2hlZCxcclxuICBjYW5jZWxsZWRcclxufSk7XHJcbnZhciBnZXRDYW5jZWxsZWRSZXN1bHQgPSAodmFsdWUpID0+ICh7XHJcbiAgdmFsdWUsXHJcbiAgY2FuY2VsbGVkOiB0cnVlLFxyXG4gIGZpbmlzaGVkOiBmYWxzZVxyXG59KTtcclxuXHJcbi8vIHNyYy9ydW5Bc3luYy50c1xyXG5mdW5jdGlvbiBydW5Bc3luYyh0bzIsIHByb3BzLCBzdGF0ZSwgdGFyZ2V0KSB7XHJcbiAgY29uc3QgeyBjYWxsSWQsIHBhcmVudElkLCBvblJlc3QgfSA9IHByb3BzO1xyXG4gIGNvbnN0IHsgYXN5bmNUbzogcHJldlRvLCBwcm9taXNlOiBwcmV2UHJvbWlzZSB9ID0gc3RhdGU7XHJcbiAgaWYgKCFwYXJlbnRJZCAmJiB0bzIgPT09IHByZXZUbyAmJiAhcHJvcHMucmVzZXQpIHtcclxuICAgIHJldHVybiBwcmV2UHJvbWlzZTtcclxuICB9XHJcbiAgcmV0dXJuIHN0YXRlLnByb21pc2UgPSAoYXN5bmMgKCkgPT4ge1xyXG4gICAgc3RhdGUuYXN5bmNJZCA9IGNhbGxJZDtcclxuICAgIHN0YXRlLmFzeW5jVG8gPSB0bzI7XHJcbiAgICBjb25zdCBkZWZhdWx0UHJvcHMgPSBnZXREZWZhdWx0UHJvcHMoXHJcbiAgICAgIHByb3BzLFxyXG4gICAgICAodmFsdWUsIGtleSkgPT4gKFxyXG4gICAgICAgIC8vIFRoZSBgb25SZXN0YCBwcm9wIGlzIG9ubHkgY2FsbGVkIHdoZW4gdGhlIGBydW5Bc3luY2AgcHJvbWlzZSBpcyByZXNvbHZlZC5cclxuICAgICAgICBrZXkgPT09IFwib25SZXN0XCIgPyB2b2lkIDAgOiB2YWx1ZVxyXG4gICAgICApXHJcbiAgICApO1xyXG4gICAgbGV0IHByZXZlbnRCYWlsO1xyXG4gICAgbGV0IGJhaWw7XHJcbiAgICBjb25zdCBiYWlsUHJvbWlzZSA9IG5ldyBQcm9taXNlKFxyXG4gICAgICAocmVzb2x2ZSwgcmVqZWN0KSA9PiAocHJldmVudEJhaWwgPSByZXNvbHZlLCBiYWlsID0gcmVqZWN0KVxyXG4gICAgKTtcclxuICAgIGNvbnN0IGJhaWxJZkVuZGVkID0gKGJhaWxTaWduYWwpID0+IHtcclxuICAgICAgY29uc3QgYmFpbFJlc3VsdCA9IChcclxuICAgICAgICAvLyBUaGUgYGNhbmNlbGAgcHJvcCBvciBgc3RvcGAgbWV0aG9kIHdhcyB1c2VkLlxyXG4gICAgICAgIGNhbGxJZCA8PSAoc3RhdGUuY2FuY2VsSWQgfHwgMCkgJiYgZ2V0Q2FuY2VsbGVkUmVzdWx0KHRhcmdldCkgfHwgLy8gVGhlIGFzeW5jIGB0b2AgcHJvcCB3YXMgcmVwbGFjZWQuXHJcbiAgICAgICAgY2FsbElkICE9PSBzdGF0ZS5hc3luY0lkICYmIGdldEZpbmlzaGVkUmVzdWx0KHRhcmdldCwgZmFsc2UpXHJcbiAgICAgICk7XHJcbiAgICAgIGlmIChiYWlsUmVzdWx0KSB7XHJcbiAgICAgICAgYmFpbFNpZ25hbC5yZXN1bHQgPSBiYWlsUmVzdWx0O1xyXG4gICAgICAgIGJhaWwoYmFpbFNpZ25hbCk7XHJcbiAgICAgICAgdGhyb3cgYmFpbFNpZ25hbDtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIGNvbnN0IGFuaW1hdGUgPSAoYXJnMSwgYXJnMikgPT4ge1xyXG4gICAgICBjb25zdCBiYWlsU2lnbmFsID0gbmV3IEJhaWxTaWduYWwoKTtcclxuICAgICAgY29uc3Qgc2tpcEFuaW1hdGlvblNpZ25hbCA9IG5ldyBTa2lwQW5pbWF0aW9uU2lnbmFsKCk7XHJcbiAgICAgIHJldHVybiAoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGlmIChHMy5za2lwQW5pbWF0aW9uKSB7XHJcbiAgICAgICAgICBzdG9wQXN5bmMoc3RhdGUpO1xyXG4gICAgICAgICAgc2tpcEFuaW1hdGlvblNpZ25hbC5yZXN1bHQgPSBnZXRGaW5pc2hlZFJlc3VsdCh0YXJnZXQsIGZhbHNlKTtcclxuICAgICAgICAgIGJhaWwoc2tpcEFuaW1hdGlvblNpZ25hbCk7XHJcbiAgICAgICAgICB0aHJvdyBza2lwQW5pbWF0aW9uU2lnbmFsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBiYWlsSWZFbmRlZChiYWlsU2lnbmFsKTtcclxuICAgICAgICBjb25zdCBwcm9wczIgPSBpczQub2JqKGFyZzEpID8geyAuLi5hcmcxIH0gOiB7IC4uLmFyZzIsIHRvOiBhcmcxIH07XHJcbiAgICAgICAgcHJvcHMyLnBhcmVudElkID0gY2FsbElkO1xyXG4gICAgICAgIGVhY2hQcm9wMihkZWZhdWx0UHJvcHMsICh2YWx1ZSwga2V5KSA9PiB7XHJcbiAgICAgICAgICBpZiAoaXM0LnVuZChwcm9wczJba2V5XSkpIHtcclxuICAgICAgICAgICAgcHJvcHMyW2tleV0gPSB2YWx1ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCByZXN1bHQyID0gYXdhaXQgdGFyZ2V0LnN0YXJ0KHByb3BzMik7XHJcbiAgICAgICAgYmFpbElmRW5kZWQoYmFpbFNpZ25hbCk7XHJcbiAgICAgICAgaWYgKHN0YXRlLnBhdXNlZCkge1xyXG4gICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc3VtZSkgPT4ge1xyXG4gICAgICAgICAgICBzdGF0ZS5yZXN1bWVRdWV1ZS5hZGQocmVzdW1lKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0MjtcclxuICAgICAgfSkoKTtcclxuICAgIH07XHJcbiAgICBsZXQgcmVzdWx0O1xyXG4gICAgaWYgKEczLnNraXBBbmltYXRpb24pIHtcclxuICAgICAgc3RvcEFzeW5jKHN0YXRlKTtcclxuICAgICAgcmV0dXJuIGdldEZpbmlzaGVkUmVzdWx0KHRhcmdldCwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IGFuaW1hdGluZztcclxuICAgICAgaWYgKGlzNC5hcnIodG8yKSkge1xyXG4gICAgICAgIGFuaW1hdGluZyA9IChhc3luYyAocXVldWUpID0+IHtcclxuICAgICAgICAgIGZvciAoY29uc3QgcHJvcHMyIG9mIHF1ZXVlKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IGFuaW1hdGUocHJvcHMyKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KSh0bzIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFuaW1hdGluZyA9IFByb21pc2UucmVzb2x2ZSh0bzIoYW5pbWF0ZSwgdGFyZ2V0LnN0b3AuYmluZCh0YXJnZXQpKSk7XHJcbiAgICAgIH1cclxuICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoW2FuaW1hdGluZy50aGVuKHByZXZlbnRCYWlsKSwgYmFpbFByb21pc2VdKTtcclxuICAgICAgcmVzdWx0ID0gZ2V0RmluaXNoZWRSZXN1bHQodGFyZ2V0LmdldCgpLCB0cnVlLCBmYWxzZSk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEJhaWxTaWduYWwpIHtcclxuICAgICAgICByZXN1bHQgPSBlcnIucmVzdWx0O1xyXG4gICAgICB9IGVsc2UgaWYgKGVyciBpbnN0YW5jZW9mIFNraXBBbmltYXRpb25TaWduYWwpIHtcclxuICAgICAgICByZXN1bHQgPSBlcnIucmVzdWx0O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRocm93IGVycjtcclxuICAgICAgfVxyXG4gICAgfSBmaW5hbGx5IHtcclxuICAgICAgaWYgKGNhbGxJZCA9PSBzdGF0ZS5hc3luY0lkKSB7XHJcbiAgICAgICAgc3RhdGUuYXN5bmNJZCA9IHBhcmVudElkO1xyXG4gICAgICAgIHN0YXRlLmFzeW5jVG8gPSBwYXJlbnRJZCA/IHByZXZUbyA6IHZvaWQgMDtcclxuICAgICAgICBzdGF0ZS5wcm9taXNlID0gcGFyZW50SWQgPyBwcmV2UHJvbWlzZSA6IHZvaWQgMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKGlzNC5mdW4ob25SZXN0KSkge1xyXG4gICAgICByYWYyLmJhdGNoZWRVcGRhdGVzKCgpID0+IHtcclxuICAgICAgICBvblJlc3QocmVzdWx0LCB0YXJnZXQsIHRhcmdldC5pdGVtKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH0pKCk7XHJcbn1cclxuZnVuY3Rpb24gc3RvcEFzeW5jKHN0YXRlLCBjYW5jZWxJZCkge1xyXG4gIGZsdXNoKHN0YXRlLnRpbWVvdXRzLCAodCkgPT4gdC5jYW5jZWwoKSk7XHJcbiAgc3RhdGUucGF1c2VRdWV1ZS5jbGVhcigpO1xyXG4gIHN0YXRlLnJlc3VtZVF1ZXVlLmNsZWFyKCk7XHJcbiAgc3RhdGUuYXN5bmNJZCA9IHN0YXRlLmFzeW5jVG8gPSBzdGF0ZS5wcm9taXNlID0gdm9pZCAwO1xyXG4gIGlmIChjYW5jZWxJZClcclxuICAgIHN0YXRlLmNhbmNlbElkID0gY2FuY2VsSWQ7XHJcbn1cclxudmFyIEJhaWxTaWduYWwgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKFxyXG4gICAgICBcIkFuIGFzeW5jIGFuaW1hdGlvbiBoYXMgYmVlbiBpbnRlcnJ1cHRlZC4gWW91IHNlZSB0aGlzIGVycm9yIGJlY2F1c2UgeW91IGZvcmdvdCB0byB1c2UgYGF3YWl0YCBvciBgLmNhdGNoKC4uLilgIG9uIGl0cyByZXR1cm5lZCBwcm9taXNlLlwiXHJcbiAgICApO1xyXG4gIH1cclxufTtcclxudmFyIFNraXBBbmltYXRpb25TaWduYWwgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKFwiU2tpcEFuaW1hdGlvblNpZ25hbFwiKTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBzcmMvRnJhbWVWYWx1ZS50c1xyXG5pbXBvcnQge1xyXG4gIGRlcHJlY2F0ZUludGVycG9sYXRlLFxyXG4gIGZyYW1lTG9vcCxcclxuICBGbHVpZFZhbHVlIGFzIEZsdWlkVmFsdWUyLFxyXG4gIEdsb2JhbHMgYXMgRzQsXHJcbiAgY2FsbEZsdWlkT2JzZXJ2ZXJzXHJcbn0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcbmltcG9ydCB7IGdldEFuaW1hdGVkIH0gZnJvbSBcIkByZWFjdC1zcHJpbmcvYW5pbWF0ZWRcIjtcclxudmFyIGlzRnJhbWVWYWx1ZSA9ICh2YWx1ZSkgPT4gdmFsdWUgaW5zdGFuY2VvZiBGcmFtZVZhbHVlO1xyXG52YXIgbmV4dElkID0gMTtcclxudmFyIEZyYW1lVmFsdWUgPSBjbGFzcyBleHRlbmRzIEZsdWlkVmFsdWUyIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICB0aGlzLmlkID0gbmV4dElkKys7XHJcbiAgICB0aGlzLl9wcmlvcml0eSA9IDA7XHJcbiAgfVxyXG4gIGdldCBwcmlvcml0eSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9wcmlvcml0eTtcclxuICB9XHJcbiAgc2V0IHByaW9yaXR5KHByaW9yaXR5KSB7XHJcbiAgICBpZiAodGhpcy5fcHJpb3JpdHkgIT0gcHJpb3JpdHkpIHtcclxuICAgICAgdGhpcy5fcHJpb3JpdHkgPSBwcmlvcml0eTtcclxuICAgICAgdGhpcy5fb25Qcmlvcml0eUNoYW5nZShwcmlvcml0eSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKiBHZXQgdGhlIGN1cnJlbnQgdmFsdWUgKi9cclxuICBnZXQoKSB7XHJcbiAgICBjb25zdCBub2RlID0gZ2V0QW5pbWF0ZWQodGhpcyk7XHJcbiAgICByZXR1cm4gbm9kZSAmJiBub2RlLmdldFZhbHVlKCk7XHJcbiAgfVxyXG4gIC8qKiBDcmVhdGUgYSBzcHJpbmcgdGhhdCBtYXBzIG91ciB2YWx1ZSB0byBhbm90aGVyIHZhbHVlICovXHJcbiAgdG8oLi4uYXJncykge1xyXG4gICAgcmV0dXJuIEc0LnRvKHRoaXMsIGFyZ3MpO1xyXG4gIH1cclxuICAvKiogQGRlcHJlY2F0ZWQgVXNlIHRoZSBgdG9gIG1ldGhvZCBpbnN0ZWFkLiAqL1xyXG4gIGludGVycG9sYXRlKC4uLmFyZ3MpIHtcclxuICAgIGRlcHJlY2F0ZUludGVycG9sYXRlKCk7XHJcbiAgICByZXR1cm4gRzQudG8odGhpcywgYXJncyk7XHJcbiAgfVxyXG4gIHRvSlNPTigpIHtcclxuICAgIHJldHVybiB0aGlzLmdldCgpO1xyXG4gIH1cclxuICBvYnNlcnZlckFkZGVkKGNvdW50KSB7XHJcbiAgICBpZiAoY291bnQgPT0gMSlcclxuICAgICAgdGhpcy5fYXR0YWNoKCk7XHJcbiAgfVxyXG4gIG9ic2VydmVyUmVtb3ZlZChjb3VudCkge1xyXG4gICAgaWYgKGNvdW50ID09IDApXHJcbiAgICAgIHRoaXMuX2RldGFjaCgpO1xyXG4gIH1cclxuICAvKiogQ2FsbGVkIHdoZW4gdGhlIGZpcnN0IGNoaWxkIGlzIGFkZGVkLiAqL1xyXG4gIF9hdHRhY2goKSB7XHJcbiAgfVxyXG4gIC8qKiBDYWxsZWQgd2hlbiB0aGUgbGFzdCBjaGlsZCBpcyByZW1vdmVkLiAqL1xyXG4gIF9kZXRhY2goKSB7XHJcbiAgfVxyXG4gIC8qKiBUZWxsIG91ciBjaGlsZHJlbiBhYm91dCBvdXIgbmV3IHZhbHVlICovXHJcbiAgX29uQ2hhbmdlKHZhbHVlLCBpZGxlID0gZmFsc2UpIHtcclxuICAgIGNhbGxGbHVpZE9ic2VydmVycyh0aGlzLCB7XHJcbiAgICAgIHR5cGU6IFwiY2hhbmdlXCIsXHJcbiAgICAgIHBhcmVudDogdGhpcyxcclxuICAgICAgdmFsdWUsXHJcbiAgICAgIGlkbGVcclxuICAgIH0pO1xyXG4gIH1cclxuICAvKiogVGVsbCBvdXIgY2hpbGRyZW4gYWJvdXQgb3VyIG5ldyBwcmlvcml0eSAqL1xyXG4gIF9vblByaW9yaXR5Q2hhbmdlKHByaW9yaXR5KSB7XHJcbiAgICBpZiAoIXRoaXMuaWRsZSkge1xyXG4gICAgICBmcmFtZUxvb3Auc29ydCh0aGlzKTtcclxuICAgIH1cclxuICAgIGNhbGxGbHVpZE9ic2VydmVycyh0aGlzLCB7XHJcbiAgICAgIHR5cGU6IFwicHJpb3JpdHlcIixcclxuICAgICAgcGFyZW50OiB0aGlzLFxyXG4gICAgICBwcmlvcml0eVxyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gc3JjL1NwcmluZ1BoYXNlLnRzXHJcbnZhciAkUCA9IFN5bWJvbC5mb3IoXCJTcHJpbmdQaGFzZVwiKTtcclxudmFyIEhBU19BTklNQVRFRCA9IDE7XHJcbnZhciBJU19BTklNQVRJTkcgPSAyO1xyXG52YXIgSVNfUEFVU0VEID0gNDtcclxudmFyIGhhc0FuaW1hdGVkID0gKHRhcmdldCkgPT4gKHRhcmdldFskUF0gJiBIQVNfQU5JTUFURUQpID4gMDtcclxudmFyIGlzQW5pbWF0aW5nID0gKHRhcmdldCkgPT4gKHRhcmdldFskUF0gJiBJU19BTklNQVRJTkcpID4gMDtcclxudmFyIGlzUGF1c2VkID0gKHRhcmdldCkgPT4gKHRhcmdldFskUF0gJiBJU19QQVVTRUQpID4gMDtcclxudmFyIHNldEFjdGl2ZUJpdCA9ICh0YXJnZXQsIGFjdGl2ZSkgPT4gYWN0aXZlID8gdGFyZ2V0WyRQXSB8PSBJU19BTklNQVRJTkcgfCBIQVNfQU5JTUFURUQgOiB0YXJnZXRbJFBdICY9IH5JU19BTklNQVRJTkc7XHJcbnZhciBzZXRQYXVzZWRCaXQgPSAodGFyZ2V0LCBwYXVzZWQpID0+IHBhdXNlZCA/IHRhcmdldFskUF0gfD0gSVNfUEFVU0VEIDogdGFyZ2V0WyRQXSAmPSB+SVNfUEFVU0VEO1xyXG5cclxuLy8gc3JjL1NwcmluZ1ZhbHVlLnRzXHJcbnZhciBTcHJpbmdWYWx1ZSA9IGNsYXNzIGV4dGVuZHMgRnJhbWVWYWx1ZSB7XHJcbiAgY29uc3RydWN0b3IoYXJnMSwgYXJnMikge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIC8qKiBUaGUgYW5pbWF0aW9uIHN0YXRlICovXHJcbiAgICB0aGlzLmFuaW1hdGlvbiA9IG5ldyBBbmltYXRpb24oKTtcclxuICAgIC8qKiBTb21lIHByb3BzIGhhdmUgY3VzdG9taXphYmxlIGRlZmF1bHQgdmFsdWVzICovXHJcbiAgICB0aGlzLmRlZmF1bHRQcm9wcyA9IHt9O1xyXG4gICAgLyoqIFRoZSBzdGF0ZSBmb3IgYHJ1bkFzeW5jYCBjYWxscyAqL1xyXG4gICAgdGhpcy5fc3RhdGUgPSB7XHJcbiAgICAgIHBhdXNlZDogZmFsc2UsXHJcbiAgICAgIGRlbGF5ZWQ6IGZhbHNlLFxyXG4gICAgICBwYXVzZVF1ZXVlOiAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpLFxyXG4gICAgICByZXN1bWVRdWV1ZTogLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSxcclxuICAgICAgdGltZW91dHM6IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KClcclxuICAgIH07XHJcbiAgICAvKiogVGhlIHByb21pc2UgcmVzb2x2ZXJzIG9mIHBlbmRpbmcgYHN0YXJ0YCBjYWxscyAqL1xyXG4gICAgdGhpcy5fcGVuZGluZ0NhbGxzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcclxuICAgIC8qKiBUaGUgY291bnRlciBmb3IgdHJhY2tpbmcgYHNjaGVkdWxlUHJvcHNgIGNhbGxzICovXHJcbiAgICB0aGlzLl9sYXN0Q2FsbElkID0gMDtcclxuICAgIC8qKiBUaGUgbGFzdCBgc2NoZWR1bGVQcm9wc2AgY2FsbCB0aGF0IGNoYW5nZWQgdGhlIGB0b2AgcHJvcCAqL1xyXG4gICAgdGhpcy5fbGFzdFRvSWQgPSAwO1xyXG4gICAgdGhpcy5fbWVtb2l6ZWREdXJhdGlvbiA9IDA7XHJcbiAgICBpZiAoIWlzNS51bmQoYXJnMSkgfHwgIWlzNS51bmQoYXJnMikpIHtcclxuICAgICAgY29uc3QgcHJvcHMgPSBpczUub2JqKGFyZzEpID8geyAuLi5hcmcxIH0gOiB7IC4uLmFyZzIsIGZyb206IGFyZzEgfTtcclxuICAgICAgaWYgKGlzNS51bmQocHJvcHMuZGVmYXVsdCkpIHtcclxuICAgICAgICBwcm9wcy5kZWZhdWx0ID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLnN0YXJ0KHByb3BzKTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqIEVxdWFscyB0cnVlIHdoZW4gbm90IGFkdmFuY2luZyBvbiBlYWNoIGZyYW1lLiAqL1xyXG4gIGdldCBpZGxlKCkge1xyXG4gICAgcmV0dXJuICEoaXNBbmltYXRpbmcodGhpcykgfHwgdGhpcy5fc3RhdGUuYXN5bmNUbykgfHwgaXNQYXVzZWQodGhpcyk7XHJcbiAgfVxyXG4gIGdldCBnb2FsKCkge1xyXG4gICAgcmV0dXJuIGdldEZsdWlkVmFsdWUyKHRoaXMuYW5pbWF0aW9uLnRvKTtcclxuICB9XHJcbiAgZ2V0IHZlbG9jaXR5KCkge1xyXG4gICAgY29uc3Qgbm9kZSA9IGdldEFuaW1hdGVkMih0aGlzKTtcclxuICAgIHJldHVybiBub2RlIGluc3RhbmNlb2YgQW5pbWF0ZWRWYWx1ZSA/IG5vZGUubGFzdFZlbG9jaXR5IHx8IDAgOiBub2RlLmdldFBheWxvYWQoKS5tYXAoKG5vZGUyKSA9PiBub2RlMi5sYXN0VmVsb2NpdHkgfHwgMCk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIFdoZW4gdHJ1ZSwgdGhpcyB2YWx1ZSBoYXMgYmVlbiBhbmltYXRlZCBhdCBsZWFzdCBvbmNlLlxyXG4gICAqL1xyXG4gIGdldCBoYXNBbmltYXRlZCgpIHtcclxuICAgIHJldHVybiBoYXNBbmltYXRlZCh0aGlzKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogV2hlbiB0cnVlLCB0aGlzIHZhbHVlIGhhcyBhbiB1bmZpbmlzaGVkIGFuaW1hdGlvbixcclxuICAgKiB3aGljaCBpcyBlaXRoZXIgYWN0aXZlIG9yIHBhdXNlZC5cclxuICAgKi9cclxuICBnZXQgaXNBbmltYXRpbmcoKSB7XHJcbiAgICByZXR1cm4gaXNBbmltYXRpbmcodGhpcyk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIFdoZW4gdHJ1ZSwgYWxsIGN1cnJlbnQgYW5kIGZ1dHVyZSBhbmltYXRpb25zIGFyZSBwYXVzZWQuXHJcbiAgICovXHJcbiAgZ2V0IGlzUGF1c2VkKCkge1xyXG4gICAgcmV0dXJuIGlzUGF1c2VkKHRoaXMpO1xyXG4gIH1cclxuICAvKipcclxuICAgKlxyXG4gICAqXHJcbiAgICovXHJcbiAgZ2V0IGlzRGVsYXllZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9zdGF0ZS5kZWxheWVkO1xyXG4gIH1cclxuICAvKiogQWR2YW5jZSB0aGUgY3VycmVudCBhbmltYXRpb24gYnkgYSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzICovXHJcbiAgYWR2YW5jZShkdCkge1xyXG4gICAgbGV0IGlkbGUgPSB0cnVlO1xyXG4gICAgbGV0IGNoYW5nZWQgPSBmYWxzZTtcclxuICAgIGNvbnN0IGFuaW0gPSB0aGlzLmFuaW1hdGlvbjtcclxuICAgIGxldCB7IHRvVmFsdWVzIH0gPSBhbmltO1xyXG4gICAgY29uc3QgeyBjb25maWc6IGNvbmZpZzIgfSA9IGFuaW07XHJcbiAgICBjb25zdCBwYXlsb2FkID0gZ2V0UGF5bG9hZChhbmltLnRvKTtcclxuICAgIGlmICghcGF5bG9hZCAmJiBoYXNGbHVpZFZhbHVlKGFuaW0udG8pKSB7XHJcbiAgICAgIHRvVmFsdWVzID0gdG9BcnJheTIoZ2V0Rmx1aWRWYWx1ZTIoYW5pbS50bykpO1xyXG4gICAgfVxyXG4gICAgYW5pbS52YWx1ZXMuZm9yRWFjaCgobm9kZTIsIGkpID0+IHtcclxuICAgICAgaWYgKG5vZGUyLmRvbmUpXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICBjb25zdCB0bzIgPSAoXHJcbiAgICAgICAgLy8gQW5pbWF0ZWQgc3RyaW5ncyBhbHdheXMgZ28gZnJvbSAwIHRvIDEuXHJcbiAgICAgICAgbm9kZTIuY29uc3RydWN0b3IgPT0gQW5pbWF0ZWRTdHJpbmcgPyAxIDogcGF5bG9hZCA/IHBheWxvYWRbaV0ubGFzdFBvc2l0aW9uIDogdG9WYWx1ZXNbaV1cclxuICAgICAgKTtcclxuICAgICAgbGV0IGZpbmlzaGVkID0gYW5pbS5pbW1lZGlhdGU7XHJcbiAgICAgIGxldCBwb3NpdGlvbiA9IHRvMjtcclxuICAgICAgaWYgKCFmaW5pc2hlZCkge1xyXG4gICAgICAgIHBvc2l0aW9uID0gbm9kZTIubGFzdFBvc2l0aW9uO1xyXG4gICAgICAgIGlmIChjb25maWcyLnRlbnNpb24gPD0gMCkge1xyXG4gICAgICAgICAgbm9kZTIuZG9uZSA9IHRydWU7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBlbGFwc2VkID0gbm9kZTIuZWxhcHNlZFRpbWUgKz0gZHQ7XHJcbiAgICAgICAgY29uc3QgZnJvbSA9IGFuaW0uZnJvbVZhbHVlc1tpXTtcclxuICAgICAgICBjb25zdCB2MCA9IG5vZGUyLnYwICE9IG51bGwgPyBub2RlMi52MCA6IG5vZGUyLnYwID0gaXM1LmFycihjb25maWcyLnZlbG9jaXR5KSA/IGNvbmZpZzIudmVsb2NpdHlbaV0gOiBjb25maWcyLnZlbG9jaXR5O1xyXG4gICAgICAgIGxldCB2ZWxvY2l0eTtcclxuICAgICAgICBjb25zdCBwcmVjaXNpb24gPSBjb25maWcyLnByZWNpc2lvbiB8fCAoZnJvbSA9PSB0bzIgPyA1ZS0zIDogTWF0aC5taW4oMSwgTWF0aC5hYnModG8yIC0gZnJvbSkgKiAxZS0zKSk7XHJcbiAgICAgICAgaWYgKCFpczUudW5kKGNvbmZpZzIuZHVyYXRpb24pKSB7XHJcbiAgICAgICAgICBsZXQgcCA9IDE7XHJcbiAgICAgICAgICBpZiAoY29uZmlnMi5kdXJhdGlvbiA+IDApIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX21lbW9pemVkRHVyYXRpb24gIT09IGNvbmZpZzIuZHVyYXRpb24pIHtcclxuICAgICAgICAgICAgICB0aGlzLl9tZW1vaXplZER1cmF0aW9uID0gY29uZmlnMi5kdXJhdGlvbjtcclxuICAgICAgICAgICAgICBpZiAobm9kZTIuZHVyYXRpb25Qcm9ncmVzcyA+IDApIHtcclxuICAgICAgICAgICAgICAgIG5vZGUyLmVsYXBzZWRUaW1lID0gY29uZmlnMi5kdXJhdGlvbiAqIG5vZGUyLmR1cmF0aW9uUHJvZ3Jlc3M7XHJcbiAgICAgICAgICAgICAgICBlbGFwc2VkID0gbm9kZTIuZWxhcHNlZFRpbWUgKz0gZHQ7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHAgPSAoY29uZmlnMi5wcm9ncmVzcyB8fCAwKSArIGVsYXBzZWQgLyB0aGlzLl9tZW1vaXplZER1cmF0aW9uO1xyXG4gICAgICAgICAgICBwID0gcCA+IDEgPyAxIDogcCA8IDAgPyAwIDogcDtcclxuICAgICAgICAgICAgbm9kZTIuZHVyYXRpb25Qcm9ncmVzcyA9IHA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBwb3NpdGlvbiA9IGZyb20gKyBjb25maWcyLmVhc2luZyhwKSAqICh0bzIgLSBmcm9tKTtcclxuICAgICAgICAgIHZlbG9jaXR5ID0gKHBvc2l0aW9uIC0gbm9kZTIubGFzdFBvc2l0aW9uKSAvIGR0O1xyXG4gICAgICAgICAgZmluaXNoZWQgPSBwID09IDE7XHJcbiAgICAgICAgfSBlbHNlIGlmIChjb25maWcyLmRlY2F5KSB7XHJcbiAgICAgICAgICBjb25zdCBkZWNheSA9IGNvbmZpZzIuZGVjYXkgPT09IHRydWUgPyAwLjk5OCA6IGNvbmZpZzIuZGVjYXk7XHJcbiAgICAgICAgICBjb25zdCBlID0gTWF0aC5leHAoLSgxIC0gZGVjYXkpICogZWxhcHNlZCk7XHJcbiAgICAgICAgICBwb3NpdGlvbiA9IGZyb20gKyB2MCAvICgxIC0gZGVjYXkpICogKDEgLSBlKTtcclxuICAgICAgICAgIGZpbmlzaGVkID0gTWF0aC5hYnMobm9kZTIubGFzdFBvc2l0aW9uIC0gcG9zaXRpb24pIDw9IHByZWNpc2lvbjtcclxuICAgICAgICAgIHZlbG9jaXR5ID0gdjAgKiBlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2ZWxvY2l0eSA9IG5vZGUyLmxhc3RWZWxvY2l0eSA9PSBudWxsID8gdjAgOiBub2RlMi5sYXN0VmVsb2NpdHk7XHJcbiAgICAgICAgICBjb25zdCByZXN0VmVsb2NpdHkgPSBjb25maWcyLnJlc3RWZWxvY2l0eSB8fCBwcmVjaXNpb24gLyAxMDtcclxuICAgICAgICAgIGNvbnN0IGJvdW5jZUZhY3RvciA9IGNvbmZpZzIuY2xhbXAgPyAwIDogY29uZmlnMi5ib3VuY2U7XHJcbiAgICAgICAgICBjb25zdCBjYW5Cb3VuY2UgPSAhaXM1LnVuZChib3VuY2VGYWN0b3IpO1xyXG4gICAgICAgICAgY29uc3QgaXNHcm93aW5nID0gZnJvbSA9PSB0bzIgPyBub2RlMi52MCA+IDAgOiBmcm9tIDwgdG8yO1xyXG4gICAgICAgICAgbGV0IGlzTW92aW5nO1xyXG4gICAgICAgICAgbGV0IGlzQm91bmNpbmcgPSBmYWxzZTtcclxuICAgICAgICAgIGNvbnN0IHN0ZXAgPSAxO1xyXG4gICAgICAgICAgY29uc3QgbnVtU3RlcHMgPSBNYXRoLmNlaWwoZHQgLyBzdGVwKTtcclxuICAgICAgICAgIGZvciAobGV0IG4gPSAwOyBuIDwgbnVtU3RlcHM7ICsrbikge1xyXG4gICAgICAgICAgICBpc01vdmluZyA9IE1hdGguYWJzKHZlbG9jaXR5KSA+IHJlc3RWZWxvY2l0eTtcclxuICAgICAgICAgICAgaWYgKCFpc01vdmluZykge1xyXG4gICAgICAgICAgICAgIGZpbmlzaGVkID0gTWF0aC5hYnModG8yIC0gcG9zaXRpb24pIDw9IHByZWNpc2lvbjtcclxuICAgICAgICAgICAgICBpZiAoZmluaXNoZWQpIHtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY2FuQm91bmNlKSB7XHJcbiAgICAgICAgICAgICAgaXNCb3VuY2luZyA9IHBvc2l0aW9uID09IHRvMiB8fCBwb3NpdGlvbiA+IHRvMiA9PSBpc0dyb3dpbmc7XHJcbiAgICAgICAgICAgICAgaWYgKGlzQm91bmNpbmcpIHtcclxuICAgICAgICAgICAgICAgIHZlbG9jaXR5ID0gLXZlbG9jaXR5ICogYm91bmNlRmFjdG9yO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb24gPSB0bzI7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IHNwcmluZ0ZvcmNlID0gLWNvbmZpZzIudGVuc2lvbiAqIDFlLTYgKiAocG9zaXRpb24gLSB0bzIpO1xyXG4gICAgICAgICAgICBjb25zdCBkYW1waW5nRm9yY2UgPSAtY29uZmlnMi5mcmljdGlvbiAqIDFlLTMgKiB2ZWxvY2l0eTtcclxuICAgICAgICAgICAgY29uc3QgYWNjZWxlcmF0aW9uID0gKHNwcmluZ0ZvcmNlICsgZGFtcGluZ0ZvcmNlKSAvIGNvbmZpZzIubWFzcztcclxuICAgICAgICAgICAgdmVsb2NpdHkgPSB2ZWxvY2l0eSArIGFjY2VsZXJhdGlvbiAqIHN0ZXA7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24gKyB2ZWxvY2l0eSAqIHN0ZXA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG5vZGUyLmxhc3RWZWxvY2l0eSA9IHZlbG9jaXR5O1xyXG4gICAgICAgIGlmIChOdW1iZXIuaXNOYU4ocG9zaXRpb24pKSB7XHJcbiAgICAgICAgICBjb25zb2xlLndhcm4oYEdvdCBOYU4gd2hpbGUgYW5pbWF0aW5nOmAsIHRoaXMpO1xyXG4gICAgICAgICAgZmluaXNoZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAocGF5bG9hZCAmJiAhcGF5bG9hZFtpXS5kb25lKSB7XHJcbiAgICAgICAgZmluaXNoZWQgPSBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoZmluaXNoZWQpIHtcclxuICAgICAgICBub2RlMi5kb25lID0gdHJ1ZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZGxlID0gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKG5vZGUyLnNldFZhbHVlKHBvc2l0aW9uLCBjb25maWcyLnJvdW5kKSkge1xyXG4gICAgICAgIGNoYW5nZWQgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IG5vZGUgPSBnZXRBbmltYXRlZDIodGhpcyk7XHJcbiAgICBjb25zdCBjdXJyVmFsID0gbm9kZS5nZXRWYWx1ZSgpO1xyXG4gICAgaWYgKGlkbGUpIHtcclxuICAgICAgY29uc3QgZmluYWxWYWwgPSBnZXRGbHVpZFZhbHVlMihhbmltLnRvKTtcclxuICAgICAgaWYgKChjdXJyVmFsICE9PSBmaW5hbFZhbCB8fCBjaGFuZ2VkKSAmJiAhY29uZmlnMi5kZWNheSkge1xyXG4gICAgICAgIG5vZGUuc2V0VmFsdWUoZmluYWxWYWwpO1xyXG4gICAgICAgIHRoaXMuX29uQ2hhbmdlKGZpbmFsVmFsKTtcclxuICAgICAgfSBlbHNlIGlmIChjaGFuZ2VkICYmIGNvbmZpZzIuZGVjYXkpIHtcclxuICAgICAgICB0aGlzLl9vbkNoYW5nZShjdXJyVmFsKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9zdG9wKCk7XHJcbiAgICB9IGVsc2UgaWYgKGNoYW5nZWQpIHtcclxuICAgICAgdGhpcy5fb25DaGFuZ2UoY3VyclZhbCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKiBTZXQgdGhlIGN1cnJlbnQgdmFsdWUsIHdoaWxlIHN0b3BwaW5nIHRoZSBjdXJyZW50IGFuaW1hdGlvbiAqL1xyXG4gIHNldCh2YWx1ZSkge1xyXG4gICAgcmFmMy5iYXRjaGVkVXBkYXRlcygoKSA9PiB7XHJcbiAgICAgIHRoaXMuX3N0b3AoKTtcclxuICAgICAgdGhpcy5fZm9jdXModmFsdWUpO1xyXG4gICAgICB0aGlzLl9zZXQodmFsdWUpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbiAgLyoqXHJcbiAgICogRnJlZXplIHRoZSBhY3RpdmUgYW5pbWF0aW9uIGluIHRpbWUsIGFzIHdlbGwgYXMgYW55IHVwZGF0ZXMgbWVyZ2VkXHJcbiAgICogYmVmb3JlIGByZXN1bWVgIGlzIGNhbGxlZC5cclxuICAgKi9cclxuICBwYXVzZSgpIHtcclxuICAgIHRoaXMuX3VwZGF0ZSh7IHBhdXNlOiB0cnVlIH0pO1xyXG4gIH1cclxuICAvKiogUmVzdW1lIHRoZSBhbmltYXRpb24gaWYgcGF1c2VkLiAqL1xyXG4gIHJlc3VtZSgpIHtcclxuICAgIHRoaXMuX3VwZGF0ZSh7IHBhdXNlOiBmYWxzZSB9KTtcclxuICB9XHJcbiAgLyoqIFNraXAgdG8gdGhlIGVuZCBvZiB0aGUgY3VycmVudCBhbmltYXRpb24uICovXHJcbiAgZmluaXNoKCkge1xyXG4gICAgaWYgKGlzQW5pbWF0aW5nKHRoaXMpKSB7XHJcbiAgICAgIGNvbnN0IHsgdG86IHRvMiwgY29uZmlnOiBjb25maWcyIH0gPSB0aGlzLmFuaW1hdGlvbjtcclxuICAgICAgcmFmMy5iYXRjaGVkVXBkYXRlcygoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fb25TdGFydCgpO1xyXG4gICAgICAgIGlmICghY29uZmlnMi5kZWNheSkge1xyXG4gICAgICAgICAgdGhpcy5fc2V0KHRvMiwgZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9zdG9wKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG4gIC8qKiBQdXNoIHByb3BzIGludG8gdGhlIHBlbmRpbmcgcXVldWUuICovXHJcbiAgdXBkYXRlKHByb3BzKSB7XHJcbiAgICBjb25zdCBxdWV1ZSA9IHRoaXMucXVldWUgfHwgKHRoaXMucXVldWUgPSBbXSk7XHJcbiAgICBxdWV1ZS5wdXNoKHByb3BzKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuICBzdGFydCh0bzIsIGFyZzIpIHtcclxuICAgIGxldCBxdWV1ZTtcclxuICAgIGlmICghaXM1LnVuZCh0bzIpKSB7XHJcbiAgICAgIHF1ZXVlID0gW2lzNS5vYmoodG8yKSA/IHRvMiA6IHsgLi4uYXJnMiwgdG86IHRvMiB9XTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHF1ZXVlID0gdGhpcy5xdWV1ZSB8fCBbXTtcclxuICAgICAgdGhpcy5xdWV1ZSA9IFtdO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFxyXG4gICAgICBxdWV1ZS5tYXAoKHByb3BzKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdXAgPSB0aGlzLl91cGRhdGUocHJvcHMpO1xyXG4gICAgICAgIHJldHVybiB1cDtcclxuICAgICAgfSlcclxuICAgICkudGhlbigocmVzdWx0cykgPT4gZ2V0Q29tYmluZWRSZXN1bHQodGhpcywgcmVzdWx0cykpO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBTdG9wIHRoZSBjdXJyZW50IGFuaW1hdGlvbiwgYW5kIGNhbmNlbCBhbnkgZGVsYXllZCB1cGRhdGVzLlxyXG4gICAqXHJcbiAgICogUGFzcyBgdHJ1ZWAgdG8gY2FsbCBgb25SZXN0YCB3aXRoIGBjYW5jZWxsZWQ6IHRydWVgLlxyXG4gICAqL1xyXG4gIHN0b3AoY2FuY2VsKSB7XHJcbiAgICBjb25zdCB7IHRvOiB0bzIgfSA9IHRoaXMuYW5pbWF0aW9uO1xyXG4gICAgdGhpcy5fZm9jdXModGhpcy5nZXQoKSk7XHJcbiAgICBzdG9wQXN5bmModGhpcy5fc3RhdGUsIGNhbmNlbCAmJiB0aGlzLl9sYXN0Q2FsbElkKTtcclxuICAgIHJhZjMuYmF0Y2hlZFVwZGF0ZXMoKCkgPT4gdGhpcy5fc3RvcCh0bzIsIGNhbmNlbCkpO1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG4gIC8qKiBSZXN0YXJ0IHRoZSBhbmltYXRpb24uICovXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLl91cGRhdGUoeyByZXNldDogdHJ1ZSB9KTtcclxuICB9XHJcbiAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gIGV2ZW50T2JzZXJ2ZWQoZXZlbnQpIHtcclxuICAgIGlmIChldmVudC50eXBlID09IFwiY2hhbmdlXCIpIHtcclxuICAgICAgdGhpcy5fc3RhcnQoKTtcclxuICAgIH0gZWxzZSBpZiAoZXZlbnQudHlwZSA9PSBcInByaW9yaXR5XCIpIHtcclxuICAgICAgdGhpcy5wcmlvcml0eSA9IGV2ZW50LnByaW9yaXR5ICsgMTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqXHJcbiAgICogUGFyc2UgdGhlIGB0b2AgYW5kIGBmcm9tYCByYW5nZSBmcm9tIHRoZSBnaXZlbiBgcHJvcHNgIG9iamVjdC5cclxuICAgKlxyXG4gICAqIFRoaXMgYWxzbyBlbnN1cmVzIHRoZSBpbml0aWFsIHZhbHVlIGlzIGF2YWlsYWJsZSB0byBhbmltYXRlZCBjb21wb25lbnRzXHJcbiAgICogZHVyaW5nIHRoZSByZW5kZXIgcGhhc2UuXHJcbiAgICovXHJcbiAgX3ByZXBhcmVOb2RlKHByb3BzKSB7XHJcbiAgICBjb25zdCBrZXkgPSB0aGlzLmtleSB8fCBcIlwiO1xyXG4gICAgbGV0IHsgdG86IHRvMiwgZnJvbSB9ID0gcHJvcHM7XHJcbiAgICB0bzIgPSBpczUub2JqKHRvMikgPyB0bzJba2V5XSA6IHRvMjtcclxuICAgIGlmICh0bzIgPT0gbnVsbCB8fCBpc0FzeW5jVG8odG8yKSkge1xyXG4gICAgICB0bzIgPSB2b2lkIDA7XHJcbiAgICB9XHJcbiAgICBmcm9tID0gaXM1Lm9iaihmcm9tKSA/IGZyb21ba2V5XSA6IGZyb207XHJcbiAgICBpZiAoZnJvbSA9PSBudWxsKSB7XHJcbiAgICAgIGZyb20gPSB2b2lkIDA7XHJcbiAgICB9XHJcbiAgICBjb25zdCByYW5nZSA9IHsgdG86IHRvMiwgZnJvbSB9O1xyXG4gICAgaWYgKCFoYXNBbmltYXRlZCh0aGlzKSkge1xyXG4gICAgICBpZiAocHJvcHMucmV2ZXJzZSlcclxuICAgICAgICBbdG8yLCBmcm9tXSA9IFtmcm9tLCB0bzJdO1xyXG4gICAgICBmcm9tID0gZ2V0Rmx1aWRWYWx1ZTIoZnJvbSk7XHJcbiAgICAgIGlmICghaXM1LnVuZChmcm9tKSkge1xyXG4gICAgICAgIHRoaXMuX3NldChmcm9tKTtcclxuICAgICAgfSBlbHNlIGlmICghZ2V0QW5pbWF0ZWQyKHRoaXMpKSB7XHJcbiAgICAgICAgdGhpcy5fc2V0KHRvMik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiByYW5nZTtcclxuICB9XHJcbiAgLyoqIEV2ZXJ5IHVwZGF0ZSBpcyBwcm9jZXNzZWQgYnkgdGhpcyBtZXRob2QgYmVmb3JlIG1lcmdpbmcuICovXHJcbiAgX3VwZGF0ZSh7IC4uLnByb3BzIH0sIGlzTG9vcCkge1xyXG4gICAgY29uc3QgeyBrZXksIGRlZmF1bHRQcm9wcyB9ID0gdGhpcztcclxuICAgIGlmIChwcm9wcy5kZWZhdWx0KVxyXG4gICAgICBPYmplY3QuYXNzaWduKFxyXG4gICAgICAgIGRlZmF1bHRQcm9wcyxcclxuICAgICAgICBnZXREZWZhdWx0UHJvcHMoXHJcbiAgICAgICAgICBwcm9wcyxcclxuICAgICAgICAgICh2YWx1ZSwgcHJvcCkgPT4gL15vbi8udGVzdChwcm9wKSA/IHJlc29sdmVQcm9wKHZhbHVlLCBrZXkpIDogdmFsdWVcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICBtZXJnZUFjdGl2ZUZuKHRoaXMsIHByb3BzLCBcIm9uUHJvcHNcIik7XHJcbiAgICBzZW5kRXZlbnQodGhpcywgXCJvblByb3BzXCIsIHByb3BzLCB0aGlzKTtcclxuICAgIGNvbnN0IHJhbmdlID0gdGhpcy5fcHJlcGFyZU5vZGUocHJvcHMpO1xyXG4gICAgaWYgKE9iamVjdC5pc0Zyb3plbih0aGlzKSkge1xyXG4gICAgICB0aHJvdyBFcnJvcihcclxuICAgICAgICBcIkNhbm5vdCBhbmltYXRlIGEgYFNwcmluZ1ZhbHVlYCBvYmplY3QgdGhhdCBpcyBmcm96ZW4uIERpZCB5b3UgZm9yZ2V0IHRvIHBhc3MgeW91ciBjb21wb25lbnQgdG8gYGFuaW1hdGVkKC4uLilgIGJlZm9yZSBhbmltYXRpbmcgaXRzIHByb3BzP1wiXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBzdGF0ZSA9IHRoaXMuX3N0YXRlO1xyXG4gICAgcmV0dXJuIHNjaGVkdWxlUHJvcHMoKyt0aGlzLl9sYXN0Q2FsbElkLCB7XHJcbiAgICAgIGtleSxcclxuICAgICAgcHJvcHMsXHJcbiAgICAgIGRlZmF1bHRQcm9wcyxcclxuICAgICAgc3RhdGUsXHJcbiAgICAgIGFjdGlvbnM6IHtcclxuICAgICAgICBwYXVzZTogKCkgPT4ge1xyXG4gICAgICAgICAgaWYgKCFpc1BhdXNlZCh0aGlzKSkge1xyXG4gICAgICAgICAgICBzZXRQYXVzZWRCaXQodGhpcywgdHJ1ZSk7XHJcbiAgICAgICAgICAgIGZsdXNoQ2FsbHMoc3RhdGUucGF1c2VRdWV1ZSk7XHJcbiAgICAgICAgICAgIHNlbmRFdmVudChcclxuICAgICAgICAgICAgICB0aGlzLFxyXG4gICAgICAgICAgICAgIFwib25QYXVzZVwiLFxyXG4gICAgICAgICAgICAgIGdldEZpbmlzaGVkUmVzdWx0KHRoaXMsIGNoZWNrRmluaXNoZWQodGhpcywgdGhpcy5hbmltYXRpb24udG8pKSxcclxuICAgICAgICAgICAgICB0aGlzXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZXN1bWU6ICgpID0+IHtcclxuICAgICAgICAgIGlmIChpc1BhdXNlZCh0aGlzKSkge1xyXG4gICAgICAgICAgICBzZXRQYXVzZWRCaXQodGhpcywgZmFsc2UpO1xyXG4gICAgICAgICAgICBpZiAoaXNBbmltYXRpbmcodGhpcykpIHtcclxuICAgICAgICAgICAgICB0aGlzLl9yZXN1bWUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmbHVzaENhbGxzKHN0YXRlLnJlc3VtZVF1ZXVlKTtcclxuICAgICAgICAgICAgc2VuZEV2ZW50KFxyXG4gICAgICAgICAgICAgIHRoaXMsXHJcbiAgICAgICAgICAgICAgXCJvblJlc3VtZVwiLFxyXG4gICAgICAgICAgICAgIGdldEZpbmlzaGVkUmVzdWx0KHRoaXMsIGNoZWNrRmluaXNoZWQodGhpcywgdGhpcy5hbmltYXRpb24udG8pKSxcclxuICAgICAgICAgICAgICB0aGlzXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzdGFydDogdGhpcy5fbWVyZ2UuYmluZCh0aGlzLCByYW5nZSlcclxuICAgICAgfVxyXG4gICAgfSkudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChwcm9wcy5sb29wICYmIHJlc3VsdC5maW5pc2hlZCAmJiAhKGlzTG9vcCAmJiByZXN1bHQubm9vcCkpIHtcclxuICAgICAgICBjb25zdCBuZXh0UHJvcHMgPSBjcmVhdGVMb29wVXBkYXRlKHByb3BzKTtcclxuICAgICAgICBpZiAobmV4dFByb3BzKSB7XHJcbiAgICAgICAgICByZXR1cm4gdGhpcy5fdXBkYXRlKG5leHRQcm9wcywgdHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgLyoqIE1lcmdlIHByb3BzIGludG8gdGhlIGN1cnJlbnQgYW5pbWF0aW9uICovXHJcbiAgX21lcmdlKHJhbmdlLCBwcm9wcywgcmVzb2x2ZSkge1xyXG4gICAgaWYgKHByb3BzLmNhbmNlbCkge1xyXG4gICAgICB0aGlzLnN0b3AodHJ1ZSk7XHJcbiAgICAgIHJldHVybiByZXNvbHZlKGdldENhbmNlbGxlZFJlc3VsdCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBoYXNUb1Byb3AgPSAhaXM1LnVuZChyYW5nZS50byk7XHJcbiAgICBjb25zdCBoYXNGcm9tUHJvcCA9ICFpczUudW5kKHJhbmdlLmZyb20pO1xyXG4gICAgaWYgKGhhc1RvUHJvcCB8fCBoYXNGcm9tUHJvcCkge1xyXG4gICAgICBpZiAocHJvcHMuY2FsbElkID4gdGhpcy5fbGFzdFRvSWQpIHtcclxuICAgICAgICB0aGlzLl9sYXN0VG9JZCA9IHByb3BzLmNhbGxJZDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gcmVzb2x2ZShnZXRDYW5jZWxsZWRSZXN1bHQodGhpcykpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCB7IGtleSwgZGVmYXVsdFByb3BzLCBhbmltYXRpb246IGFuaW0gfSA9IHRoaXM7XHJcbiAgICBjb25zdCB7IHRvOiBwcmV2VG8sIGZyb206IHByZXZGcm9tIH0gPSBhbmltO1xyXG4gICAgbGV0IHsgdG86IHRvMiA9IHByZXZUbywgZnJvbSA9IHByZXZGcm9tIH0gPSByYW5nZTtcclxuICAgIGlmIChoYXNGcm9tUHJvcCAmJiAhaGFzVG9Qcm9wICYmICghcHJvcHMuZGVmYXVsdCB8fCBpczUudW5kKHRvMikpKSB7XHJcbiAgICAgIHRvMiA9IGZyb207XHJcbiAgICB9XHJcbiAgICBpZiAocHJvcHMucmV2ZXJzZSlcclxuICAgICAgW3RvMiwgZnJvbV0gPSBbZnJvbSwgdG8yXTtcclxuICAgIGNvbnN0IGhhc0Zyb21DaGFuZ2VkID0gIWlzRXF1YWwoZnJvbSwgcHJldkZyb20pO1xyXG4gICAgaWYgKGhhc0Zyb21DaGFuZ2VkKSB7XHJcbiAgICAgIGFuaW0uZnJvbSA9IGZyb207XHJcbiAgICB9XHJcbiAgICBmcm9tID0gZ2V0Rmx1aWRWYWx1ZTIoZnJvbSk7XHJcbiAgICBjb25zdCBoYXNUb0NoYW5nZWQgPSAhaXNFcXVhbCh0bzIsIHByZXZUbyk7XHJcbiAgICBpZiAoaGFzVG9DaGFuZ2VkKSB7XHJcbiAgICAgIHRoaXMuX2ZvY3VzKHRvMik7XHJcbiAgICB9XHJcbiAgICBjb25zdCBoYXNBc3luY1RvID0gaXNBc3luY1RvKHByb3BzLnRvKTtcclxuICAgIGNvbnN0IHsgY29uZmlnOiBjb25maWcyIH0gPSBhbmltO1xyXG4gICAgY29uc3QgeyBkZWNheSwgdmVsb2NpdHkgfSA9IGNvbmZpZzI7XHJcbiAgICBpZiAoaGFzVG9Qcm9wIHx8IGhhc0Zyb21Qcm9wKSB7XHJcbiAgICAgIGNvbmZpZzIudmVsb2NpdHkgPSAwO1xyXG4gICAgfVxyXG4gICAgaWYgKHByb3BzLmNvbmZpZyAmJiAhaGFzQXN5bmNUbykge1xyXG4gICAgICBtZXJnZUNvbmZpZyhcclxuICAgICAgICBjb25maWcyLFxyXG4gICAgICAgIGNhbGxQcm9wKHByb3BzLmNvbmZpZywga2V5KSxcclxuICAgICAgICAvLyBBdm9pZCBjYWxsaW5nIHRoZSBzYW1lIFwiY29uZmlnXCIgcHJvcCB0d2ljZS5cclxuICAgICAgICBwcm9wcy5jb25maWcgIT09IGRlZmF1bHRQcm9wcy5jb25maWcgPyBjYWxsUHJvcChkZWZhdWx0UHJvcHMuY29uZmlnLCBrZXkpIDogdm9pZCAwXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBsZXQgbm9kZSA9IGdldEFuaW1hdGVkMih0aGlzKTtcclxuICAgIGlmICghbm9kZSB8fCBpczUudW5kKHRvMikpIHtcclxuICAgICAgcmV0dXJuIHJlc29sdmUoZ2V0RmluaXNoZWRSZXN1bHQodGhpcywgdHJ1ZSkpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgcmVzZXQgPSAoXHJcbiAgICAgIC8vIFdoZW4gYHJlc2V0YCBpcyB1bmRlZmluZWQsIHRoZSBgZnJvbWAgcHJvcCBpbXBsaWVzIGByZXNldDogdHJ1ZWAsXHJcbiAgICAgIC8vIGV4Y2VwdCBmb3IgZGVjbGFyYXRpdmUgdXBkYXRlcy4gV2hlbiBgcmVzZXRgIGlzIGRlZmluZWQsIHRoZXJlXHJcbiAgICAgIC8vIG11c3QgZXhpc3QgYSB2YWx1ZSB0byBhbmltYXRlIGZyb20uXHJcbiAgICAgIGlzNS51bmQocHJvcHMucmVzZXQpID8gaGFzRnJvbVByb3AgJiYgIXByb3BzLmRlZmF1bHQgOiAhaXM1LnVuZChmcm9tKSAmJiBtYXRjaFByb3AocHJvcHMucmVzZXQsIGtleSlcclxuICAgICk7XHJcbiAgICBjb25zdCB2YWx1ZSA9IHJlc2V0ID8gZnJvbSA6IHRoaXMuZ2V0KCk7XHJcbiAgICBjb25zdCBnb2FsID0gY29tcHV0ZUdvYWwodG8yKTtcclxuICAgIGNvbnN0IGlzQW5pbWF0YWJsZSA9IGlzNS5udW0oZ29hbCkgfHwgaXM1LmFycihnb2FsKSB8fCBpc0FuaW1hdGVkU3RyaW5nMihnb2FsKTtcclxuICAgIGNvbnN0IGltbWVkaWF0ZSA9ICFoYXNBc3luY1RvICYmICghaXNBbmltYXRhYmxlIHx8IG1hdGNoUHJvcChkZWZhdWx0UHJvcHMuaW1tZWRpYXRlIHx8IHByb3BzLmltbWVkaWF0ZSwga2V5KSk7XHJcbiAgICBpZiAoaGFzVG9DaGFuZ2VkKSB7XHJcbiAgICAgIGNvbnN0IG5vZGVUeXBlID0gZ2V0QW5pbWF0ZWRUeXBlKHRvMik7XHJcbiAgICAgIGlmIChub2RlVHlwZSAhPT0gbm9kZS5jb25zdHJ1Y3Rvcikge1xyXG4gICAgICAgIGlmIChpbW1lZGlhdGUpIHtcclxuICAgICAgICAgIG5vZGUgPSB0aGlzLl9zZXQoZ29hbCk7XHJcbiAgICAgICAgfSBlbHNlXHJcbiAgICAgICAgICB0aHJvdyBFcnJvcihcclxuICAgICAgICAgICAgYENhbm5vdCBhbmltYXRlIGJldHdlZW4gJHtub2RlLmNvbnN0cnVjdG9yLm5hbWV9IGFuZCAke25vZGVUeXBlLm5hbWV9LCBhcyB0aGUgXCJ0b1wiIHByb3Agc3VnZ2VzdHNgXHJcbiAgICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCBnb2FsVHlwZSA9IG5vZGUuY29uc3RydWN0b3I7XHJcbiAgICBsZXQgc3RhcnRlZCA9IGhhc0ZsdWlkVmFsdWUodG8yKTtcclxuICAgIGxldCBmaW5pc2hlZCA9IGZhbHNlO1xyXG4gICAgaWYgKCFzdGFydGVkKSB7XHJcbiAgICAgIGNvbnN0IGhhc1ZhbHVlQ2hhbmdlZCA9IHJlc2V0IHx8ICFoYXNBbmltYXRlZCh0aGlzKSAmJiBoYXNGcm9tQ2hhbmdlZDtcclxuICAgICAgaWYgKGhhc1RvQ2hhbmdlZCB8fCBoYXNWYWx1ZUNoYW5nZWQpIHtcclxuICAgICAgICBmaW5pc2hlZCA9IGlzRXF1YWwoY29tcHV0ZUdvYWwodmFsdWUpLCBnb2FsKTtcclxuICAgICAgICBzdGFydGVkID0gIWZpbmlzaGVkO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICghaXNFcXVhbChhbmltLmltbWVkaWF0ZSwgaW1tZWRpYXRlKSAmJiAhaW1tZWRpYXRlIHx8ICFpc0VxdWFsKGNvbmZpZzIuZGVjYXksIGRlY2F5KSB8fCAhaXNFcXVhbChjb25maWcyLnZlbG9jaXR5LCB2ZWxvY2l0eSkpIHtcclxuICAgICAgICBzdGFydGVkID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKGZpbmlzaGVkICYmIGlzQW5pbWF0aW5nKHRoaXMpKSB7XHJcbiAgICAgIGlmIChhbmltLmNoYW5nZWQgJiYgIXJlc2V0KSB7XHJcbiAgICAgICAgc3RhcnRlZCA9IHRydWU7XHJcbiAgICAgIH0gZWxzZSBpZiAoIXN0YXJ0ZWQpIHtcclxuICAgICAgICB0aGlzLl9zdG9wKHByZXZUbyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICghaGFzQXN5bmNUbykge1xyXG4gICAgICBpZiAoc3RhcnRlZCB8fCBoYXNGbHVpZFZhbHVlKHByZXZUbykpIHtcclxuICAgICAgICBhbmltLnZhbHVlcyA9IG5vZGUuZ2V0UGF5bG9hZCgpO1xyXG4gICAgICAgIGFuaW0udG9WYWx1ZXMgPSBoYXNGbHVpZFZhbHVlKHRvMikgPyBudWxsIDogZ29hbFR5cGUgPT0gQW5pbWF0ZWRTdHJpbmcgPyBbMV0gOiB0b0FycmF5Mihnb2FsKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoYW5pbS5pbW1lZGlhdGUgIT0gaW1tZWRpYXRlKSB7XHJcbiAgICAgICAgYW5pbS5pbW1lZGlhdGUgPSBpbW1lZGlhdGU7XHJcbiAgICAgICAgaWYgKCFpbW1lZGlhdGUgJiYgIXJlc2V0KSB7XHJcbiAgICAgICAgICB0aGlzLl9zZXQocHJldlRvKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHN0YXJ0ZWQpIHtcclxuICAgICAgICBjb25zdCB7IG9uUmVzdCB9ID0gYW5pbTtcclxuICAgICAgICBlYWNoMihBQ1RJVkVfRVZFTlRTLCAodHlwZSkgPT4gbWVyZ2VBY3RpdmVGbih0aGlzLCBwcm9wcywgdHlwZSkpO1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGdldEZpbmlzaGVkUmVzdWx0KHRoaXMsIGNoZWNrRmluaXNoZWQodGhpcywgcHJldlRvKSk7XHJcbiAgICAgICAgZmx1c2hDYWxscyh0aGlzLl9wZW5kaW5nQ2FsbHMsIHJlc3VsdCk7XHJcbiAgICAgICAgdGhpcy5fcGVuZGluZ0NhbGxzLmFkZChyZXNvbHZlKTtcclxuICAgICAgICBpZiAoYW5pbS5jaGFuZ2VkKVxyXG4gICAgICAgICAgcmFmMy5iYXRjaGVkVXBkYXRlcygoKSA9PiB7XHJcbiAgICAgICAgICAgIGFuaW0uY2hhbmdlZCA9ICFyZXNldDtcclxuICAgICAgICAgICAgb25SZXN0Py4ocmVzdWx0LCB0aGlzKTtcclxuICAgICAgICAgICAgaWYgKHJlc2V0KSB7XHJcbiAgICAgICAgICAgICAgY2FsbFByb3AoZGVmYXVsdFByb3BzLm9uUmVzdCwgcmVzdWx0KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhbmltLm9uU3RhcnQ/LihyZXN1bHQsIHRoaXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKHJlc2V0KSB7XHJcbiAgICAgIHRoaXMuX3NldCh2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICBpZiAoaGFzQXN5bmNUbykge1xyXG4gICAgICByZXNvbHZlKHJ1bkFzeW5jKHByb3BzLnRvLCBwcm9wcywgdGhpcy5fc3RhdGUsIHRoaXMpKTtcclxuICAgIH0gZWxzZSBpZiAoc3RhcnRlZCkge1xyXG4gICAgICB0aGlzLl9zdGFydCgpO1xyXG4gICAgfSBlbHNlIGlmIChpc0FuaW1hdGluZyh0aGlzKSAmJiAhaGFzVG9DaGFuZ2VkKSB7XHJcbiAgICAgIHRoaXMuX3BlbmRpbmdDYWxscy5hZGQocmVzb2x2ZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXNvbHZlKGdldE5vb3BSZXN1bHQodmFsdWUpKTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqIFVwZGF0ZSB0aGUgYGFuaW1hdGlvbi50b2AgdmFsdWUsIHdoaWNoIG1pZ2h0IGJlIGEgYEZsdWlkVmFsdWVgICovXHJcbiAgX2ZvY3VzKHZhbHVlKSB7XHJcbiAgICBjb25zdCBhbmltID0gdGhpcy5hbmltYXRpb247XHJcbiAgICBpZiAodmFsdWUgIT09IGFuaW0udG8pIHtcclxuICAgICAgaWYgKGdldEZsdWlkT2JzZXJ2ZXJzKHRoaXMpKSB7XHJcbiAgICAgICAgdGhpcy5fZGV0YWNoKCk7XHJcbiAgICAgIH1cclxuICAgICAgYW5pbS50byA9IHZhbHVlO1xyXG4gICAgICBpZiAoZ2V0Rmx1aWRPYnNlcnZlcnModGhpcykpIHtcclxuICAgICAgICB0aGlzLl9hdHRhY2goKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBfYXR0YWNoKCkge1xyXG4gICAgbGV0IHByaW9yaXR5ID0gMDtcclxuICAgIGNvbnN0IHsgdG86IHRvMiB9ID0gdGhpcy5hbmltYXRpb247XHJcbiAgICBpZiAoaGFzRmx1aWRWYWx1ZSh0bzIpKSB7XHJcbiAgICAgIGFkZEZsdWlkT2JzZXJ2ZXIodG8yLCB0aGlzKTtcclxuICAgICAgaWYgKGlzRnJhbWVWYWx1ZSh0bzIpKSB7XHJcbiAgICAgICAgcHJpb3JpdHkgPSB0bzIucHJpb3JpdHkgKyAxO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgfVxyXG4gIF9kZXRhY2goKSB7XHJcbiAgICBjb25zdCB7IHRvOiB0bzIgfSA9IHRoaXMuYW5pbWF0aW9uO1xyXG4gICAgaWYgKGhhc0ZsdWlkVmFsdWUodG8yKSkge1xyXG4gICAgICByZW1vdmVGbHVpZE9ic2VydmVyKHRvMiwgdGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIFVwZGF0ZSB0aGUgY3VycmVudCB2YWx1ZSBmcm9tIG91dHNpZGUgdGhlIGZyYW1lbG9vcCxcclxuICAgKiBhbmQgcmV0dXJuIHRoZSBgQW5pbWF0ZWRgIG5vZGUuXHJcbiAgICovXHJcbiAgX3NldChhcmcsIGlkbGUgPSB0cnVlKSB7XHJcbiAgICBjb25zdCB2YWx1ZSA9IGdldEZsdWlkVmFsdWUyKGFyZyk7XHJcbiAgICBpZiAoIWlzNS51bmQodmFsdWUpKSB7XHJcbiAgICAgIGNvbnN0IG9sZE5vZGUgPSBnZXRBbmltYXRlZDIodGhpcyk7XHJcbiAgICAgIGlmICghb2xkTm9kZSB8fCAhaXNFcXVhbCh2YWx1ZSwgb2xkTm9kZS5nZXRWYWx1ZSgpKSkge1xyXG4gICAgICAgIGNvbnN0IG5vZGVUeXBlID0gZ2V0QW5pbWF0ZWRUeXBlKHZhbHVlKTtcclxuICAgICAgICBpZiAoIW9sZE5vZGUgfHwgb2xkTm9kZS5jb25zdHJ1Y3RvciAhPSBub2RlVHlwZSkge1xyXG4gICAgICAgICAgc2V0QW5pbWF0ZWQodGhpcywgbm9kZVR5cGUuY3JlYXRlKHZhbHVlKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIG9sZE5vZGUuc2V0VmFsdWUodmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob2xkTm9kZSkge1xyXG4gICAgICAgICAgcmFmMy5iYXRjaGVkVXBkYXRlcygoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX29uQ2hhbmdlKHZhbHVlLCBpZGxlKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGdldEFuaW1hdGVkMih0aGlzKTtcclxuICB9XHJcbiAgX29uU3RhcnQoKSB7XHJcbiAgICBjb25zdCBhbmltID0gdGhpcy5hbmltYXRpb247XHJcbiAgICBpZiAoIWFuaW0uY2hhbmdlZCkge1xyXG4gICAgICBhbmltLmNoYW5nZWQgPSB0cnVlO1xyXG4gICAgICBzZW5kRXZlbnQoXHJcbiAgICAgICAgdGhpcyxcclxuICAgICAgICBcIm9uU3RhcnRcIixcclxuICAgICAgICBnZXRGaW5pc2hlZFJlc3VsdCh0aGlzLCBjaGVja0ZpbmlzaGVkKHRoaXMsIGFuaW0udG8pKSxcclxuICAgICAgICB0aGlzXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIF9vbkNoYW5nZSh2YWx1ZSwgaWRsZSkge1xyXG4gICAgaWYgKCFpZGxlKSB7XHJcbiAgICAgIHRoaXMuX29uU3RhcnQoKTtcclxuICAgICAgY2FsbFByb3AodGhpcy5hbmltYXRpb24ub25DaGFuZ2UsIHZhbHVlLCB0aGlzKTtcclxuICAgIH1cclxuICAgIGNhbGxQcm9wKHRoaXMuZGVmYXVsdFByb3BzLm9uQ2hhbmdlLCB2YWx1ZSwgdGhpcyk7XHJcbiAgICBzdXBlci5fb25DaGFuZ2UodmFsdWUsIGlkbGUpO1xyXG4gIH1cclxuICAvLyBUaGlzIG1ldGhvZCByZXNldHMgdGhlIGFuaW1hdGlvbiBzdGF0ZSAoZXZlbiBpZiBhbHJlYWR5IGFuaW1hdGluZykgdG9cclxuICAvLyBlbnN1cmUgdGhlIGxhdGVzdCBmcm9tL3RvIHJhbmdlIGlzIHVzZWQsIGFuZCBpdCBhbHNvIGVuc3VyZXMgdGhpcyBzcHJpbmdcclxuICAvLyBpcyBhZGRlZCB0byB0aGUgZnJhbWVsb29wLlxyXG4gIF9zdGFydCgpIHtcclxuICAgIGNvbnN0IGFuaW0gPSB0aGlzLmFuaW1hdGlvbjtcclxuICAgIGdldEFuaW1hdGVkMih0aGlzKS5yZXNldChnZXRGbHVpZFZhbHVlMihhbmltLnRvKSk7XHJcbiAgICBpZiAoIWFuaW0uaW1tZWRpYXRlKSB7XHJcbiAgICAgIGFuaW0uZnJvbVZhbHVlcyA9IGFuaW0udmFsdWVzLm1hcCgobm9kZSkgPT4gbm9kZS5sYXN0UG9zaXRpb24pO1xyXG4gICAgfVxyXG4gICAgaWYgKCFpc0FuaW1hdGluZyh0aGlzKSkge1xyXG4gICAgICBzZXRBY3RpdmVCaXQodGhpcywgdHJ1ZSk7XHJcbiAgICAgIGlmICghaXNQYXVzZWQodGhpcykpIHtcclxuICAgICAgICB0aGlzLl9yZXN1bWUoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBfcmVzdW1lKCkge1xyXG4gICAgaWYgKEc1LnNraXBBbmltYXRpb24pIHtcclxuICAgICAgdGhpcy5maW5pc2goKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGZyYW1lTG9vcDIuc3RhcnQodGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEV4aXQgdGhlIGZyYW1lbG9vcCBhbmQgbm90aWZ5IGBvblJlc3RgIGxpc3RlbmVycy5cclxuICAgKlxyXG4gICAqIEFsd2F5cyB3cmFwIGBfc3RvcGAgY2FsbHMgd2l0aCBgYmF0Y2hlZFVwZGF0ZXNgLlxyXG4gICAqL1xyXG4gIF9zdG9wKGdvYWwsIGNhbmNlbCkge1xyXG4gICAgaWYgKGlzQW5pbWF0aW5nKHRoaXMpKSB7XHJcbiAgICAgIHNldEFjdGl2ZUJpdCh0aGlzLCBmYWxzZSk7XHJcbiAgICAgIGNvbnN0IGFuaW0gPSB0aGlzLmFuaW1hdGlvbjtcclxuICAgICAgZWFjaDIoYW5pbS52YWx1ZXMsIChub2RlKSA9PiB7XHJcbiAgICAgICAgbm9kZS5kb25lID0gdHJ1ZTtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChhbmltLnRvVmFsdWVzKSB7XHJcbiAgICAgICAgYW5pbS5vbkNoYW5nZSA9IGFuaW0ub25QYXVzZSA9IGFuaW0ub25SZXN1bWUgPSB2b2lkIDA7XHJcbiAgICAgIH1cclxuICAgICAgY2FsbEZsdWlkT2JzZXJ2ZXJzMih0aGlzLCB7XHJcbiAgICAgICAgdHlwZTogXCJpZGxlXCIsXHJcbiAgICAgICAgcGFyZW50OiB0aGlzXHJcbiAgICAgIH0pO1xyXG4gICAgICBjb25zdCByZXN1bHQgPSBjYW5jZWwgPyBnZXRDYW5jZWxsZWRSZXN1bHQodGhpcy5nZXQoKSkgOiBnZXRGaW5pc2hlZFJlc3VsdCh0aGlzLmdldCgpLCBjaGVja0ZpbmlzaGVkKHRoaXMsIGdvYWwgPz8gYW5pbS50bykpO1xyXG4gICAgICBmbHVzaENhbGxzKHRoaXMuX3BlbmRpbmdDYWxscywgcmVzdWx0KTtcclxuICAgICAgaWYgKGFuaW0uY2hhbmdlZCkge1xyXG4gICAgICAgIGFuaW0uY2hhbmdlZCA9IGZhbHNlO1xyXG4gICAgICAgIHNlbmRFdmVudCh0aGlzLCBcIm9uUmVzdFwiLCByZXN1bHQsIHRoaXMpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59O1xyXG5mdW5jdGlvbiBjaGVja0ZpbmlzaGVkKHRhcmdldCwgdG8yKSB7XHJcbiAgY29uc3QgZ29hbCA9IGNvbXB1dGVHb2FsKHRvMik7XHJcbiAgY29uc3QgdmFsdWUgPSBjb21wdXRlR29hbCh0YXJnZXQuZ2V0KCkpO1xyXG4gIHJldHVybiBpc0VxdWFsKHZhbHVlLCBnb2FsKTtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVMb29wVXBkYXRlKHByb3BzLCBsb29wID0gcHJvcHMubG9vcCwgdG8yID0gcHJvcHMudG8pIHtcclxuICBjb25zdCBsb29wUmV0ID0gY2FsbFByb3AobG9vcCk7XHJcbiAgaWYgKGxvb3BSZXQpIHtcclxuICAgIGNvbnN0IG92ZXJyaWRlcyA9IGxvb3BSZXQgIT09IHRydWUgJiYgaW5mZXJUbyhsb29wUmV0KTtcclxuICAgIGNvbnN0IHJldmVyc2UgPSAob3ZlcnJpZGVzIHx8IHByb3BzKS5yZXZlcnNlO1xyXG4gICAgY29uc3QgcmVzZXQgPSAhb3ZlcnJpZGVzIHx8IG92ZXJyaWRlcy5yZXNldDtcclxuICAgIHJldHVybiBjcmVhdGVVcGRhdGUoe1xyXG4gICAgICAuLi5wcm9wcyxcclxuICAgICAgbG9vcCxcclxuICAgICAgLy8gQXZvaWQgdXBkYXRpbmcgZGVmYXVsdCBwcm9wcyB3aGVuIGxvb3BpbmcuXHJcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxyXG4gICAgICAvLyBOZXZlciBsb29wIHRoZSBgcGF1c2VgIHByb3AuXHJcbiAgICAgIHBhdXNlOiB2b2lkIDAsXHJcbiAgICAgIC8vIEZvciB0aGUgXCJyZXZlcnNlXCIgcHJvcCB0byBsb29wIGFzIGV4cGVjdGVkLCB0aGUgXCJ0b1wiIHByb3BcclxuICAgICAgLy8gbXVzdCBiZSB1bmRlZmluZWQuIFRoZSBcInJldmVyc2VcIiBwcm9wIGlzIGlnbm9yZWQgd2hlbiB0aGVcclxuICAgICAgLy8gXCJ0b1wiIHByb3AgaXMgYW4gYXJyYXkgb3IgZnVuY3Rpb24uXHJcbiAgICAgIHRvOiAhcmV2ZXJzZSB8fCBpc0FzeW5jVG8odG8yKSA/IHRvMiA6IHZvaWQgMCxcclxuICAgICAgLy8gSWdub3JlIHRoZSBcImZyb21cIiBwcm9wIGV4Y2VwdCBvbiByZXNldC5cclxuICAgICAgZnJvbTogcmVzZXQgPyBwcm9wcy5mcm9tIDogdm9pZCAwLFxyXG4gICAgICByZXNldCxcclxuICAgICAgLy8gVGhlIFwibG9vcFwiIHByb3AgY2FuIHJldHVybiBhIFwidXNlU3ByaW5nXCIgcHJvcHMgb2JqZWN0IHRvXHJcbiAgICAgIC8vIG92ZXJyaWRlIGFueSBvZiB0aGUgb3JpZ2luYWwgcHJvcHMuXHJcbiAgICAgIC4uLm92ZXJyaWRlc1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVVwZGF0ZShwcm9wcykge1xyXG4gIGNvbnN0IHsgdG86IHRvMiwgZnJvbSB9ID0gcHJvcHMgPSBpbmZlclRvKHByb3BzKTtcclxuICBjb25zdCBrZXlzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcclxuICBpZiAoaXM1Lm9iaih0bzIpKVxyXG4gICAgZmluZERlZmluZWQodG8yLCBrZXlzKTtcclxuICBpZiAoaXM1Lm9iaihmcm9tKSlcclxuICAgIGZpbmREZWZpbmVkKGZyb20sIGtleXMpO1xyXG4gIHByb3BzLmtleXMgPSBrZXlzLnNpemUgPyBBcnJheS5mcm9tKGtleXMpIDogbnVsbDtcclxuICByZXR1cm4gcHJvcHM7XHJcbn1cclxuZnVuY3Rpb24gZGVjbGFyZVVwZGF0ZShwcm9wcykge1xyXG4gIGNvbnN0IHVwZGF0ZTIgPSBjcmVhdGVVcGRhdGUocHJvcHMpO1xyXG4gIGlmIChpczUudW5kKHVwZGF0ZTIuZGVmYXVsdCkpIHtcclxuICAgIHVwZGF0ZTIuZGVmYXVsdCA9IGdldERlZmF1bHRQcm9wcyh1cGRhdGUyKTtcclxuICB9XHJcbiAgcmV0dXJuIHVwZGF0ZTI7XHJcbn1cclxuZnVuY3Rpb24gZmluZERlZmluZWQodmFsdWVzLCBrZXlzKSB7XHJcbiAgZWFjaFByb3AzKHZhbHVlcywgKHZhbHVlLCBrZXkpID0+IHZhbHVlICE9IG51bGwgJiYga2V5cy5hZGQoa2V5KSk7XHJcbn1cclxudmFyIEFDVElWRV9FVkVOVFMgPSBbXHJcbiAgXCJvblN0YXJ0XCIsXHJcbiAgXCJvblJlc3RcIixcclxuICBcIm9uQ2hhbmdlXCIsXHJcbiAgXCJvblBhdXNlXCIsXHJcbiAgXCJvblJlc3VtZVwiXHJcbl07XHJcbmZ1bmN0aW9uIG1lcmdlQWN0aXZlRm4odGFyZ2V0LCBwcm9wcywgdHlwZSkge1xyXG4gIHRhcmdldC5hbmltYXRpb25bdHlwZV0gPSBwcm9wc1t0eXBlXSAhPT0gZ2V0RGVmYXVsdFByb3AocHJvcHMsIHR5cGUpID8gcmVzb2x2ZVByb3AocHJvcHNbdHlwZV0sIHRhcmdldC5rZXkpIDogdm9pZCAwO1xyXG59XHJcbmZ1bmN0aW9uIHNlbmRFdmVudCh0YXJnZXQsIHR5cGUsIC4uLmFyZ3MpIHtcclxuICB0YXJnZXQuYW5pbWF0aW9uW3R5cGVdPy4oLi4uYXJncyk7XHJcbiAgdGFyZ2V0LmRlZmF1bHRQcm9wc1t0eXBlXT8uKC4uLmFyZ3MpO1xyXG59XHJcblxyXG4vLyBzcmMvQ29udHJvbGxlci50c1xyXG5pbXBvcnQge1xyXG4gIGlzIGFzIGlzNixcclxuICByYWYgYXMgcmFmNCxcclxuICBlYWNoIGFzIGVhY2gzLFxyXG4gIG5vb3AsXHJcbiAgZmx1c2ggYXMgZmx1c2gyLFxyXG4gIHRvQXJyYXkgYXMgdG9BcnJheTMsXHJcbiAgZWFjaFByb3AgYXMgZWFjaFByb3A0LFxyXG4gIGZsdXNoQ2FsbHMgYXMgZmx1c2hDYWxsczIsXHJcbiAgYWRkRmx1aWRPYnNlcnZlciBhcyBhZGRGbHVpZE9ic2VydmVyMlxyXG59IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG52YXIgQkFUQ0hFRF9FVkVOVFMgPSBbXCJvblN0YXJ0XCIsIFwib25DaGFuZ2VcIiwgXCJvblJlc3RcIl07XHJcbnZhciBuZXh0SWQyID0gMTtcclxudmFyIENvbnRyb2xsZXIgPSBjbGFzcyB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMsIGZsdXNoMykge1xyXG4gICAgdGhpcy5pZCA9IG5leHRJZDIrKztcclxuICAgIC8qKiBUaGUgYW5pbWF0ZWQgdmFsdWVzICovXHJcbiAgICB0aGlzLnNwcmluZ3MgPSB7fTtcclxuICAgIC8qKiBUaGUgcXVldWUgb2YgcHJvcHMgcGFzc2VkIHRvIHRoZSBgdXBkYXRlYCBtZXRob2QuICovXHJcbiAgICB0aGlzLnF1ZXVlID0gW107XHJcbiAgICAvKiogVGhlIGNvdW50ZXIgZm9yIHRyYWNraW5nIGBzY2hlZHVsZVByb3BzYCBjYWxscyAqL1xyXG4gICAgdGhpcy5fbGFzdEFzeW5jSWQgPSAwO1xyXG4gICAgLyoqIFRoZSB2YWx1ZXMgY3VycmVudGx5IGJlaW5nIGFuaW1hdGVkICovXHJcbiAgICB0aGlzLl9hY3RpdmUgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xyXG4gICAgLyoqIFRoZSB2YWx1ZXMgdGhhdCBjaGFuZ2VkIHJlY2VudGx5ICovXHJcbiAgICB0aGlzLl9jaGFuZ2VkID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcclxuICAgIC8qKiBFcXVhbHMgZmFsc2Ugd2hlbiBgb25TdGFydGAgbGlzdGVuZXJzIGNhbiBiZSBjYWxsZWQgKi9cclxuICAgIHRoaXMuX3N0YXJ0ZWQgPSBmYWxzZTtcclxuICAgIC8qKiBTdGF0ZSB1c2VkIGJ5IHRoZSBgcnVuQXN5bmNgIGZ1bmN0aW9uICovXHJcbiAgICB0aGlzLl9zdGF0ZSA9IHtcclxuICAgICAgcGF1c2VkOiBmYWxzZSxcclxuICAgICAgcGF1c2VRdWV1ZTogLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKSxcclxuICAgICAgcmVzdW1lUXVldWU6IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCksXHJcbiAgICAgIHRpbWVvdXRzOiAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpXHJcbiAgICB9O1xyXG4gICAgLyoqIFRoZSBldmVudCBxdWV1ZXMgdGhhdCBhcmUgZmx1c2hlZCBvbmNlIHBlciBmcmFtZSBtYXhpbXVtICovXHJcbiAgICB0aGlzLl9ldmVudHMgPSB7XHJcbiAgICAgIG9uU3RhcnQ6IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCksXHJcbiAgICAgIG9uQ2hhbmdlOiAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpLFxyXG4gICAgICBvblJlc3Q6IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKClcclxuICAgIH07XHJcbiAgICB0aGlzLl9vbkZyYW1lID0gdGhpcy5fb25GcmFtZS5iaW5kKHRoaXMpO1xyXG4gICAgaWYgKGZsdXNoMykge1xyXG4gICAgICB0aGlzLl9mbHVzaCA9IGZsdXNoMztcclxuICAgIH1cclxuICAgIGlmIChwcm9wcykge1xyXG4gICAgICB0aGlzLnN0YXJ0KHsgZGVmYXVsdDogdHJ1ZSwgLi4ucHJvcHMgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEVxdWFscyBgdHJ1ZWAgd2hlbiBubyBzcHJpbmcgdmFsdWVzIGFyZSBpbiB0aGUgZnJhbWVsb29wLCBhbmRcclxuICAgKiBubyBhc3luYyBhbmltYXRpb24gaXMgY3VycmVudGx5IGFjdGl2ZS5cclxuICAgKi9cclxuICBnZXQgaWRsZSgpIHtcclxuICAgIHJldHVybiAhdGhpcy5fc3RhdGUuYXN5bmNUbyAmJiBPYmplY3QudmFsdWVzKHRoaXMuc3ByaW5ncykuZXZlcnkoKHNwcmluZykgPT4ge1xyXG4gICAgICByZXR1cm4gc3ByaW5nLmlkbGUgJiYgIXNwcmluZy5pc0RlbGF5ZWQgJiYgIXNwcmluZy5pc1BhdXNlZDtcclxuICAgIH0pO1xyXG4gIH1cclxuICBnZXQgaXRlbSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pdGVtO1xyXG4gIH1cclxuICBzZXQgaXRlbShpdGVtKSB7XHJcbiAgICB0aGlzLl9pdGVtID0gaXRlbTtcclxuICB9XHJcbiAgLyoqIEdldCB0aGUgY3VycmVudCB2YWx1ZXMgb2Ygb3VyIHNwcmluZ3MgKi9cclxuICBnZXQoKSB7XHJcbiAgICBjb25zdCB2YWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuZWFjaCgoc3ByaW5nLCBrZXkpID0+IHZhbHVlc1trZXldID0gc3ByaW5nLmdldCgpKTtcclxuICAgIHJldHVybiB2YWx1ZXM7XHJcbiAgfVxyXG4gIC8qKiBTZXQgdGhlIGN1cnJlbnQgdmFsdWVzIHdpdGhvdXQgYW5pbWF0aW5nLiAqL1xyXG4gIHNldCh2YWx1ZXMpIHtcclxuICAgIGZvciAoY29uc3Qga2V5IGluIHZhbHVlcykge1xyXG4gICAgICBjb25zdCB2YWx1ZSA9IHZhbHVlc1trZXldO1xyXG4gICAgICBpZiAoIWlzNi51bmQodmFsdWUpKSB7XHJcbiAgICAgICAgdGhpcy5zcHJpbmdzW2tleV0uc2V0KHZhbHVlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAvKiogUHVzaCBhbiB1cGRhdGUgb250byB0aGUgcXVldWUgb2YgZWFjaCB2YWx1ZS4gKi9cclxuICB1cGRhdGUocHJvcHMpIHtcclxuICAgIGlmIChwcm9wcykge1xyXG4gICAgICB0aGlzLnF1ZXVlLnB1c2goY3JlYXRlVXBkYXRlKHByb3BzKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbiAgLyoqXHJcbiAgICogU3RhcnQgdGhlIHF1ZXVlZCBhbmltYXRpb25zIGZvciBldmVyeSBzcHJpbmcsIGFuZCByZXNvbHZlIHRoZSByZXR1cm5lZFxyXG4gICAqIHByb21pc2Ugb25jZSBhbGwgcXVldWVkIGFuaW1hdGlvbnMgaGF2ZSBmaW5pc2hlZCBvciBiZWVuIGNhbmNlbGxlZC5cclxuICAgKlxyXG4gICAqIFdoZW4geW91IHBhc3MgYSBxdWV1ZSAoaW5zdGVhZCBvZiBub3RoaW5nKSwgdGhhdCBxdWV1ZSBpcyB1c2VkIGluc3RlYWQgb2ZcclxuICAgKiB0aGUgcXVldWVkIGFuaW1hdGlvbnMgYWRkZWQgd2l0aCB0aGUgYHVwZGF0ZWAgbWV0aG9kLCB3aGljaCBhcmUgbGVmdCBhbG9uZS5cclxuICAgKi9cclxuICBzdGFydChwcm9wcykge1xyXG4gICAgbGV0IHsgcXVldWUgfSA9IHRoaXM7XHJcbiAgICBpZiAocHJvcHMpIHtcclxuICAgICAgcXVldWUgPSB0b0FycmF5Myhwcm9wcykubWFwKGNyZWF0ZVVwZGF0ZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnF1ZXVlID0gW107XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5fZmx1c2gpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2ZsdXNoKHRoaXMsIHF1ZXVlKTtcclxuICAgIH1cclxuICAgIHByZXBhcmVLZXlzKHRoaXMsIHF1ZXVlKTtcclxuICAgIHJldHVybiBmbHVzaFVwZGF0ZVF1ZXVlKHRoaXMsIHF1ZXVlKTtcclxuICB9XHJcbiAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gIHN0b3AoYXJnLCBrZXlzKSB7XHJcbiAgICBpZiAoYXJnICE9PSAhIWFyZykge1xyXG4gICAgICBrZXlzID0gYXJnO1xyXG4gICAgfVxyXG4gICAgaWYgKGtleXMpIHtcclxuICAgICAgY29uc3Qgc3ByaW5ncyA9IHRoaXMuc3ByaW5ncztcclxuICAgICAgZWFjaDModG9BcnJheTMoa2V5cyksIChrZXkpID0+IHNwcmluZ3Nba2V5XS5zdG9wKCEhYXJnKSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzdG9wQXN5bmModGhpcy5fc3RhdGUsIHRoaXMuX2xhc3RBc3luY0lkKTtcclxuICAgICAgdGhpcy5lYWNoKChzcHJpbmcpID0+IHNwcmluZy5zdG9wKCEhYXJnKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbiAgLyoqIEZyZWV6ZSB0aGUgYWN0aXZlIGFuaW1hdGlvbiBpbiB0aW1lICovXHJcbiAgcGF1c2Uoa2V5cykge1xyXG4gICAgaWYgKGlzNi51bmQoa2V5cykpIHtcclxuICAgICAgdGhpcy5zdGFydCh7IHBhdXNlOiB0cnVlIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc3Qgc3ByaW5ncyA9IHRoaXMuc3ByaW5ncztcclxuICAgICAgZWFjaDModG9BcnJheTMoa2V5cyksIChrZXkpID0+IHNwcmluZ3Nba2V5XS5wYXVzZSgpKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuICAvKiogUmVzdW1lIHRoZSBhbmltYXRpb24gaWYgcGF1c2VkLiAqL1xyXG4gIHJlc3VtZShrZXlzKSB7XHJcbiAgICBpZiAoaXM2LnVuZChrZXlzKSkge1xyXG4gICAgICB0aGlzLnN0YXJ0KHsgcGF1c2U6IGZhbHNlIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc3Qgc3ByaW5ncyA9IHRoaXMuc3ByaW5ncztcclxuICAgICAgZWFjaDModG9BcnJheTMoa2V5cyksIChrZXkpID0+IHNwcmluZ3Nba2V5XS5yZXN1bWUoKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbiAgLyoqIENhbGwgYSBmdW5jdGlvbiBvbmNlIHBlciBzcHJpbmcgdmFsdWUgKi9cclxuICBlYWNoKGl0ZXJhdG9yKSB7XHJcbiAgICBlYWNoUHJvcDQodGhpcy5zcHJpbmdzLCBpdGVyYXRvcik7XHJcbiAgfVxyXG4gIC8qKiBAaW50ZXJuYWwgQ2FsbGVkIGF0IHRoZSBlbmQgb2YgZXZlcnkgYW5pbWF0aW9uIGZyYW1lICovXHJcbiAgX29uRnJhbWUoKSB7XHJcbiAgICBjb25zdCB7IG9uU3RhcnQsIG9uQ2hhbmdlLCBvblJlc3QgfSA9IHRoaXMuX2V2ZW50cztcclxuICAgIGNvbnN0IGFjdGl2ZSA9IHRoaXMuX2FjdGl2ZS5zaXplID4gMDtcclxuICAgIGNvbnN0IGNoYW5nZWQgPSB0aGlzLl9jaGFuZ2VkLnNpemUgPiAwO1xyXG4gICAgaWYgKGFjdGl2ZSAmJiAhdGhpcy5fc3RhcnRlZCB8fCBjaGFuZ2VkICYmICF0aGlzLl9zdGFydGVkKSB7XHJcbiAgICAgIHRoaXMuX3N0YXJ0ZWQgPSB0cnVlO1xyXG4gICAgICBmbHVzaDIob25TdGFydCwgKFtvblN0YXJ0MiwgcmVzdWx0XSkgPT4ge1xyXG4gICAgICAgIHJlc3VsdC52YWx1ZSA9IHRoaXMuZ2V0KCk7XHJcbiAgICAgICAgb25TdGFydDIocmVzdWx0LCB0aGlzLCB0aGlzLl9pdGVtKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBpZGxlID0gIWFjdGl2ZSAmJiB0aGlzLl9zdGFydGVkO1xyXG4gICAgY29uc3QgdmFsdWVzID0gY2hhbmdlZCB8fCBpZGxlICYmIG9uUmVzdC5zaXplID8gdGhpcy5nZXQoKSA6IG51bGw7XHJcbiAgICBpZiAoY2hhbmdlZCAmJiBvbkNoYW5nZS5zaXplKSB7XHJcbiAgICAgIGZsdXNoMihvbkNoYW5nZSwgKFtvbkNoYW5nZTIsIHJlc3VsdF0pID0+IHtcclxuICAgICAgICByZXN1bHQudmFsdWUgPSB2YWx1ZXM7XHJcbiAgICAgICAgb25DaGFuZ2UyKHJlc3VsdCwgdGhpcywgdGhpcy5faXRlbSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgaWYgKGlkbGUpIHtcclxuICAgICAgdGhpcy5fc3RhcnRlZCA9IGZhbHNlO1xyXG4gICAgICBmbHVzaDIob25SZXN0LCAoW29uUmVzdDIsIHJlc3VsdF0pID0+IHtcclxuICAgICAgICByZXN1bHQudmFsdWUgPSB2YWx1ZXM7XHJcbiAgICAgICAgb25SZXN0MihyZXN1bHQsIHRoaXMsIHRoaXMuX2l0ZW0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqIEBpbnRlcm5hbCAqL1xyXG4gIGV2ZW50T2JzZXJ2ZWQoZXZlbnQpIHtcclxuICAgIGlmIChldmVudC50eXBlID09IFwiY2hhbmdlXCIpIHtcclxuICAgICAgdGhpcy5fY2hhbmdlZC5hZGQoZXZlbnQucGFyZW50KTtcclxuICAgICAgaWYgKCFldmVudC5pZGxlKSB7XHJcbiAgICAgICAgdGhpcy5fYWN0aXZlLmFkZChldmVudC5wYXJlbnQpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKGV2ZW50LnR5cGUgPT0gXCJpZGxlXCIpIHtcclxuICAgICAgdGhpcy5fYWN0aXZlLmRlbGV0ZShldmVudC5wYXJlbnQpO1xyXG4gICAgfSBlbHNlXHJcbiAgICAgIHJldHVybjtcclxuICAgIHJhZjQub25GcmFtZSh0aGlzLl9vbkZyYW1lKTtcclxuICB9XHJcbn07XHJcbmZ1bmN0aW9uIGZsdXNoVXBkYXRlUXVldWUoY3RybCwgcXVldWUpIHtcclxuICByZXR1cm4gUHJvbWlzZS5hbGwocXVldWUubWFwKChwcm9wcykgPT4gZmx1c2hVcGRhdGUoY3RybCwgcHJvcHMpKSkudGhlbihcclxuICAgIChyZXN1bHRzKSA9PiBnZXRDb21iaW5lZFJlc3VsdChjdHJsLCByZXN1bHRzKVxyXG4gICk7XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gZmx1c2hVcGRhdGUoY3RybCwgcHJvcHMsIGlzTG9vcCkge1xyXG4gIGNvbnN0IHsga2V5cywgdG86IHRvMiwgZnJvbSwgbG9vcCwgb25SZXN0LCBvblJlc29sdmUgfSA9IHByb3BzO1xyXG4gIGNvbnN0IGRlZmF1bHRzMiA9IGlzNi5vYmoocHJvcHMuZGVmYXVsdCkgJiYgcHJvcHMuZGVmYXVsdDtcclxuICBpZiAobG9vcCkge1xyXG4gICAgcHJvcHMubG9vcCA9IGZhbHNlO1xyXG4gIH1cclxuICBpZiAodG8yID09PSBmYWxzZSlcclxuICAgIHByb3BzLnRvID0gbnVsbDtcclxuICBpZiAoZnJvbSA9PT0gZmFsc2UpXHJcbiAgICBwcm9wcy5mcm9tID0gbnVsbDtcclxuICBjb25zdCBhc3luY1RvID0gaXM2LmFycih0bzIpIHx8IGlzNi5mdW4odG8yKSA/IHRvMiA6IHZvaWQgMDtcclxuICBpZiAoYXN5bmNUbykge1xyXG4gICAgcHJvcHMudG8gPSB2b2lkIDA7XHJcbiAgICBwcm9wcy5vblJlc3QgPSB2b2lkIDA7XHJcbiAgICBpZiAoZGVmYXVsdHMyKSB7XHJcbiAgICAgIGRlZmF1bHRzMi5vblJlc3QgPSB2b2lkIDA7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIGVhY2gzKEJBVENIRURfRVZFTlRTLCAoa2V5KSA9PiB7XHJcbiAgICAgIGNvbnN0IGhhbmRsZXIgPSBwcm9wc1trZXldO1xyXG4gICAgICBpZiAoaXM2LmZ1bihoYW5kbGVyKSkge1xyXG4gICAgICAgIGNvbnN0IHF1ZXVlID0gY3RybFtcIl9ldmVudHNcIl1ba2V5XTtcclxuICAgICAgICBwcm9wc1trZXldID0gKHsgZmluaXNoZWQsIGNhbmNlbGxlZCB9KSA9PiB7XHJcbiAgICAgICAgICBjb25zdCByZXN1bHQyID0gcXVldWUuZ2V0KGhhbmRsZXIpO1xyXG4gICAgICAgICAgaWYgKHJlc3VsdDIpIHtcclxuICAgICAgICAgICAgaWYgKCFmaW5pc2hlZClcclxuICAgICAgICAgICAgICByZXN1bHQyLmZpbmlzaGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmIChjYW5jZWxsZWQpXHJcbiAgICAgICAgICAgICAgcmVzdWx0Mi5jYW5jZWxsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcXVldWUuc2V0KGhhbmRsZXIsIHtcclxuICAgICAgICAgICAgICB2YWx1ZTogbnVsbCxcclxuICAgICAgICAgICAgICBmaW5pc2hlZDogZmluaXNoZWQgfHwgZmFsc2UsXHJcbiAgICAgICAgICAgICAgY2FuY2VsbGVkOiBjYW5jZWxsZWQgfHwgZmFsc2VcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAoZGVmYXVsdHMyKSB7XHJcbiAgICAgICAgICBkZWZhdWx0czJba2V5XSA9IHByb3BzW2tleV07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgY29uc3Qgc3RhdGUgPSBjdHJsW1wiX3N0YXRlXCJdO1xyXG4gIGlmIChwcm9wcy5wYXVzZSA9PT0gIXN0YXRlLnBhdXNlZCkge1xyXG4gICAgc3RhdGUucGF1c2VkID0gcHJvcHMucGF1c2U7XHJcbiAgICBmbHVzaENhbGxzMihwcm9wcy5wYXVzZSA/IHN0YXRlLnBhdXNlUXVldWUgOiBzdGF0ZS5yZXN1bWVRdWV1ZSk7XHJcbiAgfSBlbHNlIGlmIChzdGF0ZS5wYXVzZWQpIHtcclxuICAgIHByb3BzLnBhdXNlID0gdHJ1ZTtcclxuICB9XHJcbiAgY29uc3QgcHJvbWlzZXMgPSAoa2V5cyB8fCBPYmplY3Qua2V5cyhjdHJsLnNwcmluZ3MpKS5tYXAoXHJcbiAgICAoa2V5KSA9PiBjdHJsLnNwcmluZ3Nba2V5XS5zdGFydChwcm9wcylcclxuICApO1xyXG4gIGNvbnN0IGNhbmNlbCA9IHByb3BzLmNhbmNlbCA9PT0gdHJ1ZSB8fCBnZXREZWZhdWx0UHJvcChwcm9wcywgXCJjYW5jZWxcIikgPT09IHRydWU7XHJcbiAgaWYgKGFzeW5jVG8gfHwgY2FuY2VsICYmIHN0YXRlLmFzeW5jSWQpIHtcclxuICAgIHByb21pc2VzLnB1c2goXHJcbiAgICAgIHNjaGVkdWxlUHJvcHMoKytjdHJsW1wiX2xhc3RBc3luY0lkXCJdLCB7XHJcbiAgICAgICAgcHJvcHMsXHJcbiAgICAgICAgc3RhdGUsXHJcbiAgICAgICAgYWN0aW9uczoge1xyXG4gICAgICAgICAgcGF1c2U6IG5vb3AsXHJcbiAgICAgICAgICByZXN1bWU6IG5vb3AsXHJcbiAgICAgICAgICBzdGFydChwcm9wczIsIHJlc29sdmUpIHtcclxuICAgICAgICAgICAgaWYgKGNhbmNlbCkge1xyXG4gICAgICAgICAgICAgIHN0b3BBc3luYyhzdGF0ZSwgY3RybFtcIl9sYXN0QXN5bmNJZFwiXSk7XHJcbiAgICAgICAgICAgICAgcmVzb2x2ZShnZXRDYW5jZWxsZWRSZXN1bHQoY3RybCkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHByb3BzMi5vblJlc3QgPSBvblJlc3Q7XHJcbiAgICAgICAgICAgICAgcmVzb2x2ZShcclxuICAgICAgICAgICAgICAgIHJ1bkFzeW5jKFxyXG4gICAgICAgICAgICAgICAgICBhc3luY1RvLFxyXG4gICAgICAgICAgICAgICAgICBwcm9wczIsXHJcbiAgICAgICAgICAgICAgICAgIHN0YXRlLFxyXG4gICAgICAgICAgICAgICAgICBjdHJsXHJcbiAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICk7XHJcbiAgfVxyXG4gIGlmIChzdGF0ZS5wYXVzZWQpIHtcclxuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXN1bWUpID0+IHtcclxuICAgICAgc3RhdGUucmVzdW1lUXVldWUuYWRkKHJlc3VtZSk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgY29uc3QgcmVzdWx0ID0gZ2V0Q29tYmluZWRSZXN1bHQoY3RybCwgYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpKTtcclxuICBpZiAobG9vcCAmJiByZXN1bHQuZmluaXNoZWQgJiYgIShpc0xvb3AgJiYgcmVzdWx0Lm5vb3ApKSB7XHJcbiAgICBjb25zdCBuZXh0UHJvcHMgPSBjcmVhdGVMb29wVXBkYXRlKHByb3BzLCBsb29wLCB0bzIpO1xyXG4gICAgaWYgKG5leHRQcm9wcykge1xyXG4gICAgICBwcmVwYXJlS2V5cyhjdHJsLCBbbmV4dFByb3BzXSk7XHJcbiAgICAgIHJldHVybiBmbHVzaFVwZGF0ZShjdHJsLCBuZXh0UHJvcHMsIHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuICBpZiAob25SZXNvbHZlKSB7XHJcbiAgICByYWY0LmJhdGNoZWRVcGRhdGVzKCgpID0+IG9uUmVzb2x2ZShyZXN1bHQsIGN0cmwsIGN0cmwuaXRlbSkpO1xyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0O1xyXG59XHJcbmZ1bmN0aW9uIGdldFNwcmluZ3MoY3RybCwgcHJvcHMpIHtcclxuICBjb25zdCBzcHJpbmdzID0geyAuLi5jdHJsLnNwcmluZ3MgfTtcclxuICBpZiAocHJvcHMpIHtcclxuICAgIGVhY2gzKHRvQXJyYXkzKHByb3BzKSwgKHByb3BzMikgPT4ge1xyXG4gICAgICBpZiAoaXM2LnVuZChwcm9wczIua2V5cykpIHtcclxuICAgICAgICBwcm9wczIgPSBjcmVhdGVVcGRhdGUocHJvcHMyKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoIWlzNi5vYmoocHJvcHMyLnRvKSkge1xyXG4gICAgICAgIHByb3BzMiA9IHsgLi4ucHJvcHMyLCB0bzogdm9pZCAwIH07XHJcbiAgICAgIH1cclxuICAgICAgcHJlcGFyZVNwcmluZ3Moc3ByaW5ncywgcHJvcHMyLCAoa2V5KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGNyZWF0ZVNwcmluZyhrZXkpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBzZXRTcHJpbmdzKGN0cmwsIHNwcmluZ3MpO1xyXG4gIHJldHVybiBzcHJpbmdzO1xyXG59XHJcbmZ1bmN0aW9uIHNldFNwcmluZ3MoY3RybCwgc3ByaW5ncykge1xyXG4gIGVhY2hQcm9wNChzcHJpbmdzLCAoc3ByaW5nLCBrZXkpID0+IHtcclxuICAgIGlmICghY3RybC5zcHJpbmdzW2tleV0pIHtcclxuICAgICAgY3RybC5zcHJpbmdzW2tleV0gPSBzcHJpbmc7XHJcbiAgICAgIGFkZEZsdWlkT2JzZXJ2ZXIyKHNwcmluZywgY3RybCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlU3ByaW5nKGtleSwgb2JzZXJ2ZXIpIHtcclxuICBjb25zdCBzcHJpbmcgPSBuZXcgU3ByaW5nVmFsdWUoKTtcclxuICBzcHJpbmcua2V5ID0ga2V5O1xyXG4gIGlmIChvYnNlcnZlcikge1xyXG4gICAgYWRkRmx1aWRPYnNlcnZlcjIoc3ByaW5nLCBvYnNlcnZlcik7XHJcbiAgfVxyXG4gIHJldHVybiBzcHJpbmc7XHJcbn1cclxuZnVuY3Rpb24gcHJlcGFyZVNwcmluZ3Moc3ByaW5ncywgcHJvcHMsIGNyZWF0ZSkge1xyXG4gIGlmIChwcm9wcy5rZXlzKSB7XHJcbiAgICBlYWNoMyhwcm9wcy5rZXlzLCAoa2V5KSA9PiB7XHJcbiAgICAgIGNvbnN0IHNwcmluZyA9IHNwcmluZ3Nba2V5XSB8fCAoc3ByaW5nc1trZXldID0gY3JlYXRlKGtleSkpO1xyXG4gICAgICBzcHJpbmdbXCJfcHJlcGFyZU5vZGVcIl0ocHJvcHMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIHByZXBhcmVLZXlzKGN0cmwsIHF1ZXVlKSB7XHJcbiAgZWFjaDMocXVldWUsIChwcm9wcykgPT4ge1xyXG4gICAgcHJlcGFyZVNwcmluZ3MoY3RybC5zcHJpbmdzLCBwcm9wcywgKGtleSkgPT4ge1xyXG4gICAgICByZXR1cm4gY3JlYXRlU3ByaW5nKGtleSwgY3RybCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufVxyXG5cclxuLy8gc3JjL1NwcmluZ0NvbnRleHQudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyB1c2VDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZU1lbW9PbmUgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxudmFyIFNwcmluZ0NvbnRleHQgPSAoe1xyXG4gIGNoaWxkcmVuLFxyXG4gIC4uLnByb3BzXHJcbn0pID0+IHtcclxuICBjb25zdCBpbmhlcml0ZWQgPSB1c2VDb250ZXh0KGN0eCk7XHJcbiAgY29uc3QgcGF1c2UgPSBwcm9wcy5wYXVzZSB8fCAhIWluaGVyaXRlZC5wYXVzZSwgaW1tZWRpYXRlID0gcHJvcHMuaW1tZWRpYXRlIHx8ICEhaW5oZXJpdGVkLmltbWVkaWF0ZTtcclxuICBwcm9wcyA9IHVzZU1lbW9PbmUoKCkgPT4gKHsgcGF1c2UsIGltbWVkaWF0ZSB9KSwgW3BhdXNlLCBpbW1lZGlhdGVdKTtcclxuICBjb25zdCB7IFByb3ZpZGVyIH0gPSBjdHg7XHJcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFByb3ZpZGVyLCB7IHZhbHVlOiBwcm9wcyB9LCBjaGlsZHJlbik7XHJcbn07XHJcbnZhciBjdHggPSBtYWtlQ29udGV4dChTcHJpbmdDb250ZXh0LCB7fSk7XHJcblNwcmluZ0NvbnRleHQuUHJvdmlkZXIgPSBjdHguUHJvdmlkZXI7XHJcblNwcmluZ0NvbnRleHQuQ29uc3VtZXIgPSBjdHguQ29uc3VtZXI7XHJcbmZ1bmN0aW9uIG1ha2VDb250ZXh0KHRhcmdldCwgaW5pdCkge1xyXG4gIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBSZWFjdC5jcmVhdGVDb250ZXh0KGluaXQpKTtcclxuICB0YXJnZXQuUHJvdmlkZXIuX2NvbnRleHQgPSB0YXJnZXQ7XHJcbiAgdGFyZ2V0LkNvbnN1bWVyLl9jb250ZXh0ID0gdGFyZ2V0O1xyXG4gIHJldHVybiB0YXJnZXQ7XHJcbn1cclxuXHJcbi8vIHNyYy9TcHJpbmdSZWYudHNcclxuaW1wb3J0IHsgZWFjaCBhcyBlYWNoNCwgaXMgYXMgaXM3LCBkZXByZWNhdGVEaXJlY3RDYWxsIH0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcbnZhciBTcHJpbmdSZWYgPSAoKSA9PiB7XHJcbiAgY29uc3QgY3VycmVudCA9IFtdO1xyXG4gIGNvbnN0IFNwcmluZ1JlZjIgPSBmdW5jdGlvbihwcm9wcykge1xyXG4gICAgZGVwcmVjYXRlRGlyZWN0Q2FsbCgpO1xyXG4gICAgY29uc3QgcmVzdWx0cyA9IFtdO1xyXG4gICAgZWFjaDQoY3VycmVudCwgKGN0cmwsIGkpID0+IHtcclxuICAgICAgaWYgKGlzNy51bmQocHJvcHMpKSB7XHJcbiAgICAgICAgcmVzdWx0cy5wdXNoKGN0cmwuc3RhcnQoKSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc3QgdXBkYXRlMiA9IF9nZXRQcm9wcyhwcm9wcywgY3RybCwgaSk7XHJcbiAgICAgICAgaWYgKHVwZGF0ZTIpIHtcclxuICAgICAgICAgIHJlc3VsdHMucHVzaChjdHJsLnN0YXJ0KHVwZGF0ZTIpKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgfTtcclxuICBTcHJpbmdSZWYyLmN1cnJlbnQgPSBjdXJyZW50O1xyXG4gIFNwcmluZ1JlZjIuYWRkID0gZnVuY3Rpb24oY3RybCkge1xyXG4gICAgaWYgKCFjdXJyZW50LmluY2x1ZGVzKGN0cmwpKSB7XHJcbiAgICAgIGN1cnJlbnQucHVzaChjdHJsKTtcclxuICAgIH1cclxuICB9O1xyXG4gIFNwcmluZ1JlZjIuZGVsZXRlID0gZnVuY3Rpb24oY3RybCkge1xyXG4gICAgY29uc3QgaSA9IGN1cnJlbnQuaW5kZXhPZihjdHJsKTtcclxuICAgIGlmICh+aSlcclxuICAgICAgY3VycmVudC5zcGxpY2UoaSwgMSk7XHJcbiAgfTtcclxuICBTcHJpbmdSZWYyLnBhdXNlID0gZnVuY3Rpb24oKSB7XHJcbiAgICBlYWNoNChjdXJyZW50LCAoY3RybCkgPT4gY3RybC5wYXVzZSguLi5hcmd1bWVudHMpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcbiAgU3ByaW5nUmVmMi5yZXN1bWUgPSBmdW5jdGlvbigpIHtcclxuICAgIGVhY2g0KGN1cnJlbnQsIChjdHJsKSA9PiBjdHJsLnJlc3VtZSguLi5hcmd1bWVudHMpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcbiAgU3ByaW5nUmVmMi5zZXQgPSBmdW5jdGlvbih2YWx1ZXMpIHtcclxuICAgIGVhY2g0KGN1cnJlbnQsIChjdHJsLCBpKSA9PiB7XHJcbiAgICAgIGNvbnN0IHVwZGF0ZTIgPSBpczcuZnVuKHZhbHVlcykgPyB2YWx1ZXMoaSwgY3RybCkgOiB2YWx1ZXM7XHJcbiAgICAgIGlmICh1cGRhdGUyKSB7XHJcbiAgICAgICAgY3RybC5zZXQodXBkYXRlMik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcbiAgU3ByaW5nUmVmMi5zdGFydCA9IGZ1bmN0aW9uKHByb3BzKSB7XHJcbiAgICBjb25zdCByZXN1bHRzID0gW107XHJcbiAgICBlYWNoNChjdXJyZW50LCAoY3RybCwgaSkgPT4ge1xyXG4gICAgICBpZiAoaXM3LnVuZChwcm9wcykpIHtcclxuICAgICAgICByZXN1bHRzLnB1c2goY3RybC5zdGFydCgpKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCB1cGRhdGUyID0gdGhpcy5fZ2V0UHJvcHMocHJvcHMsIGN0cmwsIGkpO1xyXG4gICAgICAgIGlmICh1cGRhdGUyKSB7XHJcbiAgICAgICAgICByZXN1bHRzLnB1c2goY3RybC5zdGFydCh1cGRhdGUyKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiByZXN1bHRzO1xyXG4gIH07XHJcbiAgU3ByaW5nUmVmMi5zdG9wID0gZnVuY3Rpb24oKSB7XHJcbiAgICBlYWNoNChjdXJyZW50LCAoY3RybCkgPT4gY3RybC5zdG9wKC4uLmFyZ3VtZW50cykpO1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfTtcclxuICBTcHJpbmdSZWYyLnVwZGF0ZSA9IGZ1bmN0aW9uKHByb3BzKSB7XHJcbiAgICBlYWNoNChjdXJyZW50LCAoY3RybCwgaSkgPT4gY3RybC51cGRhdGUodGhpcy5fZ2V0UHJvcHMocHJvcHMsIGN0cmwsIGkpKSk7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9O1xyXG4gIGNvbnN0IF9nZXRQcm9wcyA9IGZ1bmN0aW9uKGFyZywgY3RybCwgaW5kZXgpIHtcclxuICAgIHJldHVybiBpczcuZnVuKGFyZykgPyBhcmcoaW5kZXgsIGN0cmwpIDogYXJnO1xyXG4gIH07XHJcbiAgU3ByaW5nUmVmMi5fZ2V0UHJvcHMgPSBfZ2V0UHJvcHM7XHJcbiAgcmV0dXJuIFNwcmluZ1JlZjI7XHJcbn07XHJcblxyXG4vLyBzcmMvaG9va3MvdXNlU3ByaW5ncy50c1xyXG5mdW5jdGlvbiB1c2VTcHJpbmdzKGxlbmd0aCwgcHJvcHMsIGRlcHMpIHtcclxuICBjb25zdCBwcm9wc0ZuID0gaXM4LmZ1bihwcm9wcykgJiYgcHJvcHM7XHJcbiAgaWYgKHByb3BzRm4gJiYgIWRlcHMpXHJcbiAgICBkZXBzID0gW107XHJcbiAgY29uc3QgcmVmID0gdXNlTWVtbyhcclxuICAgICgpID0+IHByb3BzRm4gfHwgYXJndW1lbnRzLmxlbmd0aCA9PSAzID8gU3ByaW5nUmVmKCkgOiB2b2lkIDAsXHJcbiAgICBbXVxyXG4gICk7XHJcbiAgY29uc3QgbGF5b3V0SWQgPSB1c2VSZWYoMCk7XHJcbiAgY29uc3QgZm9yY2VVcGRhdGUgPSB1c2VGb3JjZVVwZGF0ZSgpO1xyXG4gIGNvbnN0IHN0YXRlID0gdXNlTWVtbyhcclxuICAgICgpID0+ICh7XHJcbiAgICAgIGN0cmxzOiBbXSxcclxuICAgICAgcXVldWU6IFtdLFxyXG4gICAgICBmbHVzaChjdHJsLCB1cGRhdGVzMikge1xyXG4gICAgICAgIGNvbnN0IHNwcmluZ3MyID0gZ2V0U3ByaW5ncyhjdHJsLCB1cGRhdGVzMik7XHJcbiAgICAgICAgY29uc3QgY2FuRmx1c2hTeW5jID0gbGF5b3V0SWQuY3VycmVudCA+IDAgJiYgIXN0YXRlLnF1ZXVlLmxlbmd0aCAmJiAhT2JqZWN0LmtleXMoc3ByaW5nczIpLnNvbWUoKGtleSkgPT4gIWN0cmwuc3ByaW5nc1trZXldKTtcclxuICAgICAgICByZXR1cm4gY2FuRmx1c2hTeW5jID8gZmx1c2hVcGRhdGVRdWV1ZShjdHJsLCB1cGRhdGVzMikgOiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgc2V0U3ByaW5ncyhjdHJsLCBzcHJpbmdzMik7XHJcbiAgICAgICAgICBzdGF0ZS5xdWV1ZS5wdXNoKCgpID0+IHtcclxuICAgICAgICAgICAgcmVzb2x2ZShmbHVzaFVwZGF0ZVF1ZXVlKGN0cmwsIHVwZGF0ZXMyKSk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGZvcmNlVXBkYXRlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH0pLFxyXG4gICAgW11cclxuICApO1xyXG4gIGNvbnN0IGN0cmxzID0gdXNlUmVmKFsuLi5zdGF0ZS5jdHJsc10pO1xyXG4gIGNvbnN0IHVwZGF0ZXMgPSBbXTtcclxuICBjb25zdCBwcmV2TGVuZ3RoID0gdXNlUHJldihsZW5ndGgpIHx8IDA7XHJcbiAgdXNlTWVtbygoKSA9PiB7XHJcbiAgICBlYWNoNShjdHJscy5jdXJyZW50LnNsaWNlKGxlbmd0aCwgcHJldkxlbmd0aCksIChjdHJsKSA9PiB7XHJcbiAgICAgIGRldGFjaFJlZnMoY3RybCwgcmVmKTtcclxuICAgICAgY3RybC5zdG9wKHRydWUpO1xyXG4gICAgfSk7XHJcbiAgICBjdHJscy5jdXJyZW50Lmxlbmd0aCA9IGxlbmd0aDtcclxuICAgIGRlY2xhcmVVcGRhdGVzKHByZXZMZW5ndGgsIGxlbmd0aCk7XHJcbiAgfSwgW2xlbmd0aF0pO1xyXG4gIHVzZU1lbW8oKCkgPT4ge1xyXG4gICAgZGVjbGFyZVVwZGF0ZXMoMCwgTWF0aC5taW4ocHJldkxlbmd0aCwgbGVuZ3RoKSk7XHJcbiAgfSwgZGVwcyk7XHJcbiAgZnVuY3Rpb24gZGVjbGFyZVVwZGF0ZXMoc3RhcnRJbmRleCwgZW5kSW5kZXgpIHtcclxuICAgIGZvciAobGV0IGkgPSBzdGFydEluZGV4OyBpIDwgZW5kSW5kZXg7IGkrKykge1xyXG4gICAgICBjb25zdCBjdHJsID0gY3RybHMuY3VycmVudFtpXSB8fCAoY3RybHMuY3VycmVudFtpXSA9IG5ldyBDb250cm9sbGVyKG51bGwsIHN0YXRlLmZsdXNoKSk7XHJcbiAgICAgIGNvbnN0IHVwZGF0ZTIgPSBwcm9wc0ZuID8gcHJvcHNGbihpLCBjdHJsKSA6IHByb3BzW2ldO1xyXG4gICAgICBpZiAodXBkYXRlMikge1xyXG4gICAgICAgIHVwZGF0ZXNbaV0gPSBkZWNsYXJlVXBkYXRlKHVwZGF0ZTIpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGNvbnN0IHNwcmluZ3MgPSBjdHJscy5jdXJyZW50Lm1hcCgoY3RybCwgaSkgPT4gZ2V0U3ByaW5ncyhjdHJsLCB1cGRhdGVzW2ldKSk7XHJcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQyKFNwcmluZ0NvbnRleHQpO1xyXG4gIGNvbnN0IHByZXZDb250ZXh0ID0gdXNlUHJldihjb250ZXh0KTtcclxuICBjb25zdCBoYXNDb250ZXh0ID0gY29udGV4dCAhPT0gcHJldkNvbnRleHQgJiYgaGFzUHJvcHMoY29udGV4dCk7XHJcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdDIoKCkgPT4ge1xyXG4gICAgbGF5b3V0SWQuY3VycmVudCsrO1xyXG4gICAgc3RhdGUuY3RybHMgPSBjdHJscy5jdXJyZW50O1xyXG4gICAgY29uc3QgeyBxdWV1ZSB9ID0gc3RhdGU7XHJcbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XHJcbiAgICAgIHN0YXRlLnF1ZXVlID0gW107XHJcbiAgICAgIGVhY2g1KHF1ZXVlLCAoY2IpID0+IGNiKCkpO1xyXG4gICAgfVxyXG4gICAgZWFjaDUoY3RybHMuY3VycmVudCwgKGN0cmwsIGkpID0+IHtcclxuICAgICAgcmVmPy5hZGQoY3RybCk7XHJcbiAgICAgIGlmIChoYXNDb250ZXh0KSB7XHJcbiAgICAgICAgY3RybC5zdGFydCh7IGRlZmF1bHQ6IGNvbnRleHQgfSk7XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgdXBkYXRlMiA9IHVwZGF0ZXNbaV07XHJcbiAgICAgIGlmICh1cGRhdGUyKSB7XHJcbiAgICAgICAgcmVwbGFjZVJlZihjdHJsLCB1cGRhdGUyLnJlZik7XHJcbiAgICAgICAgaWYgKGN0cmwucmVmKSB7XHJcbiAgICAgICAgICBjdHJsLnF1ZXVlLnB1c2godXBkYXRlMik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGN0cmwuc3RhcnQodXBkYXRlMik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9KTtcclxuICB1c2VPbmNlKCgpID0+ICgpID0+IHtcclxuICAgIGVhY2g1KHN0YXRlLmN0cmxzLCAoY3RybCkgPT4gY3RybC5zdG9wKHRydWUpKTtcclxuICB9KTtcclxuICBjb25zdCB2YWx1ZXMgPSBzcHJpbmdzLm1hcCgoeCkgPT4gKHsgLi4ueCB9KSk7XHJcbiAgcmV0dXJuIHJlZiA/IFt2YWx1ZXMsIHJlZl0gOiB2YWx1ZXM7XHJcbn1cclxuXHJcbi8vIHNyYy9ob29rcy91c2VTcHJpbmcudHNcclxuZnVuY3Rpb24gdXNlU3ByaW5nKHByb3BzLCBkZXBzKSB7XHJcbiAgY29uc3QgaXNGbiA9IGlzOS5mdW4ocHJvcHMpO1xyXG4gIGNvbnN0IFtbdmFsdWVzXSwgcmVmXSA9IHVzZVNwcmluZ3MoXHJcbiAgICAxLFxyXG4gICAgaXNGbiA/IHByb3BzIDogW3Byb3BzXSxcclxuICAgIGlzRm4gPyBkZXBzIHx8IFtdIDogZGVwc1xyXG4gICk7XHJcbiAgcmV0dXJuIGlzRm4gfHwgYXJndW1lbnRzLmxlbmd0aCA9PSAyID8gW3ZhbHVlcywgcmVmXSA6IHZhbHVlcztcclxufVxyXG5cclxuLy8gc3JjL2hvb2tzL3VzZVNwcmluZ1JlZi50c1xyXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG52YXIgaW5pdFNwcmluZ1JlZiA9ICgpID0+IFNwcmluZ1JlZigpO1xyXG52YXIgdXNlU3ByaW5nUmVmID0gKCkgPT4gdXNlU3RhdGUoaW5pdFNwcmluZ1JlZilbMF07XHJcblxyXG4vLyBzcmMvaG9va3MvdXNlU3ByaW5nVmFsdWUudHNcclxuaW1wb3J0IHsgdXNlQ29uc3RhbnQsIHVzZU9uY2UgYXMgdXNlT25jZTIgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxudmFyIHVzZVNwcmluZ1ZhbHVlID0gKGluaXRpYWwsIHByb3BzKSA9PiB7XHJcbiAgY29uc3Qgc3ByaW5nVmFsdWUgPSB1c2VDb25zdGFudCgoKSA9PiBuZXcgU3ByaW5nVmFsdWUoaW5pdGlhbCwgcHJvcHMpKTtcclxuICB1c2VPbmNlMigoKSA9PiAoKSA9PiB7XHJcbiAgICBzcHJpbmdWYWx1ZS5zdG9wKCk7XHJcbiAgfSk7XHJcbiAgcmV0dXJuIHNwcmluZ1ZhbHVlO1xyXG59O1xyXG5cclxuLy8gc3JjL2hvb2tzL3VzZVRyYWlsLnRzXHJcbmltcG9ydCB7IGVhY2ggYXMgZWFjaDYsIGlzIGFzIGlzMTAsIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgYXMgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdDMgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuZnVuY3Rpb24gdXNlVHJhaWwobGVuZ3RoLCBwcm9wc0FyZywgZGVwcykge1xyXG4gIGNvbnN0IHByb3BzRm4gPSBpczEwLmZ1bihwcm9wc0FyZykgJiYgcHJvcHNBcmc7XHJcbiAgaWYgKHByb3BzRm4gJiYgIWRlcHMpXHJcbiAgICBkZXBzID0gW107XHJcbiAgbGV0IHJldmVyc2UgPSB0cnVlO1xyXG4gIGxldCBwYXNzZWRSZWYgPSB2b2lkIDA7XHJcbiAgY29uc3QgcmVzdWx0ID0gdXNlU3ByaW5ncyhcclxuICAgIGxlbmd0aCxcclxuICAgIChpLCBjdHJsKSA9PiB7XHJcbiAgICAgIGNvbnN0IHByb3BzID0gcHJvcHNGbiA/IHByb3BzRm4oaSwgY3RybCkgOiBwcm9wc0FyZztcclxuICAgICAgcGFzc2VkUmVmID0gcHJvcHMucmVmO1xyXG4gICAgICByZXZlcnNlID0gcmV2ZXJzZSAmJiBwcm9wcy5yZXZlcnNlO1xyXG4gICAgICByZXR1cm4gcHJvcHM7XHJcbiAgICB9LFxyXG4gICAgLy8gRW5zdXJlIHRoZSBwcm9wcyBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbiBubyBkZXBzIGV4aXN0LlxyXG4gICAgLy8gVGhpcyB3b3JrcyBhcm91bmQgdGhlIDMgYXJndW1lbnQgcnVsZS5cclxuICAgIGRlcHMgfHwgW3t9XVxyXG4gICk7XHJcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdDMoKCkgPT4ge1xyXG4gICAgZWFjaDYocmVzdWx0WzFdLmN1cnJlbnQsIChjdHJsLCBpKSA9PiB7XHJcbiAgICAgIGNvbnN0IHBhcmVudCA9IHJlc3VsdFsxXS5jdXJyZW50W2kgKyAocmV2ZXJzZSA/IDEgOiAtMSldO1xyXG4gICAgICByZXBsYWNlUmVmKGN0cmwsIHBhc3NlZFJlZik7XHJcbiAgICAgIGlmIChjdHJsLnJlZikge1xyXG4gICAgICAgIGlmIChwYXJlbnQpIHtcclxuICAgICAgICAgIGN0cmwudXBkYXRlKHsgdG86IHBhcmVudC5zcHJpbmdzIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHBhcmVudCkge1xyXG4gICAgICAgIGN0cmwuc3RhcnQoeyB0bzogcGFyZW50LnNwcmluZ3MgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY3RybC5zdGFydCgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9LCBkZXBzKTtcclxuICBpZiAocHJvcHNGbiB8fCBhcmd1bWVudHMubGVuZ3RoID09IDMpIHtcclxuICAgIGNvbnN0IHJlZiA9IHBhc3NlZFJlZiA/PyByZXN1bHRbMV07XHJcbiAgICByZWZbXCJfZ2V0UHJvcHNcIl0gPSAocHJvcHNBcmcyLCBjdHJsLCBpKSA9PiB7XHJcbiAgICAgIGNvbnN0IHByb3BzID0gaXMxMC5mdW4ocHJvcHNBcmcyKSA/IHByb3BzQXJnMihpLCBjdHJsKSA6IHByb3BzQXJnMjtcclxuICAgICAgaWYgKHByb3BzKSB7XHJcbiAgICAgICAgY29uc3QgcGFyZW50ID0gcmVmLmN1cnJlbnRbaSArIChwcm9wcy5yZXZlcnNlID8gMSA6IC0xKV07XHJcbiAgICAgICAgaWYgKHBhcmVudClcclxuICAgICAgICAgIHByb3BzLnRvID0gcGFyZW50LnNwcmluZ3M7XHJcbiAgICAgICAgcmV0dXJuIHByb3BzO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbiAgcmV0dXJuIHJlc3VsdFswXTtcclxufVxyXG5cclxuLy8gc3JjL2hvb2tzL3VzZVRyYW5zaXRpb24udHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0MiBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlQ29udGV4dCBhcyB1c2VDb250ZXh0MywgdXNlUmVmIGFzIHVzZVJlZjIsIHVzZU1lbW8gYXMgdXNlTWVtbzIgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHtcclxuICBpcyBhcyBpczExLFxyXG4gIHRvQXJyYXkgYXMgdG9BcnJheTQsXHJcbiAgdXNlRm9yY2VVcGRhdGUgYXMgdXNlRm9yY2VVcGRhdGUyLFxyXG4gIHVzZU9uY2UgYXMgdXNlT25jZTMsXHJcbiAgdXNlUHJldiBhcyB1c2VQcmV2MixcclxuICBlYWNoIGFzIGVhY2g3LFxyXG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgYXMgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdDRcclxufSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuZnVuY3Rpb24gdXNlVHJhbnNpdGlvbihkYXRhLCBwcm9wcywgZGVwcykge1xyXG4gIGNvbnN0IHByb3BzRm4gPSBpczExLmZ1bihwcm9wcykgJiYgcHJvcHM7XHJcbiAgY29uc3Qge1xyXG4gICAgcmVzZXQsXHJcbiAgICBzb3J0LFxyXG4gICAgdHJhaWwgPSAwLFxyXG4gICAgZXhwaXJlcyA9IHRydWUsXHJcbiAgICBleGl0QmVmb3JlRW50ZXIgPSBmYWxzZSxcclxuICAgIG9uRGVzdHJveWVkLFxyXG4gICAgcmVmOiBwcm9wc1JlZixcclxuICAgIGNvbmZpZzogcHJvcHNDb25maWdcclxuICB9ID0gcHJvcHNGbiA/IHByb3BzRm4oKSA6IHByb3BzO1xyXG4gIGNvbnN0IHJlZiA9IHVzZU1lbW8yKFxyXG4gICAgKCkgPT4gcHJvcHNGbiB8fCBhcmd1bWVudHMubGVuZ3RoID09IDMgPyBTcHJpbmdSZWYoKSA6IHZvaWQgMCxcclxuICAgIFtdXHJcbiAgKTtcclxuICBjb25zdCBpdGVtcyA9IHRvQXJyYXk0KGRhdGEpO1xyXG4gIGNvbnN0IHRyYW5zaXRpb25zID0gW107XHJcbiAgY29uc3QgdXNlZFRyYW5zaXRpb25zID0gdXNlUmVmMihudWxsKTtcclxuICBjb25zdCBwcmV2VHJhbnNpdGlvbnMgPSByZXNldCA/IG51bGwgOiB1c2VkVHJhbnNpdGlvbnMuY3VycmVudDtcclxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0NCgoKSA9PiB7XHJcbiAgICB1c2VkVHJhbnNpdGlvbnMuY3VycmVudCA9IHRyYW5zaXRpb25zO1xyXG4gIH0pO1xyXG4gIHVzZU9uY2UzKCgpID0+IHtcclxuICAgIGVhY2g3KHRyYW5zaXRpb25zLCAodCkgPT4ge1xyXG4gICAgICByZWY/LmFkZCh0LmN0cmwpO1xyXG4gICAgICB0LmN0cmwucmVmID0gcmVmO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBlYWNoNyh1c2VkVHJhbnNpdGlvbnMuY3VycmVudCwgKHQpID0+IHtcclxuICAgICAgICBpZiAodC5leHBpcmVkKSB7XHJcbiAgICAgICAgICBjbGVhclRpbWVvdXQodC5leHBpcmF0aW9uSWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBkZXRhY2hSZWZzKHQuY3RybCwgcmVmKTtcclxuICAgICAgICB0LmN0cmwuc3RvcCh0cnVlKTtcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG4gIH0pO1xyXG4gIGNvbnN0IGtleXMgPSBnZXRLZXlzKGl0ZW1zLCBwcm9wc0ZuID8gcHJvcHNGbigpIDogcHJvcHMsIHByZXZUcmFuc2l0aW9ucyk7XHJcbiAgY29uc3QgZXhwaXJlZCA9IHJlc2V0ICYmIHVzZWRUcmFuc2l0aW9ucy5jdXJyZW50IHx8IFtdO1xyXG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3Q0KFxyXG4gICAgKCkgPT4gZWFjaDcoZXhwaXJlZCwgKHsgY3RybCwgaXRlbSwga2V5IH0pID0+IHtcclxuICAgICAgZGV0YWNoUmVmcyhjdHJsLCByZWYpO1xyXG4gICAgICBjYWxsUHJvcChvbkRlc3Ryb3llZCwgaXRlbSwga2V5KTtcclxuICAgIH0pXHJcbiAgKTtcclxuICBjb25zdCByZXVzZWQgPSBbXTtcclxuICBpZiAocHJldlRyYW5zaXRpb25zKVxyXG4gICAgZWFjaDcocHJldlRyYW5zaXRpb25zLCAodCwgaSkgPT4ge1xyXG4gICAgICBpZiAodC5leHBpcmVkKSB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHQuZXhwaXJhdGlvbklkKTtcclxuICAgICAgICBleHBpcmVkLnB1c2godCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaSA9IHJldXNlZFtpXSA9IGtleXMuaW5kZXhPZih0LmtleSk7XHJcbiAgICAgICAgaWYgKH5pKVxyXG4gICAgICAgICAgdHJhbnNpdGlvbnNbaV0gPSB0O1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICBlYWNoNyhpdGVtcywgKGl0ZW0sIGkpID0+IHtcclxuICAgIGlmICghdHJhbnNpdGlvbnNbaV0pIHtcclxuICAgICAgdHJhbnNpdGlvbnNbaV0gPSB7XHJcbiAgICAgICAga2V5OiBrZXlzW2ldLFxyXG4gICAgICAgIGl0ZW0sXHJcbiAgICAgICAgcGhhc2U6IFwibW91bnRcIiAvKiBNT1VOVCAqLyxcclxuICAgICAgICBjdHJsOiBuZXcgQ29udHJvbGxlcigpXHJcbiAgICAgIH07XHJcbiAgICAgIHRyYW5zaXRpb25zW2ldLmN0cmwuaXRlbSA9IGl0ZW07XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgaWYgKHJldXNlZC5sZW5ndGgpIHtcclxuICAgIGxldCBpID0gLTE7XHJcbiAgICBjb25zdCB7IGxlYXZlIH0gPSBwcm9wc0ZuID8gcHJvcHNGbigpIDogcHJvcHM7XHJcbiAgICBlYWNoNyhyZXVzZWQsIChrZXlJbmRleCwgcHJldkluZGV4KSA9PiB7XHJcbiAgICAgIGNvbnN0IHQgPSBwcmV2VHJhbnNpdGlvbnNbcHJldkluZGV4XTtcclxuICAgICAgaWYgKH5rZXlJbmRleCkge1xyXG4gICAgICAgIGkgPSB0cmFuc2l0aW9ucy5pbmRleE9mKHQpO1xyXG4gICAgICAgIHRyYW5zaXRpb25zW2ldID0geyAuLi50LCBpdGVtOiBpdGVtc1trZXlJbmRleF0gfTtcclxuICAgICAgfSBlbHNlIGlmIChsZWF2ZSkge1xyXG4gICAgICAgIHRyYW5zaXRpb25zLnNwbGljZSgrK2ksIDAsIHQpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgaWYgKGlzMTEuZnVuKHNvcnQpKSB7XHJcbiAgICB0cmFuc2l0aW9ucy5zb3J0KChhLCBiKSA9PiBzb3J0KGEuaXRlbSwgYi5pdGVtKSk7XHJcbiAgfVxyXG4gIGxldCBkZWxheSA9IC10cmFpbDtcclxuICBjb25zdCBmb3JjZVVwZGF0ZSA9IHVzZUZvcmNlVXBkYXRlMigpO1xyXG4gIGNvbnN0IGRlZmF1bHRQcm9wcyA9IGdldERlZmF1bHRQcm9wcyhwcm9wcyk7XHJcbiAgY29uc3QgY2hhbmdlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XHJcbiAgY29uc3QgZXhpdGluZ1RyYW5zaXRpb25zID0gdXNlUmVmMigvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpKTtcclxuICBjb25zdCBmb3JjZUNoYW5nZSA9IHVzZVJlZjIoZmFsc2UpO1xyXG4gIGVhY2g3KHRyYW5zaXRpb25zLCAodCwgaSkgPT4ge1xyXG4gICAgY29uc3Qga2V5ID0gdC5rZXk7XHJcbiAgICBjb25zdCBwcmV2UGhhc2UgPSB0LnBoYXNlO1xyXG4gICAgY29uc3QgcCA9IHByb3BzRm4gPyBwcm9wc0ZuKCkgOiBwcm9wcztcclxuICAgIGxldCB0bzI7XHJcbiAgICBsZXQgcGhhc2U7XHJcbiAgICBjb25zdCBwcm9wc0RlbGF5ID0gY2FsbFByb3AocC5kZWxheSB8fCAwLCBrZXkpO1xyXG4gICAgaWYgKHByZXZQaGFzZSA9PSBcIm1vdW50XCIgLyogTU9VTlQgKi8pIHtcclxuICAgICAgdG8yID0gcC5lbnRlcjtcclxuICAgICAgcGhhc2UgPSBcImVudGVyXCIgLyogRU5URVIgKi87XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zdCBpc0xlYXZlID0ga2V5cy5pbmRleE9mKGtleSkgPCAwO1xyXG4gICAgICBpZiAocHJldlBoYXNlICE9IFwibGVhdmVcIiAvKiBMRUFWRSAqLykge1xyXG4gICAgICAgIGlmIChpc0xlYXZlKSB7XHJcbiAgICAgICAgICB0bzIgPSBwLmxlYXZlO1xyXG4gICAgICAgICAgcGhhc2UgPSBcImxlYXZlXCIgLyogTEVBVkUgKi87XHJcbiAgICAgICAgfSBlbHNlIGlmICh0bzIgPSBwLnVwZGF0ZSkge1xyXG4gICAgICAgICAgcGhhc2UgPSBcInVwZGF0ZVwiIC8qIFVQREFURSAqLztcclxuICAgICAgICB9IGVsc2VcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgfSBlbHNlIGlmICghaXNMZWF2ZSkge1xyXG4gICAgICAgIHRvMiA9IHAuZW50ZXI7XHJcbiAgICAgICAgcGhhc2UgPSBcImVudGVyXCIgLyogRU5URVIgKi87XHJcbiAgICAgIH0gZWxzZVxyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRvMiA9IGNhbGxQcm9wKHRvMiwgdC5pdGVtLCBpKTtcclxuICAgIHRvMiA9IGlzMTEub2JqKHRvMikgPyBpbmZlclRvKHRvMikgOiB7IHRvOiB0bzIgfTtcclxuICAgIGlmICghdG8yLmNvbmZpZykge1xyXG4gICAgICBjb25zdCBjb25maWcyID0gcHJvcHNDb25maWcgfHwgZGVmYXVsdFByb3BzLmNvbmZpZztcclxuICAgICAgdG8yLmNvbmZpZyA9IGNhbGxQcm9wKGNvbmZpZzIsIHQuaXRlbSwgaSwgcGhhc2UpO1xyXG4gICAgfVxyXG4gICAgZGVsYXkgKz0gdHJhaWw7XHJcbiAgICBjb25zdCBwYXlsb2FkID0ge1xyXG4gICAgICAuLi5kZWZhdWx0UHJvcHMsXHJcbiAgICAgIC8vIHdlIG5lZWQgdG8gYWRkIG91ciBwcm9wcy5kZWxheSB2YWx1ZSB5b3UgaGVyZS5cclxuICAgICAgZGVsYXk6IHByb3BzRGVsYXkgKyBkZWxheSxcclxuICAgICAgcmVmOiBwcm9wc1JlZixcclxuICAgICAgaW1tZWRpYXRlOiBwLmltbWVkaWF0ZSxcclxuICAgICAgLy8gVGhpcyBwcmV2ZW50cyBpbXBsaWVkIHJlc2V0cy5cclxuICAgICAgcmVzZXQ6IGZhbHNlLFxyXG4gICAgICAvLyBNZXJnZSBhbnkgcGhhc2Utc3BlY2lmaWMgcHJvcHMuXHJcbiAgICAgIC4uLnRvMlxyXG4gICAgfTtcclxuICAgIGlmIChwaGFzZSA9PSBcImVudGVyXCIgLyogRU5URVIgKi8gJiYgaXMxMS51bmQocGF5bG9hZC5mcm9tKSkge1xyXG4gICAgICBjb25zdCBwMiA9IHByb3BzRm4gPyBwcm9wc0ZuKCkgOiBwcm9wcztcclxuICAgICAgY29uc3QgZnJvbSA9IGlzMTEudW5kKHAyLmluaXRpYWwpIHx8IHByZXZUcmFuc2l0aW9ucyA/IHAyLmZyb20gOiBwMi5pbml0aWFsO1xyXG4gICAgICBwYXlsb2FkLmZyb20gPSBjYWxsUHJvcChmcm9tLCB0Lml0ZW0sIGkpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgeyBvblJlc29sdmUgfSA9IHBheWxvYWQ7XHJcbiAgICBwYXlsb2FkLm9uUmVzb2x2ZSA9IChyZXN1bHQpID0+IHtcclxuICAgICAgY2FsbFByb3Aob25SZXNvbHZlLCByZXN1bHQpO1xyXG4gICAgICBjb25zdCB0cmFuc2l0aW9uczIgPSB1c2VkVHJhbnNpdGlvbnMuY3VycmVudDtcclxuICAgICAgY29uc3QgdDIgPSB0cmFuc2l0aW9uczIuZmluZCgodDMpID0+IHQzLmtleSA9PT0ga2V5KTtcclxuICAgICAgaWYgKCF0MilcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIGlmIChyZXN1bHQuY2FuY2VsbGVkICYmIHQyLnBoYXNlICE9IFwidXBkYXRlXCIgLyogVVBEQVRFICovKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0Mi5jdHJsLmlkbGUpIHtcclxuICAgICAgICBjb25zdCBpZGxlID0gdHJhbnNpdGlvbnMyLmV2ZXJ5KCh0MykgPT4gdDMuY3RybC5pZGxlKTtcclxuICAgICAgICBpZiAodDIucGhhc2UgPT0gXCJsZWF2ZVwiIC8qIExFQVZFICovKSB7XHJcbiAgICAgICAgICBjb25zdCBleHBpcnkgPSBjYWxsUHJvcChleHBpcmVzLCB0Mi5pdGVtKTtcclxuICAgICAgICAgIGlmIChleHBpcnkgIT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4cGlyeU1zID0gZXhwaXJ5ID09PSB0cnVlID8gMCA6IGV4cGlyeTtcclxuICAgICAgICAgICAgdDIuZXhwaXJlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmICghaWRsZSAmJiBleHBpcnlNcyA+IDApIHtcclxuICAgICAgICAgICAgICBpZiAoZXhwaXJ5TXMgPD0gMjE0NzQ4MzY0NylcclxuICAgICAgICAgICAgICAgIHQyLmV4cGlyYXRpb25JZCA9IHNldFRpbWVvdXQoZm9yY2VVcGRhdGUsIGV4cGlyeU1zKTtcclxuICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlkbGUgJiYgdHJhbnNpdGlvbnMyLnNvbWUoKHQzKSA9PiB0My5leHBpcmVkKSkge1xyXG4gICAgICAgICAgZXhpdGluZ1RyYW5zaXRpb25zLmN1cnJlbnQuZGVsZXRlKHQyKTtcclxuICAgICAgICAgIGlmIChleGl0QmVmb3JlRW50ZXIpIHtcclxuICAgICAgICAgICAgZm9yY2VDaGFuZ2UuY3VycmVudCA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBmb3JjZVVwZGF0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIGNvbnN0IHNwcmluZ3MgPSBnZXRTcHJpbmdzKHQuY3RybCwgcGF5bG9hZCk7XHJcbiAgICBpZiAocGhhc2UgPT09IFwibGVhdmVcIiAvKiBMRUFWRSAqLyAmJiBleGl0QmVmb3JlRW50ZXIpIHtcclxuICAgICAgZXhpdGluZ1RyYW5zaXRpb25zLmN1cnJlbnQuc2V0KHQsIHsgcGhhc2UsIHNwcmluZ3MsIHBheWxvYWQgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjaGFuZ2VzLnNldCh0LCB7IHBoYXNlLCBzcHJpbmdzLCBwYXlsb2FkIH0pO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0MyhTcHJpbmdDb250ZXh0KTtcclxuICBjb25zdCBwcmV2Q29udGV4dCA9IHVzZVByZXYyKGNvbnRleHQpO1xyXG4gIGNvbnN0IGhhc0NvbnRleHQgPSBjb250ZXh0ICE9PSBwcmV2Q29udGV4dCAmJiBoYXNQcm9wcyhjb250ZXh0KTtcclxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0NCgoKSA9PiB7XHJcbiAgICBpZiAoaGFzQ29udGV4dCkge1xyXG4gICAgICBlYWNoNyh0cmFuc2l0aW9ucywgKHQpID0+IHtcclxuICAgICAgICB0LmN0cmwuc3RhcnQoeyBkZWZhdWx0OiBjb250ZXh0IH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9LCBbY29udGV4dF0pO1xyXG4gIGVhY2g3KGNoYW5nZXMsIChfLCB0KSA9PiB7XHJcbiAgICBpZiAoZXhpdGluZ1RyYW5zaXRpb25zLmN1cnJlbnQuc2l6ZSkge1xyXG4gICAgICBjb25zdCBpbmQgPSB0cmFuc2l0aW9ucy5maW5kSW5kZXgoKHN0YXRlKSA9PiBzdGF0ZS5rZXkgPT09IHQua2V5KTtcclxuICAgICAgdHJhbnNpdGlvbnMuc3BsaWNlKGluZCwgMSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdDQoXHJcbiAgICAoKSA9PiB7XHJcbiAgICAgIGVhY2g3KFxyXG4gICAgICAgIGV4aXRpbmdUcmFuc2l0aW9ucy5jdXJyZW50LnNpemUgPyBleGl0aW5nVHJhbnNpdGlvbnMuY3VycmVudCA6IGNoYW5nZXMsXHJcbiAgICAgICAgKHsgcGhhc2UsIHBheWxvYWQgfSwgdCkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgeyBjdHJsIH0gPSB0O1xyXG4gICAgICAgICAgdC5waGFzZSA9IHBoYXNlO1xyXG4gICAgICAgICAgcmVmPy5hZGQoY3RybCk7XHJcbiAgICAgICAgICBpZiAoaGFzQ29udGV4dCAmJiBwaGFzZSA9PSBcImVudGVyXCIgLyogRU5URVIgKi8pIHtcclxuICAgICAgICAgICAgY3RybC5zdGFydCh7IGRlZmF1bHQ6IGNvbnRleHQgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAocGF5bG9hZCkge1xyXG4gICAgICAgICAgICByZXBsYWNlUmVmKGN0cmwsIHBheWxvYWQucmVmKTtcclxuICAgICAgICAgICAgaWYgKChjdHJsLnJlZiB8fCByZWYpICYmICFmb3JjZUNoYW5nZS5jdXJyZW50KSB7XHJcbiAgICAgICAgICAgICAgY3RybC51cGRhdGUocGF5bG9hZCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgY3RybC5zdGFydChwYXlsb2FkKTtcclxuICAgICAgICAgICAgICBpZiAoZm9yY2VDaGFuZ2UuY3VycmVudCkge1xyXG4gICAgICAgICAgICAgICAgZm9yY2VDaGFuZ2UuY3VycmVudCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgKTtcclxuICAgIH0sXHJcbiAgICByZXNldCA/IHZvaWQgMCA6IGRlcHNcclxuICApO1xyXG4gIGNvbnN0IHJlbmRlclRyYW5zaXRpb25zID0gKHJlbmRlcikgPT4gLyogQF9fUFVSRV9fICovIFJlYWN0Mi5jcmVhdGVFbGVtZW50KFJlYWN0Mi5GcmFnbWVudCwgbnVsbCwgdHJhbnNpdGlvbnMubWFwKCh0LCBpKSA9PiB7XHJcbiAgICBjb25zdCB7IHNwcmluZ3MgfSA9IGNoYW5nZXMuZ2V0KHQpIHx8IHQuY3RybDtcclxuICAgIGNvbnN0IGVsZW0gPSByZW5kZXIoeyAuLi5zcHJpbmdzIH0sIHQuaXRlbSwgdCwgaSk7XHJcbiAgICByZXR1cm4gZWxlbSAmJiBlbGVtLnR5cGUgPyAvKiBAX19QVVJFX18gKi8gUmVhY3QyLmNyZWF0ZUVsZW1lbnQoXHJcbiAgICAgIGVsZW0udHlwZSxcclxuICAgICAge1xyXG4gICAgICAgIC4uLmVsZW0ucHJvcHMsXHJcbiAgICAgICAga2V5OiBpczExLnN0cih0LmtleSkgfHwgaXMxMS5udW0odC5rZXkpID8gdC5rZXkgOiB0LmN0cmwuaWQsXHJcbiAgICAgICAgcmVmOiBlbGVtLnJlZlxyXG4gICAgICB9XHJcbiAgICApIDogZWxlbTtcclxuICB9KSk7XHJcbiAgcmV0dXJuIHJlZiA/IFtyZW5kZXJUcmFuc2l0aW9ucywgcmVmXSA6IHJlbmRlclRyYW5zaXRpb25zO1xyXG59XHJcbnZhciBuZXh0S2V5ID0gMTtcclxuZnVuY3Rpb24gZ2V0S2V5cyhpdGVtcywgeyBrZXksIGtleXMgPSBrZXkgfSwgcHJldlRyYW5zaXRpb25zKSB7XHJcbiAgaWYgKGtleXMgPT09IG51bGwpIHtcclxuICAgIGNvbnN0IHJldXNlZCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XHJcbiAgICByZXR1cm4gaXRlbXMubWFwKChpdGVtKSA9PiB7XHJcbiAgICAgIGNvbnN0IHQgPSBwcmV2VHJhbnNpdGlvbnMgJiYgcHJldlRyYW5zaXRpb25zLmZpbmQoXHJcbiAgICAgICAgKHQyKSA9PiB0Mi5pdGVtID09PSBpdGVtICYmIHQyLnBoYXNlICE9PSBcImxlYXZlXCIgLyogTEVBVkUgKi8gJiYgIXJldXNlZC5oYXModDIpXHJcbiAgICAgICk7XHJcbiAgICAgIGlmICh0KSB7XHJcbiAgICAgICAgcmV1c2VkLmFkZCh0KTtcclxuICAgICAgICByZXR1cm4gdC5rZXk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIG5leHRLZXkrKztcclxuICAgIH0pO1xyXG4gIH1cclxuICByZXR1cm4gaXMxMS51bmQoa2V5cykgPyBpdGVtcyA6IGlzMTEuZnVuKGtleXMpID8gaXRlbXMubWFwKGtleXMpIDogdG9BcnJheTQoa2V5cyk7XHJcbn1cclxuXHJcbi8vIHNyYy9ob29rcy91c2VTY3JvbGwudHNcclxuaW1wb3J0IHsgZWFjaCBhcyBlYWNoOCwgb25TY3JvbGwsIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgYXMgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdDUgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxudmFyIHVzZVNjcm9sbCA9ICh7XHJcbiAgY29udGFpbmVyLFxyXG4gIC4uLnNwcmluZ09wdGlvbnNcclxufSA9IHt9KSA9PiB7XHJcbiAgY29uc3QgW3Njcm9sbFZhbHVlcywgYXBpXSA9IHVzZVNwcmluZyhcclxuICAgICgpID0+ICh7XHJcbiAgICAgIHNjcm9sbFg6IDAsXHJcbiAgICAgIHNjcm9sbFk6IDAsXHJcbiAgICAgIHNjcm9sbFhQcm9ncmVzczogMCxcclxuICAgICAgc2Nyb2xsWVByb2dyZXNzOiAwLFxyXG4gICAgICAuLi5zcHJpbmdPcHRpb25zXHJcbiAgICB9KSxcclxuICAgIFtdXHJcbiAgKTtcclxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0NSgoKSA9PiB7XHJcbiAgICBjb25zdCBjbGVhbnVwU2Nyb2xsID0gb25TY3JvbGwoXHJcbiAgICAgICh7IHgsIHkgfSkgPT4ge1xyXG4gICAgICAgIGFwaS5zdGFydCh7XHJcbiAgICAgICAgICBzY3JvbGxYOiB4LmN1cnJlbnQsXHJcbiAgICAgICAgICBzY3JvbGxYUHJvZ3Jlc3M6IHgucHJvZ3Jlc3MsXHJcbiAgICAgICAgICBzY3JvbGxZOiB5LmN1cnJlbnQsXHJcbiAgICAgICAgICBzY3JvbGxZUHJvZ3Jlc3M6IHkucHJvZ3Jlc3NcclxuICAgICAgICB9KTtcclxuICAgICAgfSxcclxuICAgICAgeyBjb250YWluZXI6IGNvbnRhaW5lcj8uY3VycmVudCB8fCB2b2lkIDAgfVxyXG4gICAgKTtcclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgIGVhY2g4KE9iamVjdC52YWx1ZXMoc2Nyb2xsVmFsdWVzKSwgKHZhbHVlKSA9PiB2YWx1ZS5zdG9wKCkpO1xyXG4gICAgICBjbGVhbnVwU2Nyb2xsKCk7XHJcbiAgICB9O1xyXG4gIH0sIFtdKTtcclxuICByZXR1cm4gc2Nyb2xsVmFsdWVzO1xyXG59O1xyXG5cclxuLy8gc3JjL2hvb2tzL3VzZVJlc2l6ZS50c1xyXG5pbXBvcnQgeyBvblJlc2l6ZSwgZWFjaCBhcyBlYWNoOSwgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCBhcyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0NiB9IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG52YXIgdXNlUmVzaXplID0gKHtcclxuICBjb250YWluZXIsXHJcbiAgLi4uc3ByaW5nT3B0aW9uc1xyXG59KSA9PiB7XHJcbiAgY29uc3QgW3NpemVWYWx1ZXMsIGFwaV0gPSB1c2VTcHJpbmcoXHJcbiAgICAoKSA9PiAoe1xyXG4gICAgICB3aWR0aDogMCxcclxuICAgICAgaGVpZ2h0OiAwLFxyXG4gICAgICAuLi5zcHJpbmdPcHRpb25zXHJcbiAgICB9KSxcclxuICAgIFtdXHJcbiAgKTtcclxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0NigoKSA9PiB7XHJcbiAgICBjb25zdCBjbGVhbnVwU2Nyb2xsID0gb25SZXNpemUoXHJcbiAgICAgICh7IHdpZHRoLCBoZWlnaHQgfSkgPT4ge1xyXG4gICAgICAgIGFwaS5zdGFydCh7XHJcbiAgICAgICAgICB3aWR0aCxcclxuICAgICAgICAgIGhlaWdodCxcclxuICAgICAgICAgIGltbWVkaWF0ZTogc2l6ZVZhbHVlcy53aWR0aC5nZXQoKSA9PT0gMCB8fCBzaXplVmFsdWVzLmhlaWdodC5nZXQoKSA9PT0gMFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG4gICAgICB7IGNvbnRhaW5lcjogY29udGFpbmVyPy5jdXJyZW50IHx8IHZvaWQgMCB9XHJcbiAgICApO1xyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgZWFjaDkoT2JqZWN0LnZhbHVlcyhzaXplVmFsdWVzKSwgKHZhbHVlKSA9PiB2YWx1ZS5zdG9wKCkpO1xyXG4gICAgICBjbGVhbnVwU2Nyb2xsKCk7XHJcbiAgICB9O1xyXG4gIH0sIFtdKTtcclxuICByZXR1cm4gc2l6ZVZhbHVlcztcclxufTtcclxuXHJcbi8vIHNyYy9ob29rcy91c2VJblZpZXcudHNcclxuaW1wb3J0IHsgdXNlUmVmIGFzIHVzZVJlZjMsIHVzZVN0YXRlIGFzIHVzZVN0YXRlMiB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBpcyBhcyBpczEyLCB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IGFzIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3Q3IH0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcbnZhciBkZWZhdWx0VGhyZXNob2xkT3B0aW9ucyA9IHtcclxuICBhbnk6IDAsXHJcbiAgYWxsOiAxXHJcbn07XHJcbmZ1bmN0aW9uIHVzZUluVmlldyhwcm9wcywgYXJncykge1xyXG4gIGNvbnN0IFtpc0luVmlldywgc2V0SXNJblZpZXddID0gdXNlU3RhdGUyKGZhbHNlKTtcclxuICBjb25zdCByZWYgPSB1c2VSZWYzKCk7XHJcbiAgY29uc3QgcHJvcHNGbiA9IGlzMTIuZnVuKHByb3BzKSAmJiBwcm9wcztcclxuICBjb25zdCBzcHJpbmdzUHJvcHMgPSBwcm9wc0ZuID8gcHJvcHNGbigpIDoge307XHJcbiAgY29uc3QgeyB0bzogdG8yID0ge30sIGZyb20gPSB7fSwgLi4ucmVzdFNwcmluZ1Byb3BzIH0gPSBzcHJpbmdzUHJvcHM7XHJcbiAgY29uc3QgaW50ZXJzZWN0aW9uQXJndW1lbnRzID0gcHJvcHNGbiA/IGFyZ3MgOiBwcm9wcztcclxuICBjb25zdCBbc3ByaW5ncywgYXBpXSA9IHVzZVNwcmluZygoKSA9PiAoeyBmcm9tLCAuLi5yZXN0U3ByaW5nUHJvcHMgfSksIFtdKTtcclxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0NygoKSA9PiB7XHJcbiAgICBjb25zdCBlbGVtZW50ID0gcmVmLmN1cnJlbnQ7XHJcbiAgICBjb25zdCB7XHJcbiAgICAgIHJvb3QsXHJcbiAgICAgIG9uY2UsXHJcbiAgICAgIGFtb3VudCA9IFwiYW55XCIsXHJcbiAgICAgIC4uLnJlc3RBcmdzXHJcbiAgICB9ID0gaW50ZXJzZWN0aW9uQXJndW1lbnRzID8/IHt9O1xyXG4gICAgaWYgKCFlbGVtZW50IHx8IG9uY2UgJiYgaXNJblZpZXcgfHwgdHlwZW9mIEludGVyc2VjdGlvbk9ic2VydmVyID09PSBcInVuZGVmaW5lZFwiKVxyXG4gICAgICByZXR1cm47XHJcbiAgICBjb25zdCBhY3RpdmVJbnRlcnNlY3Rpb25zID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XHJcbiAgICBjb25zdCBvbkVudGVyID0gKCkgPT4ge1xyXG4gICAgICBpZiAodG8yKSB7XHJcbiAgICAgICAgYXBpLnN0YXJ0KHRvMik7XHJcbiAgICAgIH1cclxuICAgICAgc2V0SXNJblZpZXcodHJ1ZSk7XHJcbiAgICAgIGNvbnN0IGNsZWFudXAgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKGZyb20pIHtcclxuICAgICAgICAgIGFwaS5zdGFydChmcm9tKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc2V0SXNJblZpZXcoZmFsc2UpO1xyXG4gICAgICB9O1xyXG4gICAgICByZXR1cm4gb25jZSA/IHZvaWQgMCA6IGNsZWFudXA7XHJcbiAgICB9O1xyXG4gICAgY29uc3QgaGFuZGxlSW50ZXJzZWN0aW9uID0gKGVudHJpZXMpID0+IHtcclxuICAgICAgZW50cmllcy5mb3JFYWNoKChlbnRyeSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG9uTGVhdmUgPSBhY3RpdmVJbnRlcnNlY3Rpb25zLmdldChlbnRyeS50YXJnZXQpO1xyXG4gICAgICAgIGlmIChlbnRyeS5pc0ludGVyc2VjdGluZyA9PT0gQm9vbGVhbihvbkxlYXZlKSkge1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcclxuICAgICAgICAgIGNvbnN0IG5ld09uTGVhdmUgPSBvbkVudGVyKCk7XHJcbiAgICAgICAgICBpZiAoaXMxMi5mdW4obmV3T25MZWF2ZSkpIHtcclxuICAgICAgICAgICAgYWN0aXZlSW50ZXJzZWN0aW9ucy5zZXQoZW50cnkudGFyZ2V0LCBuZXdPbkxlYXZlKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyLnVub2JzZXJ2ZShlbnRyeS50YXJnZXQpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAob25MZWF2ZSkge1xyXG4gICAgICAgICAgb25MZWF2ZSgpO1xyXG4gICAgICAgICAgYWN0aXZlSW50ZXJzZWN0aW9ucy5kZWxldGUoZW50cnkudGFyZ2V0KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGhhbmRsZUludGVyc2VjdGlvbiwge1xyXG4gICAgICByb290OiByb290ICYmIHJvb3QuY3VycmVudCB8fCB2b2lkIDAsXHJcbiAgICAgIHRocmVzaG9sZDogdHlwZW9mIGFtb3VudCA9PT0gXCJudW1iZXJcIiB8fCBBcnJheS5pc0FycmF5KGFtb3VudCkgPyBhbW91bnQgOiBkZWZhdWx0VGhyZXNob2xkT3B0aW9uc1thbW91bnRdLFxyXG4gICAgICAuLi5yZXN0QXJnc1xyXG4gICAgfSk7XHJcbiAgICBvYnNlcnZlci5vYnNlcnZlKGVsZW1lbnQpO1xyXG4gICAgcmV0dXJuICgpID0+IG9ic2VydmVyLnVub2JzZXJ2ZShlbGVtZW50KTtcclxuICB9LCBbaW50ZXJzZWN0aW9uQXJndW1lbnRzXSk7XHJcbiAgaWYgKHByb3BzRm4pIHtcclxuICAgIHJldHVybiBbcmVmLCBzcHJpbmdzXTtcclxuICB9XHJcbiAgcmV0dXJuIFtyZWYsIGlzSW5WaWV3XTtcclxufVxyXG5cclxuLy8gc3JjL2NvbXBvbmVudHMvU3ByaW5nLnRzeFxyXG5mdW5jdGlvbiBTcHJpbmcoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSkge1xyXG4gIHJldHVybiBjaGlsZHJlbih1c2VTcHJpbmcocHJvcHMpKTtcclxufVxyXG5cclxuLy8gc3JjL2NvbXBvbmVudHMvVHJhaWwudHN4XHJcbmltcG9ydCB7IGlzIGFzIGlzMTMgfSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuZnVuY3Rpb24gVHJhaWwoe1xyXG4gIGl0ZW1zLFxyXG4gIGNoaWxkcmVuLFxyXG4gIC4uLnByb3BzXHJcbn0pIHtcclxuICBjb25zdCB0cmFpbHMgPSB1c2VUcmFpbChpdGVtcy5sZW5ndGgsIHByb3BzKTtcclxuICByZXR1cm4gaXRlbXMubWFwKChpdGVtLCBpbmRleCkgPT4ge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gY2hpbGRyZW4oaXRlbSwgaW5kZXgpO1xyXG4gICAgcmV0dXJuIGlzMTMuZnVuKHJlc3VsdCkgPyByZXN1bHQodHJhaWxzW2luZGV4XSkgOiByZXN1bHQ7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vIHNyYy9jb21wb25lbnRzL1RyYW5zaXRpb24udHN4XHJcbmZ1bmN0aW9uIFRyYW5zaXRpb24oe1xyXG4gIGl0ZW1zLFxyXG4gIGNoaWxkcmVuLFxyXG4gIC4uLnByb3BzXHJcbn0pIHtcclxuICByZXR1cm4gdXNlVHJhbnNpdGlvbihpdGVtcywgcHJvcHMpKGNoaWxkcmVuKTtcclxufVxyXG5cclxuLy8gc3JjL2ludGVycG9sYXRlLnRzXHJcbmltcG9ydCB7IGRlcHJlY2F0ZUludGVycG9sYXRlIGFzIGRlcHJlY2F0ZUludGVycG9sYXRlMiB9IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG5cclxuLy8gc3JjL0ludGVycG9sYXRpb24udHNcclxuaW1wb3J0IHtcclxuICBpcyBhcyBpczE0LFxyXG4gIHJhZiBhcyByYWY1LFxyXG4gIGVhY2ggYXMgZWFjaDEwLFxyXG4gIGlzRXF1YWwgYXMgaXNFcXVhbDIsXHJcbiAgdG9BcnJheSBhcyB0b0FycmF5NSxcclxuICBmcmFtZUxvb3AgYXMgZnJhbWVMb29wMyxcclxuICBnZXRGbHVpZFZhbHVlIGFzIGdldEZsdWlkVmFsdWUzLFxyXG4gIGNyZWF0ZUludGVycG9sYXRvcixcclxuICBHbG9iYWxzIGFzIEc2LFxyXG4gIGNhbGxGbHVpZE9ic2VydmVycyBhcyBjYWxsRmx1aWRPYnNlcnZlcnMzLFxyXG4gIGFkZEZsdWlkT2JzZXJ2ZXIgYXMgYWRkRmx1aWRPYnNlcnZlcjMsXHJcbiAgcmVtb3ZlRmx1aWRPYnNlcnZlciBhcyByZW1vdmVGbHVpZE9ic2VydmVyMixcclxuICBoYXNGbHVpZFZhbHVlIGFzIGhhc0ZsdWlkVmFsdWUyXHJcbn0gZnJvbSBcIkByZWFjdC1zcHJpbmcvc2hhcmVkXCI7XHJcbmltcG9ydCB7XHJcbiAgZ2V0QW5pbWF0ZWQgYXMgZ2V0QW5pbWF0ZWQzLFxyXG4gIHNldEFuaW1hdGVkIGFzIHNldEFuaW1hdGVkMixcclxuICBnZXRBbmltYXRlZFR5cGUgYXMgZ2V0QW5pbWF0ZWRUeXBlMixcclxuICBnZXRQYXlsb2FkIGFzIGdldFBheWxvYWQyXHJcbn0gZnJvbSBcIkByZWFjdC1zcHJpbmcvYW5pbWF0ZWRcIjtcclxudmFyIEludGVycG9sYXRpb24gPSBjbGFzcyBleHRlbmRzIEZyYW1lVmFsdWUge1xyXG4gIGNvbnN0cnVjdG9yKHNvdXJjZSwgYXJncykge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMuc291cmNlID0gc291cmNlO1xyXG4gICAgLyoqIEVxdWFscyBmYWxzZSB3aGVuIGluIHRoZSBmcmFtZWxvb3AgKi9cclxuICAgIHRoaXMuaWRsZSA9IHRydWU7XHJcbiAgICAvKiogVGhlIGlucHV0cyB3aGljaCBhcmUgY3VycmVudGx5IGFuaW1hdGluZyAqL1xyXG4gICAgdGhpcy5fYWN0aXZlID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcclxuICAgIHRoaXMuY2FsYyA9IGNyZWF0ZUludGVycG9sYXRvciguLi5hcmdzKTtcclxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5fZ2V0KCk7XHJcbiAgICBjb25zdCBub2RlVHlwZSA9IGdldEFuaW1hdGVkVHlwZTIodmFsdWUpO1xyXG4gICAgc2V0QW5pbWF0ZWQyKHRoaXMsIG5vZGVUeXBlLmNyZWF0ZSh2YWx1ZSkpO1xyXG4gIH1cclxuICBhZHZhbmNlKF9kdCkge1xyXG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9nZXQoKTtcclxuICAgIGNvbnN0IG9sZFZhbHVlID0gdGhpcy5nZXQoKTtcclxuICAgIGlmICghaXNFcXVhbDIodmFsdWUsIG9sZFZhbHVlKSkge1xyXG4gICAgICBnZXRBbmltYXRlZDModGhpcykuc2V0VmFsdWUodmFsdWUpO1xyXG4gICAgICB0aGlzLl9vbkNoYW5nZSh2YWx1ZSwgdGhpcy5pZGxlKTtcclxuICAgIH1cclxuICAgIGlmICghdGhpcy5pZGxlICYmIGNoZWNrSWRsZSh0aGlzLl9hY3RpdmUpKSB7XHJcbiAgICAgIGJlY29tZUlkbGUodGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIF9nZXQoKSB7XHJcbiAgICBjb25zdCBpbnB1dHMgPSBpczE0LmFycih0aGlzLnNvdXJjZSkgPyB0aGlzLnNvdXJjZS5tYXAoZ2V0Rmx1aWRWYWx1ZTMpIDogdG9BcnJheTUoZ2V0Rmx1aWRWYWx1ZTModGhpcy5zb3VyY2UpKTtcclxuICAgIHJldHVybiB0aGlzLmNhbGMoLi4uaW5wdXRzKTtcclxuICB9XHJcbiAgX3N0YXJ0KCkge1xyXG4gICAgaWYgKHRoaXMuaWRsZSAmJiAhY2hlY2tJZGxlKHRoaXMuX2FjdGl2ZSkpIHtcclxuICAgICAgdGhpcy5pZGxlID0gZmFsc2U7XHJcbiAgICAgIGVhY2gxMChnZXRQYXlsb2FkMih0aGlzKSwgKG5vZGUpID0+IHtcclxuICAgICAgICBub2RlLmRvbmUgPSBmYWxzZTtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChHNi5za2lwQW5pbWF0aW9uKSB7XHJcbiAgICAgICAgcmFmNS5iYXRjaGVkVXBkYXRlcygoKSA9PiB0aGlzLmFkdmFuY2UoKSk7XHJcbiAgICAgICAgYmVjb21lSWRsZSh0aGlzKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBmcmFtZUxvb3AzLnN0YXJ0KHRoaXMpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vIE9ic2VydmUgb3VyIHNvdXJjZXMgb25seSB3aGVuIHdlJ3JlIG9ic2VydmVkLlxyXG4gIF9hdHRhY2goKSB7XHJcbiAgICBsZXQgcHJpb3JpdHkgPSAxO1xyXG4gICAgZWFjaDEwKHRvQXJyYXk1KHRoaXMuc291cmNlKSwgKHNvdXJjZSkgPT4ge1xyXG4gICAgICBpZiAoaGFzRmx1aWRWYWx1ZTIoc291cmNlKSkge1xyXG4gICAgICAgIGFkZEZsdWlkT2JzZXJ2ZXIzKHNvdXJjZSwgdGhpcyk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGlzRnJhbWVWYWx1ZShzb3VyY2UpKSB7XHJcbiAgICAgICAgaWYgKCFzb3VyY2UuaWRsZSkge1xyXG4gICAgICAgICAgdGhpcy5fYWN0aXZlLmFkZChzb3VyY2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwcmlvcml0eSA9IE1hdGgubWF4KHByaW9yaXR5LCBzb3VyY2UucHJpb3JpdHkgKyAxKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgICB0aGlzLl9zdGFydCgpO1xyXG4gIH1cclxuICAvLyBTdG9wIG9ic2VydmluZyBvdXIgc291cmNlcyBvbmNlIHdlIGhhdmUgbm8gb2JzZXJ2ZXJzLlxyXG4gIF9kZXRhY2goKSB7XHJcbiAgICBlYWNoMTAodG9BcnJheTUodGhpcy5zb3VyY2UpLCAoc291cmNlKSA9PiB7XHJcbiAgICAgIGlmIChoYXNGbHVpZFZhbHVlMihzb3VyY2UpKSB7XHJcbiAgICAgICAgcmVtb3ZlRmx1aWRPYnNlcnZlcjIoc291cmNlLCB0aGlzKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9hY3RpdmUuY2xlYXIoKTtcclxuICAgIGJlY29tZUlkbGUodGhpcyk7XHJcbiAgfVxyXG4gIC8qKiBAaW50ZXJuYWwgKi9cclxuICBldmVudE9ic2VydmVkKGV2ZW50KSB7XHJcbiAgICBpZiAoZXZlbnQudHlwZSA9PSBcImNoYW5nZVwiKSB7XHJcbiAgICAgIGlmIChldmVudC5pZGxlKSB7XHJcbiAgICAgICAgdGhpcy5hZHZhbmNlKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5fYWN0aXZlLmFkZChldmVudC5wYXJlbnQpO1xyXG4gICAgICAgIHRoaXMuX3N0YXJ0KCk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAoZXZlbnQudHlwZSA9PSBcImlkbGVcIikge1xyXG4gICAgICB0aGlzLl9hY3RpdmUuZGVsZXRlKGV2ZW50LnBhcmVudCk7XHJcbiAgICB9IGVsc2UgaWYgKGV2ZW50LnR5cGUgPT0gXCJwcmlvcml0eVwiKSB7XHJcbiAgICAgIHRoaXMucHJpb3JpdHkgPSB0b0FycmF5NSh0aGlzLnNvdXJjZSkucmVkdWNlKFxyXG4gICAgICAgIChoaWdoZXN0LCBwYXJlbnQpID0+IE1hdGgubWF4KGhpZ2hlc3QsIChpc0ZyYW1lVmFsdWUocGFyZW50KSA/IHBhcmVudC5wcmlvcml0eSA6IDApICsgMSksXHJcbiAgICAgICAgMFxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gaXNJZGxlKHNvdXJjZSkge1xyXG4gIHJldHVybiBzb3VyY2UuaWRsZSAhPT0gZmFsc2U7XHJcbn1cclxuZnVuY3Rpb24gY2hlY2tJZGxlKGFjdGl2ZSkge1xyXG4gIHJldHVybiAhYWN0aXZlLnNpemUgfHwgQXJyYXkuZnJvbShhY3RpdmUpLmV2ZXJ5KGlzSWRsZSk7XHJcbn1cclxuZnVuY3Rpb24gYmVjb21lSWRsZShzZWxmKSB7XHJcbiAgaWYgKCFzZWxmLmlkbGUpIHtcclxuICAgIHNlbGYuaWRsZSA9IHRydWU7XHJcbiAgICBlYWNoMTAoZ2V0UGF5bG9hZDIoc2VsZiksIChub2RlKSA9PiB7XHJcbiAgICAgIG5vZGUuZG9uZSA9IHRydWU7XHJcbiAgICB9KTtcclxuICAgIGNhbGxGbHVpZE9ic2VydmVyczMoc2VsZiwge1xyXG4gICAgICB0eXBlOiBcImlkbGVcIixcclxuICAgICAgcGFyZW50OiBzZWxmXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIHNyYy9pbnRlcnBvbGF0ZS50c1xyXG52YXIgdG8gPSAoc291cmNlLCAuLi5hcmdzKSA9PiBuZXcgSW50ZXJwb2xhdGlvbihzb3VyY2UsIGFyZ3MpO1xyXG52YXIgaW50ZXJwb2xhdGUgPSAoc291cmNlLCAuLi5hcmdzKSA9PiAoZGVwcmVjYXRlSW50ZXJwb2xhdGUyKCksIG5ldyBJbnRlcnBvbGF0aW9uKHNvdXJjZSwgYXJncykpO1xyXG5cclxuLy8gc3JjL2dsb2JhbHMudHNcclxuaW1wb3J0IHtcclxuICBHbG9iYWxzLFxyXG4gIGZyYW1lTG9vcCBhcyBmcmFtZUxvb3A0LFxyXG4gIGNyZWF0ZVN0cmluZ0ludGVycG9sYXRvclxyXG59IGZyb20gXCJAcmVhY3Qtc3ByaW5nL3NoYXJlZFwiO1xyXG5HbG9iYWxzLmFzc2lnbih7XHJcbiAgY3JlYXRlU3RyaW5nSW50ZXJwb2xhdG9yLFxyXG4gIHRvOiAoc291cmNlLCBhcmdzKSA9PiBuZXcgSW50ZXJwb2xhdGlvbihzb3VyY2UsIGFyZ3MpXHJcbn0pO1xyXG52YXIgdXBkYXRlID0gZnJhbWVMb29wNC5hZHZhbmNlO1xyXG5cclxuLy8gc3JjL2luZGV4LnRzXHJcbmltcG9ydCB7XHJcbiAgY3JlYXRlSW50ZXJwb2xhdG9yIGFzIGNyZWF0ZUludGVycG9sYXRvcjIsXHJcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCBhcyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0OCxcclxuICB1c2VSZWR1Y2VkTW90aW9uLFxyXG4gIGVhc2luZ3MgYXMgZWFzaW5nczJcclxufSBmcm9tIFwiQHJlYWN0LXNwcmluZy9zaGFyZWRcIjtcclxuZXhwb3J0ICogZnJvbSBcIkByZWFjdC1zcHJpbmcvdHlwZXNcIjtcclxuZXhwb3J0IHtcclxuICBCYWlsU2lnbmFsLFxyXG4gIENvbnRyb2xsZXIsXHJcbiAgRnJhbWVWYWx1ZSxcclxuICBHbG9iYWxzLFxyXG4gIEludGVycG9sYXRpb24sXHJcbiAgU3ByaW5nLFxyXG4gIFNwcmluZ0NvbnRleHQsXHJcbiAgU3ByaW5nUmVmLFxyXG4gIFNwcmluZ1ZhbHVlLFxyXG4gIFRyYWlsLFxyXG4gIFRyYW5zaXRpb24sXHJcbiAgY29uZmlnLFxyXG4gIGNyZWF0ZUludGVycG9sYXRvcjIgYXMgY3JlYXRlSW50ZXJwb2xhdG9yLFxyXG4gIGVhc2luZ3MyIGFzIGVhc2luZ3MsXHJcbiAgaW5mZXJUbyxcclxuICBpbnRlcnBvbGF0ZSxcclxuICB0byxcclxuICB1cGRhdGUsXHJcbiAgdXNlQ2hhaW4sXHJcbiAgdXNlSW5WaWV3LFxyXG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3Q4IGFzIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QsXHJcbiAgdXNlUmVkdWNlZE1vdGlvbixcclxuICB1c2VSZXNpemUsXHJcbiAgdXNlU2Nyb2xsLFxyXG4gIHVzZVNwcmluZyxcclxuICB1c2VTcHJpbmdSZWYsXHJcbiAgdXNlU3ByaW5nVmFsdWUsXHJcbiAgdXNlU3ByaW5ncyxcclxuICB1c2VUcmFpbCxcclxuICB1c2VUcmFuc2l0aW9uXHJcbn07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXNwcmluZ19jb3JlLm1vZGVybi5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-spring/core/dist/react-spring_core.modern.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-spring/rafz/dist/react-spring_rafz.modern.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@react-spring/rafz/dist/react-spring_rafz.modern.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __raf: () => (/* binding */ __raf),\n/* harmony export */   raf: () => (/* binding */ raf)\n/* harmony export */ });\n// src/index.ts\r\nvar updateQueue = makeQueue();\r\nvar raf = (fn) => schedule(fn, updateQueue);\r\nvar writeQueue = makeQueue();\r\nraf.write = (fn) => schedule(fn, writeQueue);\r\nvar onStartQueue = makeQueue();\r\nraf.onStart = (fn) => schedule(fn, onStartQueue);\r\nvar onFrameQueue = makeQueue();\r\nraf.onFrame = (fn) => schedule(fn, onFrameQueue);\r\nvar onFinishQueue = makeQueue();\r\nraf.onFinish = (fn) => schedule(fn, onFinishQueue);\r\nvar timeouts = [];\r\nraf.setTimeout = (handler, ms) => {\r\n  const time = raf.now() + ms;\r\n  const cancel = () => {\r\n    const i = timeouts.findIndex((t) => t.cancel == cancel);\r\n    if (~i)\r\n      timeouts.splice(i, 1);\r\n    pendingCount -= ~i ? 1 : 0;\r\n  };\r\n  const timeout = { time, handler, cancel };\r\n  timeouts.splice(findTimeout(time), 0, timeout);\r\n  pendingCount += 1;\r\n  start();\r\n  return timeout;\r\n};\r\nvar findTimeout = (time) => ~(~timeouts.findIndex((t) => t.time > time) || ~timeouts.length);\r\nraf.cancel = (fn) => {\r\n  onStartQueue.delete(fn);\r\n  onFrameQueue.delete(fn);\r\n  onFinishQueue.delete(fn);\r\n  updateQueue.delete(fn);\r\n  writeQueue.delete(fn);\r\n};\r\nraf.sync = (fn) => {\r\n  sync = true;\r\n  raf.batchedUpdates(fn);\r\n  sync = false;\r\n};\r\nraf.throttle = (fn) => {\r\n  let lastArgs;\r\n  function queuedFn() {\r\n    try {\r\n      fn(...lastArgs);\r\n    } finally {\r\n      lastArgs = null;\r\n    }\r\n  }\r\n  function throttled(...args) {\r\n    lastArgs = args;\r\n    raf.onStart(queuedFn);\r\n  }\r\n  throttled.handler = fn;\r\n  throttled.cancel = () => {\r\n    onStartQueue.delete(queuedFn);\r\n    lastArgs = null;\r\n  };\r\n  return throttled;\r\n};\r\nvar nativeRaf = typeof window != \"undefined\" ? window.requestAnimationFrame : (\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  () => {\r\n  }\r\n);\r\nraf.use = (impl) => nativeRaf = impl;\r\nraf.now = typeof performance != \"undefined\" ? () => performance.now() : Date.now;\r\nraf.batchedUpdates = (fn) => fn();\r\nraf.catch = console.error;\r\nraf.frameLoop = \"always\";\r\nraf.advance = () => {\r\n  if (raf.frameLoop !== \"demand\") {\r\n    console.warn(\r\n      \"Cannot call the manual advancement of rafz whilst frameLoop is not set as demand\"\r\n    );\r\n  } else {\r\n    update();\r\n  }\r\n};\r\nvar ts = -1;\r\nvar pendingCount = 0;\r\nvar sync = false;\r\nfunction schedule(fn, queue) {\r\n  if (sync) {\r\n    queue.delete(fn);\r\n    fn(0);\r\n  } else {\r\n    queue.add(fn);\r\n    start();\r\n  }\r\n}\r\nfunction start() {\r\n  if (ts < 0) {\r\n    ts = 0;\r\n    if (raf.frameLoop !== \"demand\") {\r\n      nativeRaf(loop);\r\n    }\r\n  }\r\n}\r\nfunction stop() {\r\n  ts = -1;\r\n}\r\nfunction loop() {\r\n  if (~ts) {\r\n    nativeRaf(loop);\r\n    raf.batchedUpdates(update);\r\n  }\r\n}\r\nfunction update() {\r\n  const prevTs = ts;\r\n  ts = raf.now();\r\n  const count = findTimeout(ts);\r\n  if (count) {\r\n    eachSafely(timeouts.splice(0, count), (t) => t.handler());\r\n    pendingCount -= count;\r\n  }\r\n  if (!pendingCount) {\r\n    stop();\r\n    return;\r\n  }\r\n  onStartQueue.flush();\r\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);\r\n  onFrameQueue.flush();\r\n  writeQueue.flush();\r\n  onFinishQueue.flush();\r\n}\r\nfunction makeQueue() {\r\n  let next = /* @__PURE__ */ new Set();\r\n  let current = next;\r\n  return {\r\n    add(fn) {\r\n      pendingCount += current == next && !next.has(fn) ? 1 : 0;\r\n      next.add(fn);\r\n    },\r\n    delete(fn) {\r\n      pendingCount -= current == next && next.has(fn) ? 1 : 0;\r\n      return next.delete(fn);\r\n    },\r\n    flush(arg) {\r\n      if (current.size) {\r\n        next = /* @__PURE__ */ new Set();\r\n        pendingCount -= current.size;\r\n        eachSafely(current, (fn) => fn(arg) && next.add(fn));\r\n        pendingCount += next.size;\r\n        current = next;\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction eachSafely(values, each) {\r\n  values.forEach((value) => {\r\n    try {\r\n      each(value);\r\n    } catch (e) {\r\n      raf.catch(e);\r\n    }\r\n  });\r\n}\r\nvar __raf = {\r\n  /** The number of pending tasks */\r\n  count() {\r\n    return pendingCount;\r\n  },\r\n  /** Whether there's a raf update loop running */\r\n  isRunning() {\r\n    return ts >= 0;\r\n  },\r\n  /** Clear internal state. Never call from update loop! */\r\n  clear() {\r\n    ts = -1;\r\n    timeouts = [];\r\n    onStartQueue = makeQueue();\r\n    updateQueue = makeQueue();\r\n    onFrameQueue = makeQueue();\r\n    writeQueue = makeQueue();\r\n    onFinishQueue = makeQueue();\r\n    pendingCount = 0;\r\n  }\r\n};\r\n\r\n//# sourceMappingURL=react-spring_rafz.modern.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXNwcmluZy9yYWZ6L2Rpc3QvcmVhY3Qtc3ByaW5nX3JhZnoubW9kZXJuLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1zcHJpbmcvcmFmei9kaXN0L3JlYWN0LXNwcmluZ19yYWZ6Lm1vZGVybi5tanM/ZTEzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaW5kZXgudHNcclxudmFyIHVwZGF0ZVF1ZXVlID0gbWFrZVF1ZXVlKCk7XHJcbnZhciByYWYgPSAoZm4pID0+IHNjaGVkdWxlKGZuLCB1cGRhdGVRdWV1ZSk7XHJcbnZhciB3cml0ZVF1ZXVlID0gbWFrZVF1ZXVlKCk7XHJcbnJhZi53cml0ZSA9IChmbikgPT4gc2NoZWR1bGUoZm4sIHdyaXRlUXVldWUpO1xyXG52YXIgb25TdGFydFF1ZXVlID0gbWFrZVF1ZXVlKCk7XHJcbnJhZi5vblN0YXJ0ID0gKGZuKSA9PiBzY2hlZHVsZShmbiwgb25TdGFydFF1ZXVlKTtcclxudmFyIG9uRnJhbWVRdWV1ZSA9IG1ha2VRdWV1ZSgpO1xyXG5yYWYub25GcmFtZSA9IChmbikgPT4gc2NoZWR1bGUoZm4sIG9uRnJhbWVRdWV1ZSk7XHJcbnZhciBvbkZpbmlzaFF1ZXVlID0gbWFrZVF1ZXVlKCk7XHJcbnJhZi5vbkZpbmlzaCA9IChmbikgPT4gc2NoZWR1bGUoZm4sIG9uRmluaXNoUXVldWUpO1xyXG52YXIgdGltZW91dHMgPSBbXTtcclxucmFmLnNldFRpbWVvdXQgPSAoaGFuZGxlciwgbXMpID0+IHtcclxuICBjb25zdCB0aW1lID0gcmFmLm5vdygpICsgbXM7XHJcbiAgY29uc3QgY2FuY2VsID0gKCkgPT4ge1xyXG4gICAgY29uc3QgaSA9IHRpbWVvdXRzLmZpbmRJbmRleCgodCkgPT4gdC5jYW5jZWwgPT0gY2FuY2VsKTtcclxuICAgIGlmICh+aSlcclxuICAgICAgdGltZW91dHMuc3BsaWNlKGksIDEpO1xyXG4gICAgcGVuZGluZ0NvdW50IC09IH5pID8gMSA6IDA7XHJcbiAgfTtcclxuICBjb25zdCB0aW1lb3V0ID0geyB0aW1lLCBoYW5kbGVyLCBjYW5jZWwgfTtcclxuICB0aW1lb3V0cy5zcGxpY2UoZmluZFRpbWVvdXQodGltZSksIDAsIHRpbWVvdXQpO1xyXG4gIHBlbmRpbmdDb3VudCArPSAxO1xyXG4gIHN0YXJ0KCk7XHJcbiAgcmV0dXJuIHRpbWVvdXQ7XHJcbn07XHJcbnZhciBmaW5kVGltZW91dCA9ICh0aW1lKSA9PiB+KH50aW1lb3V0cy5maW5kSW5kZXgoKHQpID0+IHQudGltZSA+IHRpbWUpIHx8IH50aW1lb3V0cy5sZW5ndGgpO1xyXG5yYWYuY2FuY2VsID0gKGZuKSA9PiB7XHJcbiAgb25TdGFydFF1ZXVlLmRlbGV0ZShmbik7XHJcbiAgb25GcmFtZVF1ZXVlLmRlbGV0ZShmbik7XHJcbiAgb25GaW5pc2hRdWV1ZS5kZWxldGUoZm4pO1xyXG4gIHVwZGF0ZVF1ZXVlLmRlbGV0ZShmbik7XHJcbiAgd3JpdGVRdWV1ZS5kZWxldGUoZm4pO1xyXG59O1xyXG5yYWYuc3luYyA9IChmbikgPT4ge1xyXG4gIHN5bmMgPSB0cnVlO1xyXG4gIHJhZi5iYXRjaGVkVXBkYXRlcyhmbik7XHJcbiAgc3luYyA9IGZhbHNlO1xyXG59O1xyXG5yYWYudGhyb3R0bGUgPSAoZm4pID0+IHtcclxuICBsZXQgbGFzdEFyZ3M7XHJcbiAgZnVuY3Rpb24gcXVldWVkRm4oKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBmbiguLi5sYXN0QXJncyk7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICBsYXN0QXJncyA9IG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHRocm90dGxlZCguLi5hcmdzKSB7XHJcbiAgICBsYXN0QXJncyA9IGFyZ3M7XHJcbiAgICByYWYub25TdGFydChxdWV1ZWRGbik7XHJcbiAgfVxyXG4gIHRocm90dGxlZC5oYW5kbGVyID0gZm47XHJcbiAgdGhyb3R0bGVkLmNhbmNlbCA9ICgpID0+IHtcclxuICAgIG9uU3RhcnRRdWV1ZS5kZWxldGUocXVldWVkRm4pO1xyXG4gICAgbGFzdEFyZ3MgPSBudWxsO1xyXG4gIH07XHJcbiAgcmV0dXJuIHRocm90dGxlZDtcclxufTtcclxudmFyIG5hdGl2ZVJhZiA9IHR5cGVvZiB3aW5kb3cgIT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgOiAoXHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxyXG4gICgpID0+IHtcclxuICB9XHJcbik7XHJcbnJhZi51c2UgPSAoaW1wbCkgPT4gbmF0aXZlUmFmID0gaW1wbDtcclxucmFmLm5vdyA9IHR5cGVvZiBwZXJmb3JtYW5jZSAhPSBcInVuZGVmaW5lZFwiID8gKCkgPT4gcGVyZm9ybWFuY2Uubm93KCkgOiBEYXRlLm5vdztcclxucmFmLmJhdGNoZWRVcGRhdGVzID0gKGZuKSA9PiBmbigpO1xyXG5yYWYuY2F0Y2ggPSBjb25zb2xlLmVycm9yO1xyXG5yYWYuZnJhbWVMb29wID0gXCJhbHdheXNcIjtcclxucmFmLmFkdmFuY2UgPSAoKSA9PiB7XHJcbiAgaWYgKHJhZi5mcmFtZUxvb3AgIT09IFwiZGVtYW5kXCIpIHtcclxuICAgIGNvbnNvbGUud2FybihcclxuICAgICAgXCJDYW5ub3QgY2FsbCB0aGUgbWFudWFsIGFkdmFuY2VtZW50IG9mIHJhZnogd2hpbHN0IGZyYW1lTG9vcCBpcyBub3Qgc2V0IGFzIGRlbWFuZFwiXHJcbiAgICApO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB1cGRhdGUoKTtcclxuICB9XHJcbn07XHJcbnZhciB0cyA9IC0xO1xyXG52YXIgcGVuZGluZ0NvdW50ID0gMDtcclxudmFyIHN5bmMgPSBmYWxzZTtcclxuZnVuY3Rpb24gc2NoZWR1bGUoZm4sIHF1ZXVlKSB7XHJcbiAgaWYgKHN5bmMpIHtcclxuICAgIHF1ZXVlLmRlbGV0ZShmbik7XHJcbiAgICBmbigwKTtcclxuICB9IGVsc2Uge1xyXG4gICAgcXVldWUuYWRkKGZuKTtcclxuICAgIHN0YXJ0KCk7XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIHN0YXJ0KCkge1xyXG4gIGlmICh0cyA8IDApIHtcclxuICAgIHRzID0gMDtcclxuICAgIGlmIChyYWYuZnJhbWVMb29wICE9PSBcImRlbWFuZFwiKSB7XHJcbiAgICAgIG5hdGl2ZVJhZihsb29wKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuZnVuY3Rpb24gc3RvcCgpIHtcclxuICB0cyA9IC0xO1xyXG59XHJcbmZ1bmN0aW9uIGxvb3AoKSB7XHJcbiAgaWYgKH50cykge1xyXG4gICAgbmF0aXZlUmFmKGxvb3ApO1xyXG4gICAgcmFmLmJhdGNoZWRVcGRhdGVzKHVwZGF0ZSk7XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIHVwZGF0ZSgpIHtcclxuICBjb25zdCBwcmV2VHMgPSB0cztcclxuICB0cyA9IHJhZi5ub3coKTtcclxuICBjb25zdCBjb3VudCA9IGZpbmRUaW1lb3V0KHRzKTtcclxuICBpZiAoY291bnQpIHtcclxuICAgIGVhY2hTYWZlbHkodGltZW91dHMuc3BsaWNlKDAsIGNvdW50KSwgKHQpID0+IHQuaGFuZGxlcigpKTtcclxuICAgIHBlbmRpbmdDb3VudCAtPSBjb3VudDtcclxuICB9XHJcbiAgaWYgKCFwZW5kaW5nQ291bnQpIHtcclxuICAgIHN0b3AoKTtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgb25TdGFydFF1ZXVlLmZsdXNoKCk7XHJcbiAgdXBkYXRlUXVldWUuZmx1c2gocHJldlRzID8gTWF0aC5taW4oNjQsIHRzIC0gcHJldlRzKSA6IDE2LjY2Nyk7XHJcbiAgb25GcmFtZVF1ZXVlLmZsdXNoKCk7XHJcbiAgd3JpdGVRdWV1ZS5mbHVzaCgpO1xyXG4gIG9uRmluaXNoUXVldWUuZmx1c2goKTtcclxufVxyXG5mdW5jdGlvbiBtYWtlUXVldWUoKSB7XHJcbiAgbGV0IG5leHQgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xyXG4gIGxldCBjdXJyZW50ID0gbmV4dDtcclxuICByZXR1cm4ge1xyXG4gICAgYWRkKGZuKSB7XHJcbiAgICAgIHBlbmRpbmdDb3VudCArPSBjdXJyZW50ID09IG5leHQgJiYgIW5leHQuaGFzKGZuKSA/IDEgOiAwO1xyXG4gICAgICBuZXh0LmFkZChmbik7XHJcbiAgICB9LFxyXG4gICAgZGVsZXRlKGZuKSB7XHJcbiAgICAgIHBlbmRpbmdDb3VudCAtPSBjdXJyZW50ID09IG5leHQgJiYgbmV4dC5oYXMoZm4pID8gMSA6IDA7XHJcbiAgICAgIHJldHVybiBuZXh0LmRlbGV0ZShmbik7XHJcbiAgICB9LFxyXG4gICAgZmx1c2goYXJnKSB7XHJcbiAgICAgIGlmIChjdXJyZW50LnNpemUpIHtcclxuICAgICAgICBuZXh0ID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcclxuICAgICAgICBwZW5kaW5nQ291bnQgLT0gY3VycmVudC5zaXplO1xyXG4gICAgICAgIGVhY2hTYWZlbHkoY3VycmVudCwgKGZuKSA9PiBmbihhcmcpICYmIG5leHQuYWRkKGZuKSk7XHJcbiAgICAgICAgcGVuZGluZ0NvdW50ICs9IG5leHQuc2l6ZTtcclxuICAgICAgICBjdXJyZW50ID0gbmV4dDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuZnVuY3Rpb24gZWFjaFNhZmVseSh2YWx1ZXMsIGVhY2gpIHtcclxuICB2YWx1ZXMuZm9yRWFjaCgodmFsdWUpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGVhY2godmFsdWUpO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICByYWYuY2F0Y2goZSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxudmFyIF9fcmFmID0ge1xyXG4gIC8qKiBUaGUgbnVtYmVyIG9mIHBlbmRpbmcgdGFza3MgKi9cclxuICBjb3VudCgpIHtcclxuICAgIHJldHVybiBwZW5kaW5nQ291bnQ7XHJcbiAgfSxcclxuICAvKiogV2hldGhlciB0aGVyZSdzIGEgcmFmIHVwZGF0ZSBsb29wIHJ1bm5pbmcgKi9cclxuICBpc1J1bm5pbmcoKSB7XHJcbiAgICByZXR1cm4gdHMgPj0gMDtcclxuICB9LFxyXG4gIC8qKiBDbGVhciBpbnRlcm5hbCBzdGF0ZS4gTmV2ZXIgY2FsbCBmcm9tIHVwZGF0ZSBsb29wISAqL1xyXG4gIGNsZWFyKCkge1xyXG4gICAgdHMgPSAtMTtcclxuICAgIHRpbWVvdXRzID0gW107XHJcbiAgICBvblN0YXJ0UXVldWUgPSBtYWtlUXVldWUoKTtcclxuICAgIHVwZGF0ZVF1ZXVlID0gbWFrZVF1ZXVlKCk7XHJcbiAgICBvbkZyYW1lUXVldWUgPSBtYWtlUXVldWUoKTtcclxuICAgIHdyaXRlUXVldWUgPSBtYWtlUXVldWUoKTtcclxuICAgIG9uRmluaXNoUXVldWUgPSBtYWtlUXVldWUoKTtcclxuICAgIHBlbmRpbmdDb3VudCA9IDA7XHJcbiAgfVxyXG59O1xyXG5leHBvcnQge1xyXG4gIF9fcmFmLFxyXG4gIHJhZlxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1zcHJpbmdfcmFmei5tb2Rlcm4ubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-spring/rafz/dist/react-spring_rafz.modern.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-spring/shared/dist/react-spring_shared.modern.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@react-spring/shared/dist/react-spring_shared.modern.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FluidValue: () => (/* binding */ FluidValue),\n/* harmony export */   Globals: () => (/* binding */ globals_exports),\n/* harmony export */   addFluidObserver: () => (/* binding */ addFluidObserver),\n/* harmony export */   callFluidObserver: () => (/* binding */ callFluidObserver),\n/* harmony export */   callFluidObservers: () => (/* binding */ callFluidObservers),\n/* harmony export */   clamp: () => (/* binding */ clamp),\n/* harmony export */   colorToRgba: () => (/* binding */ colorToRgba),\n/* harmony export */   colors: () => (/* binding */ colors2),\n/* harmony export */   createInterpolator: () => (/* binding */ createInterpolator),\n/* harmony export */   createStringInterpolator: () => (/* binding */ createStringInterpolator2),\n/* harmony export */   defineHidden: () => (/* binding */ defineHidden),\n/* harmony export */   deprecateDirectCall: () => (/* binding */ deprecateDirectCall),\n/* harmony export */   deprecateInterpolate: () => (/* binding */ deprecateInterpolate),\n/* harmony export */   each: () => (/* binding */ each),\n/* harmony export */   eachProp: () => (/* binding */ eachProp),\n/* harmony export */   easings: () => (/* binding */ easings),\n/* harmony export */   flush: () => (/* binding */ flush),\n/* harmony export */   flushCalls: () => (/* binding */ flushCalls),\n/* harmony export */   frameLoop: () => (/* binding */ frameLoop),\n/* harmony export */   getFluidObservers: () => (/* binding */ getFluidObservers),\n/* harmony export */   getFluidValue: () => (/* binding */ getFluidValue),\n/* harmony export */   hasFluidValue: () => (/* binding */ hasFluidValue),\n/* harmony export */   hex3: () => (/* binding */ hex3),\n/* harmony export */   hex4: () => (/* binding */ hex4),\n/* harmony export */   hex6: () => (/* binding */ hex6),\n/* harmony export */   hex8: () => (/* binding */ hex8),\n/* harmony export */   hsl: () => (/* binding */ hsl),\n/* harmony export */   hsla: () => (/* binding */ hsla),\n/* harmony export */   is: () => (/* binding */ is),\n/* harmony export */   isAnimatedString: () => (/* binding */ isAnimatedString),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isSSR: () => (/* binding */ isSSR),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   onResize: () => (/* binding */ onResize),\n/* harmony export */   onScroll: () => (/* binding */ onScroll),\n/* harmony export */   once: () => (/* binding */ once),\n/* harmony export */   prefix: () => (/* binding */ prefix),\n/* harmony export */   raf: () => (/* reexport safe */ _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf),\n/* harmony export */   removeFluidObserver: () => (/* binding */ removeFluidObserver),\n/* harmony export */   rgb: () => (/* binding */ rgb),\n/* harmony export */   rgba: () => (/* binding */ rgba),\n/* harmony export */   setFluidGetter: () => (/* binding */ setFluidGetter),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   useConstant: () => (/* binding */ useConstant),\n/* harmony export */   useForceUpdate: () => (/* binding */ useForceUpdate),\n/* harmony export */   useIsomorphicLayoutEffect: () => (/* binding */ useIsomorphicLayoutEffect),\n/* harmony export */   useMemoOne: () => (/* binding */ useMemoOne),\n/* harmony export */   useOnce: () => (/* binding */ useOnce),\n/* harmony export */   usePrev: () => (/* binding */ usePrev),\n/* harmony export */   useReducedMotion: () => (/* binding */ useReducedMotion)\n/* harmony export */ });\n/* harmony import */ var _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-spring/rafz */ \"(ssr)/./node_modules/@react-spring/rafz/dist/react-spring_rafz.modern.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar __defProp = Object.defineProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\n\r\n// src/globals.ts\r\nvar globals_exports = {};\r\n__export(globals_exports, {\r\n  assign: () => assign,\r\n  colors: () => colors,\r\n  createStringInterpolator: () => createStringInterpolator,\r\n  skipAnimation: () => skipAnimation,\r\n  to: () => to,\r\n  willAdvance: () => willAdvance\r\n});\r\n\r\n\r\n// src/helpers.ts\r\nfunction noop() {\r\n}\r\nvar defineHidden = (obj, key, value) => Object.defineProperty(obj, key, { value, writable: true, configurable: true });\r\nvar is = {\r\n  arr: Array.isArray,\r\n  obj: (a) => !!a && a.constructor.name === \"Object\",\r\n  fun: (a) => typeof a === \"function\",\r\n  str: (a) => typeof a === \"string\",\r\n  num: (a) => typeof a === \"number\",\r\n  und: (a) => a === void 0\r\n};\r\nfunction isEqual(a, b) {\r\n  if (is.arr(a)) {\r\n    if (!is.arr(b) || a.length !== b.length)\r\n      return false;\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (a[i] !== b[i])\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n  return a === b;\r\n}\r\nvar each = (obj, fn) => obj.forEach(fn);\r\nfunction eachProp(obj, fn, ctx) {\r\n  if (is.arr(obj)) {\r\n    for (let i = 0; i < obj.length; i++) {\r\n      fn.call(ctx, obj[i], `${i}`);\r\n    }\r\n    return;\r\n  }\r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      fn.call(ctx, obj[key], key);\r\n    }\r\n  }\r\n}\r\nvar toArray = (a) => is.und(a) ? [] : is.arr(a) ? a : [a];\r\nfunction flush(queue, iterator) {\r\n  if (queue.size) {\r\n    const items = Array.from(queue);\r\n    queue.clear();\r\n    each(items, iterator);\r\n  }\r\n}\r\nvar flushCalls = (queue, ...args) => flush(queue, (fn) => fn(...args));\r\nvar isSSR = () => typeof window === \"undefined\" || !window.navigator || /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent);\r\n\r\n// src/globals.ts\r\nvar createStringInterpolator;\r\nvar to;\r\nvar colors = null;\r\nvar skipAnimation = false;\r\nvar willAdvance = noop;\r\nvar assign = (globals) => {\r\n  if (globals.to)\r\n    to = globals.to;\r\n  if (globals.now)\r\n    _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf.now = globals.now;\r\n  if (globals.colors !== void 0)\r\n    colors = globals.colors;\r\n  if (globals.skipAnimation != null)\r\n    skipAnimation = globals.skipAnimation;\r\n  if (globals.createStringInterpolator)\r\n    createStringInterpolator = globals.createStringInterpolator;\r\n  if (globals.requestAnimationFrame)\r\n    _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf.use(globals.requestAnimationFrame);\r\n  if (globals.batchedUpdates)\r\n    _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf.batchedUpdates = globals.batchedUpdates;\r\n  if (globals.willAdvance)\r\n    willAdvance = globals.willAdvance;\r\n  if (globals.frameLoop)\r\n    _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf.frameLoop = globals.frameLoop;\r\n};\r\n\r\n// src/FrameLoop.ts\r\n\r\nvar startQueue = /* @__PURE__ */ new Set();\r\nvar currentFrame = [];\r\nvar prevFrame = [];\r\nvar priority = 0;\r\nvar frameLoop = {\r\n  get idle() {\r\n    return !startQueue.size && !currentFrame.length;\r\n  },\r\n  /** Advance the given animation on every frame until idle. */\r\n  start(animation) {\r\n    if (priority > animation.priority) {\r\n      startQueue.add(animation);\r\n      _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf.onStart(flushStartQueue);\r\n    } else {\r\n      startSafely(animation);\r\n      (0,_react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf)(advance);\r\n    }\r\n  },\r\n  /** Advance all animations by the given time. */\r\n  advance,\r\n  /** Call this when an animation's priority changes. */\r\n  sort(animation) {\r\n    if (priority) {\r\n      _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf.onFrame(() => frameLoop.sort(animation));\r\n    } else {\r\n      const prevIndex = currentFrame.indexOf(animation);\r\n      if (~prevIndex) {\r\n        currentFrame.splice(prevIndex, 1);\r\n        startUnsafely(animation);\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * Clear all animations. For testing purposes.\r\n   *\r\n   * ☠️ Never call this from within the frameloop.\r\n   */\r\n  clear() {\r\n    currentFrame = [];\r\n    startQueue.clear();\r\n  }\r\n};\r\nfunction flushStartQueue() {\r\n  startQueue.forEach(startSafely);\r\n  startQueue.clear();\r\n  (0,_react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf)(advance);\r\n}\r\nfunction startSafely(animation) {\r\n  if (!currentFrame.includes(animation))\r\n    startUnsafely(animation);\r\n}\r\nfunction startUnsafely(animation) {\r\n  currentFrame.splice(\r\n    findIndex(currentFrame, (other) => other.priority > animation.priority),\r\n    0,\r\n    animation\r\n  );\r\n}\r\nfunction advance(dt) {\r\n  const nextFrame = prevFrame;\r\n  for (let i = 0; i < currentFrame.length; i++) {\r\n    const animation = currentFrame[i];\r\n    priority = animation.priority;\r\n    if (!animation.idle) {\r\n      willAdvance(animation);\r\n      animation.advance(dt);\r\n      if (!animation.idle) {\r\n        nextFrame.push(animation);\r\n      }\r\n    }\r\n  }\r\n  priority = 0;\r\n  prevFrame = currentFrame;\r\n  prevFrame.length = 0;\r\n  currentFrame = nextFrame;\r\n  return currentFrame.length > 0;\r\n}\r\nfunction findIndex(arr, test) {\r\n  const index = arr.findIndex(test);\r\n  return index < 0 ? arr.length : index;\r\n}\r\n\r\n// src/clamp.ts\r\nvar clamp = (min, max, v) => Math.min(Math.max(v, min), max);\r\n\r\n// src/colors.ts\r\nvar colors2 = {\r\n  transparent: 0,\r\n  aliceblue: 4042850303,\r\n  antiquewhite: 4209760255,\r\n  aqua: 16777215,\r\n  aquamarine: 2147472639,\r\n  azure: 4043309055,\r\n  beige: 4126530815,\r\n  bisque: 4293182719,\r\n  black: 255,\r\n  blanchedalmond: 4293643775,\r\n  blue: 65535,\r\n  blueviolet: 2318131967,\r\n  brown: 2771004159,\r\n  burlywood: 3736635391,\r\n  burntsienna: 3934150143,\r\n  cadetblue: 1604231423,\r\n  chartreuse: 2147418367,\r\n  chocolate: 3530104575,\r\n  coral: 4286533887,\r\n  cornflowerblue: 1687547391,\r\n  cornsilk: 4294499583,\r\n  crimson: 3692313855,\r\n  cyan: 16777215,\r\n  darkblue: 35839,\r\n  darkcyan: 9145343,\r\n  darkgoldenrod: 3095792639,\r\n  darkgray: 2846468607,\r\n  darkgreen: 6553855,\r\n  darkgrey: 2846468607,\r\n  darkkhaki: 3182914559,\r\n  darkmagenta: 2332068863,\r\n  darkolivegreen: 1433087999,\r\n  darkorange: 4287365375,\r\n  darkorchid: 2570243327,\r\n  darkred: 2332033279,\r\n  darksalmon: 3918953215,\r\n  darkseagreen: 2411499519,\r\n  darkslateblue: 1211993087,\r\n  darkslategray: 793726975,\r\n  darkslategrey: 793726975,\r\n  darkturquoise: 13554175,\r\n  darkviolet: 2483082239,\r\n  deeppink: 4279538687,\r\n  deepskyblue: 12582911,\r\n  dimgray: 1768516095,\r\n  dimgrey: 1768516095,\r\n  dodgerblue: 512819199,\r\n  firebrick: 2988581631,\r\n  floralwhite: 4294635775,\r\n  forestgreen: 579543807,\r\n  fuchsia: 4278255615,\r\n  gainsboro: 3705462015,\r\n  ghostwhite: 4177068031,\r\n  gold: 4292280575,\r\n  goldenrod: 3668254975,\r\n  gray: 2155905279,\r\n  green: 8388863,\r\n  greenyellow: 2919182335,\r\n  grey: 2155905279,\r\n  honeydew: 4043305215,\r\n  hotpink: 4285117695,\r\n  indianred: 3445382399,\r\n  indigo: 1258324735,\r\n  ivory: 4294963455,\r\n  khaki: 4041641215,\r\n  lavender: 3873897215,\r\n  lavenderblush: 4293981695,\r\n  lawngreen: 2096890111,\r\n  lemonchiffon: 4294626815,\r\n  lightblue: 2916673279,\r\n  lightcoral: 4034953471,\r\n  lightcyan: 3774873599,\r\n  lightgoldenrodyellow: 4210742015,\r\n  lightgray: 3553874943,\r\n  lightgreen: 2431553791,\r\n  lightgrey: 3553874943,\r\n  lightpink: 4290167295,\r\n  lightsalmon: 4288707327,\r\n  lightseagreen: 548580095,\r\n  lightskyblue: 2278488831,\r\n  lightslategray: 2005441023,\r\n  lightslategrey: 2005441023,\r\n  lightsteelblue: 2965692159,\r\n  lightyellow: 4294959359,\r\n  lime: 16711935,\r\n  limegreen: 852308735,\r\n  linen: 4210091775,\r\n  magenta: 4278255615,\r\n  maroon: 2147483903,\r\n  mediumaquamarine: 1724754687,\r\n  mediumblue: 52735,\r\n  mediumorchid: 3126187007,\r\n  mediumpurple: 2473647103,\r\n  mediumseagreen: 1018393087,\r\n  mediumslateblue: 2070474495,\r\n  mediumspringgreen: 16423679,\r\n  mediumturquoise: 1221709055,\r\n  mediumvioletred: 3340076543,\r\n  midnightblue: 421097727,\r\n  mintcream: 4127193855,\r\n  mistyrose: 4293190143,\r\n  moccasin: 4293178879,\r\n  navajowhite: 4292783615,\r\n  navy: 33023,\r\n  oldlace: 4260751103,\r\n  olive: 2155872511,\r\n  olivedrab: 1804477439,\r\n  orange: 4289003775,\r\n  orangered: 4282712319,\r\n  orchid: 3664828159,\r\n  palegoldenrod: 4008225535,\r\n  palegreen: 2566625535,\r\n  paleturquoise: 2951671551,\r\n  palevioletred: 3681588223,\r\n  papayawhip: 4293907967,\r\n  peachpuff: 4292524543,\r\n  peru: 3448061951,\r\n  pink: 4290825215,\r\n  plum: 3718307327,\r\n  powderblue: 2967529215,\r\n  purple: 2147516671,\r\n  rebeccapurple: 1714657791,\r\n  red: 4278190335,\r\n  rosybrown: 3163525119,\r\n  royalblue: 1097458175,\r\n  saddlebrown: 2336560127,\r\n  salmon: 4202722047,\r\n  sandybrown: 4104413439,\r\n  seagreen: 780883967,\r\n  seashell: 4294307583,\r\n  sienna: 2689740287,\r\n  silver: 3233857791,\r\n  skyblue: 2278484991,\r\n  slateblue: 1784335871,\r\n  slategray: 1887473919,\r\n  slategrey: 1887473919,\r\n  snow: 4294638335,\r\n  springgreen: 16744447,\r\n  steelblue: 1182971135,\r\n  tan: 3535047935,\r\n  teal: 8421631,\r\n  thistle: 3636451583,\r\n  tomato: 4284696575,\r\n  turquoise: 1088475391,\r\n  violet: 4001558271,\r\n  wheat: 4125012991,\r\n  white: 4294967295,\r\n  whitesmoke: 4126537215,\r\n  yellow: 4294902015,\r\n  yellowgreen: 2597139199\r\n};\r\n\r\n// src/colorMatchers.ts\r\nvar NUMBER = \"[-+]?\\\\d*\\\\.?\\\\d+\";\r\nvar PERCENTAGE = NUMBER + \"%\";\r\nfunction call(...parts) {\r\n  return \"\\\\(\\\\s*(\" + parts.join(\")\\\\s*,\\\\s*(\") + \")\\\\s*\\\\)\";\r\n}\r\nvar rgb = new RegExp(\"rgb\" + call(NUMBER, NUMBER, NUMBER));\r\nvar rgba = new RegExp(\"rgba\" + call(NUMBER, NUMBER, NUMBER, NUMBER));\r\nvar hsl = new RegExp(\"hsl\" + call(NUMBER, PERCENTAGE, PERCENTAGE));\r\nvar hsla = new RegExp(\r\n  \"hsla\" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)\r\n);\r\nvar hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\r\nvar hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\r\nvar hex6 = /^#([0-9a-fA-F]{6})$/;\r\nvar hex8 = /^#([0-9a-fA-F]{8})$/;\r\n\r\n// src/normalizeColor.ts\r\nfunction normalizeColor(color) {\r\n  let match;\r\n  if (typeof color === \"number\") {\r\n    return color >>> 0 === color && color >= 0 && color <= 4294967295 ? color : null;\r\n  }\r\n  if (match = hex6.exec(color))\r\n    return parseInt(match[1] + \"ff\", 16) >>> 0;\r\n  if (colors && colors[color] !== void 0) {\r\n    return colors[color];\r\n  }\r\n  if (match = rgb.exec(color)) {\r\n    return (parse255(match[1]) << 24 | // r\r\n    parse255(match[2]) << 16 | // g\r\n    parse255(match[3]) << 8 | // b\r\n    255) >>> // a\r\n    0;\r\n  }\r\n  if (match = rgba.exec(color)) {\r\n    return (parse255(match[1]) << 24 | // r\r\n    parse255(match[2]) << 16 | // g\r\n    parse255(match[3]) << 8 | // b\r\n    parse1(match[4])) >>> // a\r\n    0;\r\n  }\r\n  if (match = hex3.exec(color)) {\r\n    return parseInt(\r\n      match[1] + match[1] + // r\r\n      match[2] + match[2] + // g\r\n      match[3] + match[3] + // b\r\n      \"ff\",\r\n      // a\r\n      16\r\n    ) >>> 0;\r\n  }\r\n  if (match = hex8.exec(color))\r\n    return parseInt(match[1], 16) >>> 0;\r\n  if (match = hex4.exec(color)) {\r\n    return parseInt(\r\n      match[1] + match[1] + // r\r\n      match[2] + match[2] + // g\r\n      match[3] + match[3] + // b\r\n      match[4] + match[4],\r\n      // a\r\n      16\r\n    ) >>> 0;\r\n  }\r\n  if (match = hsl.exec(color)) {\r\n    return (hslToRgb(\r\n      parse360(match[1]),\r\n      // h\r\n      parsePercentage(match[2]),\r\n      // s\r\n      parsePercentage(match[3])\r\n      // l\r\n    ) | 255) >>> // a\r\n    0;\r\n  }\r\n  if (match = hsla.exec(color)) {\r\n    return (hslToRgb(\r\n      parse360(match[1]),\r\n      // h\r\n      parsePercentage(match[2]),\r\n      // s\r\n      parsePercentage(match[3])\r\n      // l\r\n    ) | parse1(match[4])) >>> // a\r\n    0;\r\n  }\r\n  return null;\r\n}\r\nfunction hue2rgb(p, q, t) {\r\n  if (t < 0)\r\n    t += 1;\r\n  if (t > 1)\r\n    t -= 1;\r\n  if (t < 1 / 6)\r\n    return p + (q - p) * 6 * t;\r\n  if (t < 1 / 2)\r\n    return q;\r\n  if (t < 2 / 3)\r\n    return p + (q - p) * (2 / 3 - t) * 6;\r\n  return p;\r\n}\r\nfunction hslToRgb(h, s, l) {\r\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n  const p = 2 * l - q;\r\n  const r = hue2rgb(p, q, h + 1 / 3);\r\n  const g = hue2rgb(p, q, h);\r\n  const b = hue2rgb(p, q, h - 1 / 3);\r\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\r\n}\r\nfunction parse255(str) {\r\n  const int = parseInt(str, 10);\r\n  if (int < 0)\r\n    return 0;\r\n  if (int > 255)\r\n    return 255;\r\n  return int;\r\n}\r\nfunction parse360(str) {\r\n  const int = parseFloat(str);\r\n  return (int % 360 + 360) % 360 / 360;\r\n}\r\nfunction parse1(str) {\r\n  const num = parseFloat(str);\r\n  if (num < 0)\r\n    return 0;\r\n  if (num > 1)\r\n    return 255;\r\n  return Math.round(num * 255);\r\n}\r\nfunction parsePercentage(str) {\r\n  const int = parseFloat(str);\r\n  if (int < 0)\r\n    return 0;\r\n  if (int > 100)\r\n    return 1;\r\n  return int / 100;\r\n}\r\n\r\n// src/colorToRgba.ts\r\nfunction colorToRgba(input) {\r\n  let int32Color = normalizeColor(input);\r\n  if (int32Color === null)\r\n    return input;\r\n  int32Color = int32Color || 0;\r\n  const r = (int32Color & 4278190080) >>> 24;\r\n  const g = (int32Color & 16711680) >>> 16;\r\n  const b = (int32Color & 65280) >>> 8;\r\n  const a = (int32Color & 255) / 255;\r\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n}\r\n\r\n// src/createInterpolator.ts\r\nvar createInterpolator = (range, output, extrapolate) => {\r\n  if (is.fun(range)) {\r\n    return range;\r\n  }\r\n  if (is.arr(range)) {\r\n    return createInterpolator({\r\n      range,\r\n      output,\r\n      extrapolate\r\n    });\r\n  }\r\n  if (is.str(range.output[0])) {\r\n    return createStringInterpolator(range);\r\n  }\r\n  const config = range;\r\n  const outputRange = config.output;\r\n  const inputRange = config.range || [0, 1];\r\n  const extrapolateLeft = config.extrapolateLeft || config.extrapolate || \"extend\";\r\n  const extrapolateRight = config.extrapolateRight || config.extrapolate || \"extend\";\r\n  const easing = config.easing || ((t) => t);\r\n  return (input) => {\r\n    const range2 = findRange(input, inputRange);\r\n    return interpolate(\r\n      input,\r\n      inputRange[range2],\r\n      inputRange[range2 + 1],\r\n      outputRange[range2],\r\n      outputRange[range2 + 1],\r\n      easing,\r\n      extrapolateLeft,\r\n      extrapolateRight,\r\n      config.map\r\n    );\r\n  };\r\n};\r\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\r\n  let result = map ? map(input) : input;\r\n  if (result < inputMin) {\r\n    if (extrapolateLeft === \"identity\")\r\n      return result;\r\n    else if (extrapolateLeft === \"clamp\")\r\n      result = inputMin;\r\n  }\r\n  if (result > inputMax) {\r\n    if (extrapolateRight === \"identity\")\r\n      return result;\r\n    else if (extrapolateRight === \"clamp\")\r\n      result = inputMax;\r\n  }\r\n  if (outputMin === outputMax)\r\n    return outputMin;\r\n  if (inputMin === inputMax)\r\n    return input <= inputMin ? outputMin : outputMax;\r\n  if (inputMin === -Infinity)\r\n    result = -result;\r\n  else if (inputMax === Infinity)\r\n    result = result - inputMin;\r\n  else\r\n    result = (result - inputMin) / (inputMax - inputMin);\r\n  result = easing(result);\r\n  if (outputMin === -Infinity)\r\n    result = -result;\r\n  else if (outputMax === Infinity)\r\n    result = result + outputMin;\r\n  else\r\n    result = result * (outputMax - outputMin) + outputMin;\r\n  return result;\r\n}\r\nfunction findRange(input, inputRange) {\r\n  for (var i = 1; i < inputRange.length - 1; ++i)\r\n    if (inputRange[i] >= input)\r\n      break;\r\n  return i - 1;\r\n}\r\n\r\n// src/easings.ts\r\nvar steps = (steps2, direction = \"end\") => (progress2) => {\r\n  progress2 = direction === \"end\" ? Math.min(progress2, 0.999) : Math.max(progress2, 1e-3);\r\n  const expanded = progress2 * steps2;\r\n  const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\r\n  return clamp(0, 1, rounded / steps2);\r\n};\r\nvar c1 = 1.70158;\r\nvar c2 = c1 * 1.525;\r\nvar c3 = c1 + 1;\r\nvar c4 = 2 * Math.PI / 3;\r\nvar c5 = 2 * Math.PI / 4.5;\r\nvar bounceOut = (x) => {\r\n  const n1 = 7.5625;\r\n  const d1 = 2.75;\r\n  if (x < 1 / d1) {\r\n    return n1 * x * x;\r\n  } else if (x < 2 / d1) {\r\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\r\n  } else if (x < 2.5 / d1) {\r\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\r\n  } else {\r\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\r\n  }\r\n};\r\nvar easings = {\r\n  linear: (x) => x,\r\n  easeInQuad: (x) => x * x,\r\n  easeOutQuad: (x) => 1 - (1 - x) * (1 - x),\r\n  easeInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\r\n  easeInCubic: (x) => x * x * x,\r\n  easeOutCubic: (x) => 1 - Math.pow(1 - x, 3),\r\n  easeInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\r\n  easeInQuart: (x) => x * x * x * x,\r\n  easeOutQuart: (x) => 1 - Math.pow(1 - x, 4),\r\n  easeInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\r\n  easeInQuint: (x) => x * x * x * x * x,\r\n  easeOutQuint: (x) => 1 - Math.pow(1 - x, 5),\r\n  easeInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\r\n  easeInSine: (x) => 1 - Math.cos(x * Math.PI / 2),\r\n  easeOutSine: (x) => Math.sin(x * Math.PI / 2),\r\n  easeInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\r\n  easeInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\r\n  easeOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\r\n  easeInOutExpo: (x) => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2,\r\n  easeInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\r\n  easeOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\r\n  easeInOutCirc: (x) => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\r\n  easeInBack: (x) => c3 * x * x * x - c1 * x * x,\r\n  easeOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\r\n  easeInOutBack: (x) => x < 0.5 ? Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2) / 2 : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2,\r\n  easeInElastic: (x) => x === 0 ? 0 : x === 1 ? 1 : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4),\r\n  easeOutElastic: (x) => x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1,\r\n  easeInOutElastic: (x) => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2 : Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5) / 2 + 1,\r\n  easeInBounce: (x) => 1 - bounceOut(1 - x),\r\n  easeOutBounce: bounceOut,\r\n  easeInOutBounce: (x) => x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2,\r\n  steps\r\n};\r\n\r\n// src/fluids.ts\r\nvar $get = Symbol.for(\"FluidValue.get\");\r\nvar $observers = Symbol.for(\"FluidValue.observers\");\r\nvar hasFluidValue = (arg) => Boolean(arg && arg[$get]);\r\nvar getFluidValue = (arg) => arg && arg[$get] ? arg[$get]() : arg;\r\nvar getFluidObservers = (target) => target[$observers] || null;\r\nfunction callFluidObserver(observer2, event) {\r\n  if (observer2.eventObserved) {\r\n    observer2.eventObserved(event);\r\n  } else {\r\n    observer2(event);\r\n  }\r\n}\r\nfunction callFluidObservers(target, event) {\r\n  const observers = target[$observers];\r\n  if (observers) {\r\n    observers.forEach((observer2) => {\r\n      callFluidObserver(observer2, event);\r\n    });\r\n  }\r\n}\r\nvar FluidValue = class {\r\n  constructor(get) {\r\n    if (!get && !(get = this.get)) {\r\n      throw Error(\"Unknown getter\");\r\n    }\r\n    setFluidGetter(this, get);\r\n  }\r\n};\r\n$get, $observers;\r\nvar setFluidGetter = (target, get) => setHidden(target, $get, get);\r\nfunction addFluidObserver(target, observer2) {\r\n  if (target[$get]) {\r\n    let observers = target[$observers];\r\n    if (!observers) {\r\n      setHidden(target, $observers, observers = /* @__PURE__ */ new Set());\r\n    }\r\n    if (!observers.has(observer2)) {\r\n      observers.add(observer2);\r\n      if (target.observerAdded) {\r\n        target.observerAdded(observers.size, observer2);\r\n      }\r\n    }\r\n  }\r\n  return observer2;\r\n}\r\nfunction removeFluidObserver(target, observer2) {\r\n  const observers = target[$observers];\r\n  if (observers && observers.has(observer2)) {\r\n    const count = observers.size - 1;\r\n    if (count) {\r\n      observers.delete(observer2);\r\n    } else {\r\n      target[$observers] = null;\r\n    }\r\n    if (target.observerRemoved) {\r\n      target.observerRemoved(count, observer2);\r\n    }\r\n  }\r\n}\r\nvar setHidden = (target, key, value) => Object.defineProperty(target, key, {\r\n  value,\r\n  writable: true,\r\n  configurable: true\r\n});\r\n\r\n// src/regexs.ts\r\nvar numberRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\nvar colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\r\nvar unitRegex = new RegExp(`(${numberRegex.source})(%|[a-z]+)`, \"i\");\r\nvar rgbaRegex = /rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi;\r\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\r\n\r\n// src/variableToRgba.ts\r\nvar variableToRgba = (input) => {\r\n  const [token, fallback] = parseCSSVariable(input);\r\n  if (!token || isSSR()) {\r\n    return input;\r\n  }\r\n  const value = window.getComputedStyle(document.documentElement).getPropertyValue(token);\r\n  if (value) {\r\n    return value.trim();\r\n  } else if (fallback && fallback.startsWith(\"--\")) {\r\n    const value2 = window.getComputedStyle(document.documentElement).getPropertyValue(fallback);\r\n    if (value2) {\r\n      return value2;\r\n    } else {\r\n      return input;\r\n    }\r\n  } else if (fallback && cssVariableRegex.test(fallback)) {\r\n    return variableToRgba(fallback);\r\n  } else if (fallback) {\r\n    return fallback;\r\n  }\r\n  return input;\r\n};\r\nvar parseCSSVariable = (current) => {\r\n  const match = cssVariableRegex.exec(current);\r\n  if (!match)\r\n    return [,];\r\n  const [, token, fallback] = match;\r\n  return [token, fallback];\r\n};\r\n\r\n// src/stringInterpolation.ts\r\nvar namedColorRegex;\r\nvar rgbaRound = (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`;\r\nvar createStringInterpolator2 = (config) => {\r\n  if (!namedColorRegex)\r\n    namedColorRegex = colors ? (\r\n      // match color names, ignore partial matches\r\n      new RegExp(`(${Object.keys(colors).join(\"|\")})(?!\\\\w)`, \"g\")\r\n    ) : (\r\n      // never match\r\n      /^\\b$/\r\n    );\r\n  const output = config.output.map((value) => {\r\n    return getFluidValue(value).replace(cssVariableRegex, variableToRgba).replace(colorRegex, colorToRgba).replace(namedColorRegex, colorToRgba);\r\n  });\r\n  const keyframes = output.map((value) => value.match(numberRegex).map(Number));\r\n  const outputRanges = keyframes[0].map(\r\n    (_, i) => keyframes.map((values) => {\r\n      if (!(i in values)) {\r\n        throw Error('The arity of each \"output\" value must be equal');\r\n      }\r\n      return values[i];\r\n    })\r\n  );\r\n  const interpolators = outputRanges.map(\r\n    (output2) => createInterpolator({ ...config, output: output2 })\r\n  );\r\n  return (input) => {\r\n    const missingUnit = !unitRegex.test(output[0]) && output.find((value) => unitRegex.test(value))?.replace(numberRegex, \"\");\r\n    let i = 0;\r\n    return output[0].replace(\r\n      numberRegex,\r\n      () => `${interpolators[i++](input)}${missingUnit || \"\"}`\r\n    ).replace(rgbaRegex, rgbaRound);\r\n  };\r\n};\r\n\r\n// src/deprecations.ts\r\nvar prefix = \"react-spring: \";\r\nvar once = (fn) => {\r\n  const func = fn;\r\n  let called = false;\r\n  if (typeof func != \"function\") {\r\n    throw new TypeError(`${prefix}once requires a function parameter`);\r\n  }\r\n  return (...args) => {\r\n    if (!called) {\r\n      func(...args);\r\n      called = true;\r\n    }\r\n  };\r\n};\r\nvar warnInterpolate = once(console.warn);\r\nfunction deprecateInterpolate() {\r\n  warnInterpolate(\r\n    `${prefix}The \"interpolate\" function is deprecated in v9 (use \"to\" instead)`\r\n  );\r\n}\r\nvar warnDirectCall = once(console.warn);\r\nfunction deprecateDirectCall() {\r\n  warnDirectCall(\r\n    `${prefix}Directly calling start instead of using the api object is deprecated in v9 (use \".start\" instead), this will be removed in later 0.X.0 versions`\r\n  );\r\n}\r\n\r\n// src/isAnimatedString.ts\r\nfunction isAnimatedString(value) {\r\n  return is.str(value) && (value[0] == \"#\" || /\\d/.test(value) || // Do not identify a CSS variable as an AnimatedString if its SSR\r\n  !isSSR() && cssVariableRegex.test(value) || value in (colors || {}));\r\n}\r\n\r\n// src/dom-events/scroll/index.ts\r\n\r\n\r\n// src/dom-events/resize/resizeElement.ts\r\nvar observer;\r\nvar resizeHandlers = /* @__PURE__ */ new WeakMap();\r\nvar handleObservation = (entries) => entries.forEach(({ target, contentRect }) => {\r\n  return resizeHandlers.get(target)?.forEach((handler) => handler(contentRect));\r\n});\r\nfunction resizeElement(handler, target) {\r\n  if (!observer) {\r\n    if (typeof ResizeObserver !== \"undefined\") {\r\n      observer = new ResizeObserver(handleObservation);\r\n    }\r\n  }\r\n  let elementHandlers = resizeHandlers.get(target);\r\n  if (!elementHandlers) {\r\n    elementHandlers = /* @__PURE__ */ new Set();\r\n    resizeHandlers.set(target, elementHandlers);\r\n  }\r\n  elementHandlers.add(handler);\r\n  if (observer) {\r\n    observer.observe(target);\r\n  }\r\n  return () => {\r\n    const elementHandlers2 = resizeHandlers.get(target);\r\n    if (!elementHandlers2)\r\n      return;\r\n    elementHandlers2.delete(handler);\r\n    if (!elementHandlers2.size && observer) {\r\n      observer.unobserve(target);\r\n    }\r\n  };\r\n}\r\n\r\n// src/dom-events/resize/resizeWindow.ts\r\nvar listeners = /* @__PURE__ */ new Set();\r\nvar cleanupWindowResizeHandler;\r\nvar createResizeHandler = () => {\r\n  const handleResize = () => {\r\n    listeners.forEach(\r\n      (callback) => callback({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      })\r\n    );\r\n  };\r\n  window.addEventListener(\"resize\", handleResize);\r\n  return () => {\r\n    window.removeEventListener(\"resize\", handleResize);\r\n  };\r\n};\r\nvar resizeWindow = (callback) => {\r\n  listeners.add(callback);\r\n  if (!cleanupWindowResizeHandler) {\r\n    cleanupWindowResizeHandler = createResizeHandler();\r\n  }\r\n  return () => {\r\n    listeners.delete(callback);\r\n    if (!listeners.size && cleanupWindowResizeHandler) {\r\n      cleanupWindowResizeHandler();\r\n      cleanupWindowResizeHandler = void 0;\r\n    }\r\n  };\r\n};\r\n\r\n// src/dom-events/resize/index.ts\r\nvar onResize = (callback, { container = document.documentElement } = {}) => {\r\n  if (container === document.documentElement) {\r\n    return resizeWindow(callback);\r\n  } else {\r\n    return resizeElement(callback, container);\r\n  }\r\n};\r\n\r\n// src/progress.ts\r\nvar progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);\r\n\r\n// src/dom-events/scroll/ScrollHandler.ts\r\nvar SCROLL_KEYS = {\r\n  x: {\r\n    length: \"Width\",\r\n    position: \"Left\"\r\n  },\r\n  y: {\r\n    length: \"Height\",\r\n    position: \"Top\"\r\n  }\r\n};\r\nvar ScrollHandler = class {\r\n  constructor(callback, container) {\r\n    this.createAxis = () => ({\r\n      current: 0,\r\n      progress: 0,\r\n      scrollLength: 0\r\n    });\r\n    this.updateAxis = (axisName) => {\r\n      const axis = this.info[axisName];\r\n      const { length, position } = SCROLL_KEYS[axisName];\r\n      axis.current = this.container[`scroll${position}`];\r\n      axis.scrollLength = this.container[`scroll${length}`] - this.container[`client${length}`];\r\n      axis.progress = progress(0, axis.scrollLength, axis.current);\r\n    };\r\n    this.update = () => {\r\n      this.updateAxis(\"x\");\r\n      this.updateAxis(\"y\");\r\n    };\r\n    this.sendEvent = () => {\r\n      this.callback(this.info);\r\n    };\r\n    this.advance = () => {\r\n      this.update();\r\n      this.sendEvent();\r\n    };\r\n    this.callback = callback;\r\n    this.container = container;\r\n    this.info = {\r\n      time: 0,\r\n      x: this.createAxis(),\r\n      y: this.createAxis()\r\n    };\r\n  }\r\n};\r\n\r\n// src/dom-events/scroll/index.ts\r\nvar scrollListeners = /* @__PURE__ */ new WeakMap();\r\nvar resizeListeners = /* @__PURE__ */ new WeakMap();\r\nvar onScrollHandlers = /* @__PURE__ */ new WeakMap();\r\nvar getTarget = (container) => container === document.documentElement ? window : container;\r\nvar onScroll = (callback, { container = document.documentElement } = {}) => {\r\n  let containerHandlers = onScrollHandlers.get(container);\r\n  if (!containerHandlers) {\r\n    containerHandlers = /* @__PURE__ */ new Set();\r\n    onScrollHandlers.set(container, containerHandlers);\r\n  }\r\n  const containerHandler = new ScrollHandler(callback, container);\r\n  containerHandlers.add(containerHandler);\r\n  if (!scrollListeners.has(container)) {\r\n    const listener = () => {\r\n      containerHandlers?.forEach((handler) => handler.advance());\r\n      return true;\r\n    };\r\n    scrollListeners.set(container, listener);\r\n    const target = getTarget(container);\r\n    window.addEventListener(\"resize\", listener, { passive: true });\r\n    if (container !== document.documentElement) {\r\n      resizeListeners.set(container, onResize(listener, { container }));\r\n    }\r\n    target.addEventListener(\"scroll\", listener, { passive: true });\r\n  }\r\n  const animateScroll = scrollListeners.get(container);\r\n  (0,_react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf)(animateScroll);\r\n  return () => {\r\n    _react_spring_rafz__WEBPACK_IMPORTED_MODULE_0__.raf.cancel(animateScroll);\r\n    const containerHandlers2 = onScrollHandlers.get(container);\r\n    if (!containerHandlers2)\r\n      return;\r\n    containerHandlers2.delete(containerHandler);\r\n    if (containerHandlers2.size)\r\n      return;\r\n    const listener = scrollListeners.get(container);\r\n    scrollListeners.delete(container);\r\n    if (listener) {\r\n      getTarget(container).removeEventListener(\"scroll\", listener);\r\n      window.removeEventListener(\"resize\", listener);\r\n      resizeListeners.get(container)?.();\r\n    }\r\n  };\r\n};\r\n\r\n// src/hooks/useConstant.ts\r\n\r\nfunction useConstant(init) {\r\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\r\n  if (ref.current === null) {\r\n    ref.current = init();\r\n  }\r\n  return ref.current;\r\n}\r\n\r\n// src/hooks/useForceUpdate.ts\r\n\r\n\r\n// src/hooks/useIsMounted.ts\r\n\r\n\r\n// src/hooks/useIsomorphicLayoutEffect.ts\r\n\r\nvar useIsomorphicLayoutEffect = isSSR() ? react__WEBPACK_IMPORTED_MODULE_1__.useEffect : react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect;\r\n\r\n// src/hooks/useIsMounted.ts\r\nvar useIsMounted = () => {\r\n  const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n  return isMounted;\r\n};\r\n\r\n// src/hooks/useForceUpdate.ts\r\nfunction useForceUpdate() {\r\n  const update = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)()[1];\r\n  const isMounted = useIsMounted();\r\n  return () => {\r\n    if (isMounted.current) {\r\n      update(Math.random());\r\n    }\r\n  };\r\n}\r\n\r\n// src/hooks/useMemoOne.ts\r\n\r\nfunction useMemoOne(getResult, inputs) {\r\n  const [initial] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\r\n    () => ({\r\n      inputs,\r\n      result: getResult()\r\n    })\r\n  );\r\n  const committed = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\r\n  const prevCache = committed.current;\r\n  let cache = prevCache;\r\n  if (cache) {\r\n    const useCache = Boolean(\r\n      inputs && cache.inputs && areInputsEqual(inputs, cache.inputs)\r\n    );\r\n    if (!useCache) {\r\n      cache = {\r\n        inputs,\r\n        result: getResult()\r\n      };\r\n    }\r\n  } else {\r\n    cache = initial;\r\n  }\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\r\n    committed.current = cache;\r\n    if (prevCache == initial) {\r\n      initial.inputs = initial.result = void 0;\r\n    }\r\n  }, [cache]);\r\n  return cache.result;\r\n}\r\nfunction areInputsEqual(next, prev) {\r\n  if (next.length !== prev.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < next.length; i++) {\r\n    if (next[i] !== prev[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// src/hooks/useOnce.ts\r\n\r\nvar useOnce = (effect) => (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(effect, emptyDeps);\r\nvar emptyDeps = [];\r\n\r\n// src/hooks/usePrev.ts\r\n\r\nfunction usePrev(value) {\r\n  const prevRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\r\n    prevRef.current = value;\r\n  });\r\n  return prevRef.current;\r\n}\r\n\r\n// src/hooks/useReducedMotion.ts\r\n\r\nvar useReducedMotion = () => {\r\n  const [reducedMotion, setReducedMotion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\r\n  useIsomorphicLayoutEffect(() => {\r\n    const mql = window.matchMedia(\"(prefers-reduced-motion)\");\r\n    const handleMediaChange = (e) => {\r\n      setReducedMotion(e.matches);\r\n      assign({\r\n        skipAnimation: e.matches\r\n      });\r\n    };\r\n    handleMediaChange(mql);\r\n    if (mql.addEventListener) {\r\n      mql.addEventListener(\"change\", handleMediaChange);\r\n    } else {\r\n      mql.addListener(handleMediaChange);\r\n    }\r\n    return () => {\r\n      if (mql.removeEventListener) {\r\n        mql.removeEventListener(\"change\", handleMediaChange);\r\n      } else {\r\n        mql.removeListener(handleMediaChange);\r\n      }\r\n    };\r\n  }, []);\r\n  return reducedMotion;\r\n};\r\n\r\n// src/index.ts\r\n\r\n\r\n//# sourceMappingURL=react-spring_shared.modern.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-spring/shared/dist/react-spring_shared.modern.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-spring/types/dist/react-spring_types.modern.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@react-spring/types/dist/react-spring_types.modern.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Any: () => (/* binding */ Any)\n/* harmony export */ });\n// src/utils.ts\r\nvar Any = class {\r\n};\r\n\r\n//# sourceMappingURL=react-spring_types.modern.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXNwcmluZy90eXBlcy9kaXN0L3JlYWN0LXNwcmluZ190eXBlcy5tb2Rlcm4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktYXBwLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1zcHJpbmcvdHlwZXMvZGlzdC9yZWFjdC1zcHJpbmdfdHlwZXMubW9kZXJuLm1qcz8zZjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy50c1xyXG52YXIgQW55ID0gY2xhc3Mge1xyXG59O1xyXG5leHBvcnQge1xyXG4gIEFueVxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1zcHJpbmdfdHlwZXMubW9kZXJuLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-spring/types/dist/react-spring_types.modern.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Any: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Any),\n/* harmony export */   BailSignal: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.BailSignal),\n/* harmony export */   Controller: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Controller),\n/* harmony export */   FrameValue: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.FrameValue),\n/* harmony export */   Globals: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Globals),\n/* harmony export */   Interpolation: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Interpolation),\n/* harmony export */   Spring: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Spring),\n/* harmony export */   SpringContext: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.SpringContext),\n/* harmony export */   SpringRef: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.SpringRef),\n/* harmony export */   SpringValue: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.SpringValue),\n/* harmony export */   Trail: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Trail),\n/* harmony export */   Transition: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Transition),\n/* harmony export */   a: () => (/* binding */ animated),\n/* harmony export */   animated: () => (/* binding */ animated),\n/* harmony export */   config: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.config),\n/* harmony export */   createInterpolator: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.createInterpolator),\n/* harmony export */   easings: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.easings),\n/* harmony export */   inferTo: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.inferTo),\n/* harmony export */   interpolate: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.interpolate),\n/* harmony export */   to: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.to),\n/* harmony export */   update: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.update),\n/* harmony export */   useChain: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useChain),\n/* harmony export */   useInView: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useInView),\n/* harmony export */   useIsomorphicLayoutEffect: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useIsomorphicLayoutEffect),\n/* harmony export */   useReducedMotion: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useReducedMotion),\n/* harmony export */   useResize: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useResize),\n/* harmony export */   useScroll: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useScroll),\n/* harmony export */   useSpring: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useSpring),\n/* harmony export */   useSpringRef: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useSpringRef),\n/* harmony export */   useSpringValue: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useSpringValue),\n/* harmony export */   useSprings: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useSprings),\n/* harmony export */   useTrail: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useTrail),\n/* harmony export */   useTransition: () => (/* reexport safe */ _react_spring_core__WEBPACK_IMPORTED_MODULE_0__.useTransition)\n/* harmony export */ });\n/* harmony import */ var _react_spring_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-spring/core */ \"(ssr)/./node_modules/@react-spring/core/dist/react-spring_core.modern.mjs\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-spring/shared */ \"(ssr)/./node_modules/@react-spring/shared/dist/react-spring_shared.modern.mjs\");\n/* harmony import */ var _react_spring_animated__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-spring/animated */ \"(ssr)/./node_modules/@react-spring/animated/dist/react-spring_animated.modern.mjs\");\n// src/index.ts\r\n\r\n\r\n\r\n\r\n\r\n// src/applyAnimatedValues.ts\r\nvar isCustomPropRE = /^--/;\r\nfunction dangerousStyleValue(name, value) {\r\n  if (value == null || typeof value === \"boolean\" || value === \"\")\r\n    return \"\";\r\n  if (typeof value === \"number\" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))\r\n    return value + \"px\";\r\n  return (\"\" + value).trim();\r\n}\r\nvar attributeCache = {};\r\nfunction applyAnimatedValues(instance, props) {\r\n  if (!instance.nodeType || !instance.setAttribute) {\r\n    return false;\r\n  }\r\n  const isFilterElement = instance.nodeName === \"filter\" || instance.parentNode && instance.parentNode.nodeName === \"filter\";\r\n  const {\r\n    className,\r\n    style,\r\n    children,\r\n    scrollTop,\r\n    scrollLeft,\r\n    viewBox,\r\n    ...attributes\r\n  } = props;\r\n  const values = Object.values(attributes);\r\n  const names = Object.keys(attributes).map(\r\n    (name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(\r\n      /([A-Z])/g,\r\n      // Attributes are written in dash case\r\n      (n) => \"-\" + n.toLowerCase()\r\n    ))\r\n  );\r\n  if (children !== void 0) {\r\n    instance.textContent = children;\r\n  }\r\n  for (const name in style) {\r\n    if (style.hasOwnProperty(name)) {\r\n      const value = dangerousStyleValue(name, style[name]);\r\n      if (isCustomPropRE.test(name)) {\r\n        instance.style.setProperty(name, value);\r\n      } else {\r\n        instance.style[name] = value;\r\n      }\r\n    }\r\n  }\r\n  names.forEach((name, i) => {\r\n    instance.setAttribute(name, values[i]);\r\n  });\r\n  if (className !== void 0) {\r\n    instance.className = className;\r\n  }\r\n  if (scrollTop !== void 0) {\r\n    instance.scrollTop = scrollTop;\r\n  }\r\n  if (scrollLeft !== void 0) {\r\n    instance.scrollLeft = scrollLeft;\r\n  }\r\n  if (viewBox !== void 0) {\r\n    instance.setAttribute(\"viewBox\", viewBox);\r\n  }\r\n}\r\nvar isUnitlessNumber = {\r\n  animationIterationCount: true,\r\n  borderImageOutset: true,\r\n  borderImageSlice: true,\r\n  borderImageWidth: true,\r\n  boxFlex: true,\r\n  boxFlexGroup: true,\r\n  boxOrdinalGroup: true,\r\n  columnCount: true,\r\n  columns: true,\r\n  flex: true,\r\n  flexGrow: true,\r\n  flexPositive: true,\r\n  flexShrink: true,\r\n  flexNegative: true,\r\n  flexOrder: true,\r\n  gridRow: true,\r\n  gridRowEnd: true,\r\n  gridRowSpan: true,\r\n  gridRowStart: true,\r\n  gridColumn: true,\r\n  gridColumnEnd: true,\r\n  gridColumnSpan: true,\r\n  gridColumnStart: true,\r\n  fontWeight: true,\r\n  lineClamp: true,\r\n  lineHeight: true,\r\n  opacity: true,\r\n  order: true,\r\n  orphans: true,\r\n  tabSize: true,\r\n  widows: true,\r\n  zIndex: true,\r\n  zoom: true,\r\n  // SVG-related properties\r\n  fillOpacity: true,\r\n  floodOpacity: true,\r\n  stopOpacity: true,\r\n  strokeDasharray: true,\r\n  strokeDashoffset: true,\r\n  strokeMiterlimit: true,\r\n  strokeOpacity: true,\r\n  strokeWidth: true\r\n};\r\nvar prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\r\nvar prefixes = [\"Webkit\", \"Ms\", \"Moz\", \"O\"];\r\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\r\n  prefixes.forEach((prefix) => acc[prefixKey(prefix, prop)] = acc[prop]);\r\n  return acc;\r\n}, isUnitlessNumber);\r\n\r\n// src/AnimatedStyle.ts\r\n\r\n\r\nvar domTransforms = /^(matrix|translate|scale|rotate|skew)/;\r\nvar pxTransforms = /^(translate)/;\r\nvar degTransforms = /^(rotate|skew)/;\r\nvar addUnit = (value, unit) => _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.is.num(value) && value !== 0 ? value + unit : value;\r\nvar isValueIdentity = (value, id) => _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.is.arr(value) ? value.every((v) => isValueIdentity(v, id)) : _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.is.num(value) ? value === id : parseFloat(value) === id;\r\nvar AnimatedStyle = class extends _react_spring_animated__WEBPACK_IMPORTED_MODULE_3__.AnimatedObject {\r\n  constructor({ x, y, z, ...style }) {\r\n    const inputs = [];\r\n    const transforms = [];\r\n    if (x || y || z) {\r\n      inputs.push([x || 0, y || 0, z || 0]);\r\n      transforms.push((xyz) => [\r\n        `translate3d(${xyz.map((v) => addUnit(v, \"px\")).join(\",\")})`,\r\n        // prettier-ignore\r\n        isValueIdentity(xyz, 0)\r\n      ]);\r\n    }\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.eachProp)(style, (value, key) => {\r\n      if (key === \"transform\") {\r\n        inputs.push([value || \"\"]);\r\n        transforms.push((transform) => [transform, transform === \"\"]);\r\n      } else if (domTransforms.test(key)) {\r\n        delete style[key];\r\n        if (_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.is.und(value))\r\n          return;\r\n        const unit = pxTransforms.test(key) ? \"px\" : degTransforms.test(key) ? \"deg\" : \"\";\r\n        inputs.push((0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.toArray)(value));\r\n        transforms.push(\r\n          key === \"rotate3d\" ? ([x2, y2, z2, deg]) => [\r\n            `rotate3d(${x2},${y2},${z2},${addUnit(deg, unit)})`,\r\n            isValueIdentity(deg, 0)\r\n          ] : (input) => [\r\n            `${key}(${input.map((v) => addUnit(v, unit)).join(\",\")})`,\r\n            isValueIdentity(input, key.startsWith(\"scale\") ? 1 : 0)\r\n          ]\r\n        );\r\n      }\r\n    });\r\n    if (inputs.length) {\r\n      style.transform = new FluidTransform(inputs, transforms);\r\n    }\r\n    super(style);\r\n  }\r\n};\r\nvar FluidTransform = class extends _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.FluidValue {\r\n  constructor(inputs, transforms) {\r\n    super();\r\n    this.inputs = inputs;\r\n    this.transforms = transforms;\r\n    this._value = null;\r\n  }\r\n  get() {\r\n    return this._value || (this._value = this._get());\r\n  }\r\n  _get() {\r\n    let transform = \"\";\r\n    let identity = true;\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.each)(this.inputs, (input, i) => {\r\n      const arg1 = (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.getFluidValue)(input[0]);\r\n      const [t, id] = this.transforms[i](\r\n        _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.is.arr(arg1) ? arg1 : input.map(_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.getFluidValue)\r\n      );\r\n      transform += \" \" + t;\r\n      identity = identity && id;\r\n    });\r\n    return identity ? \"none\" : transform;\r\n  }\r\n  // Start observing our inputs once we have an observer.\r\n  observerAdded(count) {\r\n    if (count == 1)\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.each)(\r\n        this.inputs,\r\n        (input) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.each)(\r\n          input,\r\n          (value) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.hasFluidValue)(value) && (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.addFluidObserver)(value, this)\r\n        )\r\n      );\r\n  }\r\n  // Stop observing our inputs once we have no observers.\r\n  observerRemoved(count) {\r\n    if (count == 0)\r\n      (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.each)(\r\n        this.inputs,\r\n        (input) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.each)(\r\n          input,\r\n          (value) => (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.hasFluidValue)(value) && (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.removeFluidObserver)(value, this)\r\n        )\r\n      );\r\n  }\r\n  eventObserved(event) {\r\n    if (event.type == \"change\") {\r\n      this._value = null;\r\n    }\r\n    (0,_react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.callFluidObservers)(this, event);\r\n  }\r\n};\r\n\r\n// src/primitives.ts\r\nvar primitives = [\r\n  \"a\",\r\n  \"abbr\",\r\n  \"address\",\r\n  \"area\",\r\n  \"article\",\r\n  \"aside\",\r\n  \"audio\",\r\n  \"b\",\r\n  \"base\",\r\n  \"bdi\",\r\n  \"bdo\",\r\n  \"big\",\r\n  \"blockquote\",\r\n  \"body\",\r\n  \"br\",\r\n  \"button\",\r\n  \"canvas\",\r\n  \"caption\",\r\n  \"cite\",\r\n  \"code\",\r\n  \"col\",\r\n  \"colgroup\",\r\n  \"data\",\r\n  \"datalist\",\r\n  \"dd\",\r\n  \"del\",\r\n  \"details\",\r\n  \"dfn\",\r\n  \"dialog\",\r\n  \"div\",\r\n  \"dl\",\r\n  \"dt\",\r\n  \"em\",\r\n  \"embed\",\r\n  \"fieldset\",\r\n  \"figcaption\",\r\n  \"figure\",\r\n  \"footer\",\r\n  \"form\",\r\n  \"h1\",\r\n  \"h2\",\r\n  \"h3\",\r\n  \"h4\",\r\n  \"h5\",\r\n  \"h6\",\r\n  \"head\",\r\n  \"header\",\r\n  \"hgroup\",\r\n  \"hr\",\r\n  \"html\",\r\n  \"i\",\r\n  \"iframe\",\r\n  \"img\",\r\n  \"input\",\r\n  \"ins\",\r\n  \"kbd\",\r\n  \"keygen\",\r\n  \"label\",\r\n  \"legend\",\r\n  \"li\",\r\n  \"link\",\r\n  \"main\",\r\n  \"map\",\r\n  \"mark\",\r\n  \"menu\",\r\n  \"menuitem\",\r\n  \"meta\",\r\n  \"meter\",\r\n  \"nav\",\r\n  \"noscript\",\r\n  \"object\",\r\n  \"ol\",\r\n  \"optgroup\",\r\n  \"option\",\r\n  \"output\",\r\n  \"p\",\r\n  \"param\",\r\n  \"picture\",\r\n  \"pre\",\r\n  \"progress\",\r\n  \"q\",\r\n  \"rp\",\r\n  \"rt\",\r\n  \"ruby\",\r\n  \"s\",\r\n  \"samp\",\r\n  \"script\",\r\n  \"section\",\r\n  \"select\",\r\n  \"small\",\r\n  \"source\",\r\n  \"span\",\r\n  \"strong\",\r\n  \"style\",\r\n  \"sub\",\r\n  \"summary\",\r\n  \"sup\",\r\n  \"table\",\r\n  \"tbody\",\r\n  \"td\",\r\n  \"textarea\",\r\n  \"tfoot\",\r\n  \"th\",\r\n  \"thead\",\r\n  \"time\",\r\n  \"title\",\r\n  \"tr\",\r\n  \"track\",\r\n  \"u\",\r\n  \"ul\",\r\n  \"var\",\r\n  \"video\",\r\n  \"wbr\",\r\n  // SVG\r\n  \"circle\",\r\n  \"clipPath\",\r\n  \"defs\",\r\n  \"ellipse\",\r\n  \"foreignObject\",\r\n  \"g\",\r\n  \"image\",\r\n  \"line\",\r\n  \"linearGradient\",\r\n  \"mask\",\r\n  \"path\",\r\n  \"pattern\",\r\n  \"polygon\",\r\n  \"polyline\",\r\n  \"radialGradient\",\r\n  \"rect\",\r\n  \"stop\",\r\n  \"svg\",\r\n  \"text\",\r\n  \"tspan\"\r\n];\r\n\r\n// src/index.ts\r\n\r\n_react_spring_core__WEBPACK_IMPORTED_MODULE_0__.Globals.assign({\r\n  batchedUpdates: react_dom__WEBPACK_IMPORTED_MODULE_1__.unstable_batchedUpdates,\r\n  createStringInterpolator: _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.createStringInterpolator,\r\n  colors: _react_spring_shared__WEBPACK_IMPORTED_MODULE_2__.colors\r\n});\r\nvar host = (0,_react_spring_animated__WEBPACK_IMPORTED_MODULE_3__.createHost)(primitives, {\r\n  applyAnimatedValues,\r\n  createAnimatedStyle: (style) => new AnimatedStyle(style),\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props\r\n});\r\nvar animated = host.animated;\r\n\r\n//# sourceMappingURL=react-spring_web.modern.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs\n");

/***/ })

};
;